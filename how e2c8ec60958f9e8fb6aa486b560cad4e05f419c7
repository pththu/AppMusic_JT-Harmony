[33mcommit 2a08ba451444cf3d2ea60c8511c05d89545b8faa[m
Merge: e7cab58 749938e
Author: duytuan2401 <levoduytuan2401@gmail.com>
Date:   Wed Oct 1 15:26:03 2025 +0700

    WIP on main: e7cab58 Merge pull request #2 from pththu/thu

[1mdiff --cc server/src/server.js[m
[1mindex 5959499,5959499..a9d5391[m
[1m--- a/server/src/server.js[m
[1m+++ b/server/src/server.js[m
[36m@@@ -1,90 -1,90 +1,107 @@@[m
[31m--const express = require('express')[m
[31m--const http = require('http')[m
[31m--const cors = require('cors')[m
[31m--const morgan = require('morgan')[m
[31m--const path = require('path')[m
[31m--const cookieParser = require('cookie-parser')[m
[31m--const bodyParser = require('body-parser')[m
[31m--const { sequelize } = require('./models')[m
[31m--const { API_PREFIX } = require('./configs/constants')[m
[31m--const { authenticateToken } = require('./middlewares/authentication')[m
[31m--const dotenv = require('dotenv');[m
[32m++const express = require("express");[m
[32m++const http = require("http");[m
[32m++const cors = require("cors");[m
[32m++const morgan = require("morgan");[m
[32m++const path = require("path");[m
[32m++const cookieParser = require("cookie-parser");[m
[32m++const bodyParser = require("body-parser");[m
[32m++const { sequelize } = require("./models");[m
[32m++const { API_PREFIX } = require("./configs/constants");[m
[32m++const { authenticateToken } = require("./middlewares/authentication");[m
[32m++const dotenv = require("dotenv");[m
  [m
  dotenv.config();[m
  [m
[31m--const app = express()[m
[31m--const server = http.createServer(app)[m
[32m++const app = express();[m
[32m++const server = http.createServer(app);[m
  [m
[31m--app.set('trust proxy', true)[m
[32m++app.set("trust proxy", true);[m
  [m
  // Middleware[m
[31m--app.use(cors({[m
[31m--  origin: ['http://localhost:3000'], // frontend[m
[31m--  credentials: true[m
[31m--}))[m
[31m--[m
[31m--app.use(express.json({ limit: '50mb' }))[m
[31m--app.use(express.urlencoded({ extended: true }))[m
[31m--app.use(cookieParser())[m
[32m++// app.use([m
[32m++//   cors({[m
[32m++//     origin: ["http://localhost:3000"], // frontend[m
[32m++//     credentials: true,[m
[32m++//   })[m
[32m++// );[m
[32m++app.use([m
[32m++  cors({[m
[32m++    origin: ["http://localhost:3000", "http://192.168.1.30:3000"], // Thêm địa chỉ IP của bạn[m
[32m++    credentials: true,[m
[32m++  })[m
[32m++);[m
  [m
[32m++app.use(express.json({ limit: "50mb" }));[m
[32m++app.use(express.urlencoded({ extended: true }));[m
[32m++app.use(cookieParser());[m
  [m
  // Static files[m
[31m--app.use('/static', express.static(path.join(__dirname, 'public')));[m
[31m--app.use(`${API_PREFIX}/uploads/avatars`, express.static(path.join(__dirname, 'uploads', 'avatars')));[m
[32m++app.use("/static", express.static(path.join(__dirname, "public")));[m
[32m++app.use([m
[32m++  `${API_PREFIX}/uploads/avatars`,[m
[32m++  express.static(path.join(__dirname, "uploads", "avatars"))[m
[32m++);[m
  [m
  const setupRoutes = () => {[m
    // PUBLIC ROUTES[m
    const publicRoutes = [[m
[31m--    'auth',      // Login/register[m
[31m--    'roles'      // Admin routes[m
[31m--  ][m
[32m++    "auth", // Login/register[m
[32m++    "roles", // Admin routes[m
[32m++  ];[m
  [m
    // PROTECTED ROUTES - Bắt buộc phải đăng nhập[m
    const protectedRoutes = [[m
[31m--    'users',     // Quản lý profile user[m
[31m--    'favorites',     // Yêu thích[m
[31m--    'follows',       // Theo dõi[m
[31m--    'history',       // Lịch sử nghe nhạc[m
[31m--    'notifications', // Thông báo[m
[31m--    'playlists',     // Playlist cá nhân[m
[31m--    'posts',         // Đăng bài[m
[31m--    'comments',       // Comment (cần đăng nhập mới comment được)[m
[31m--    'genres',    // Xem thể loại nhạc[m
[31m--    'artists',   // Xem thông tin nghệ sĩ[m
[31m--    'albums',    // Xem album[m
[31m--    'search',     // Tìm kiếm công khai[m
[31m--    'songs',        // Xem bài hát (public), upload bài hát (private)[m
[31m--    'recommend',    // Gợi ý (có thể cá nhân hóa nếu đăng nhập)[m
[31m--[m
[31m--    'albumSongs'[m
[31m--  ][m
[32m++    "users", // Quản lý profile user[m
[32m++    "favorites", // Yêu thích[m
[32m++    "follows", // Theo dõi[m
[32m++    "history", // Lịch sử nghe nhạc[m
[32m++    "notifications", // Thông báo[m
[32m++    "playlists", // Playlist cá nhân[m
[32m++    "posts", // Đăng bài[m
[32m++    "comments", // Comment (cần đăng nhập mới comment được)[m
[32m++    "genres", // Xem thể loại nhạc[m
[32m++    "artists", // Xem thông tin nghệ sĩ[m
[32m++    "albums", // Xem album[m
[32m++    "search", // Tìm kiếm công khai[m
[32m++    "songs", // Xem bài hát (public), upload bài hát (private)[m
[32m++    "recommend", // Gợi ý (có thể cá nhân hóa nếu đăng nhập)[m
[32m++[m
[32m++    "albumSongs",[m
[32m++  ];[m
  [m
    // Setup public routes[m
[31m--  publicRoutes.forEach(route => {[m
[31m--    app.use(`${API_PREFIX}/${route}`, require(`./routes/${route}Route`))[m
[31m--  })[m
[32m++  publicRoutes.forEach((route) => {[m
[32m++    app.use(`${API_PREFIX}/${route}`, require(`./routes/${route}Route`));[m
[32m++  });[m
  [m
    // Setup protected routes với authentication bắt buộc[m
[31m--  protectedRoutes.forEach(route => {[m
[31m--    app.use(`${API_PREFIX}/${route}`, authenticateToken, require(`./routes/${route}Route`))[m
[31m--  })[m
[31m--}[m
[32m++  protectedRoutes.forEach((route) => {[m
[32m++    app.use([m
[32m++      `${API_PREFIX}/${route}`,[m
[32m++      authenticateToken,[m
[32m++      require(`./routes/${route}Route`)[m
[32m++    );[m
[32m++  });[m
[32m++};[m
  [m
  setupRoutes();[m
  [m
  // Start server[m
  async function startServer() {[m
    try {[m
[31m--    await sequelize.sync()[m
[31m--    console.log('✅ Database synchronized successfully')[m
[32m++    await sequelize.sync();[m
[32m++    console.log("✅ Database synchronized successfully");[m
  [m
      server.listen(process.env.PORT || 3000, () => {[m
[31m--      console.log(`🎶 Music Server is running at http://localhost:${process.env.PORT || 8000}`)[m
[31m--    })[m
[31m--[m
[32m++      console.log([m
[32m++        `🎶 Music Server is running at http://192.168.1.30:${[m
[32m++          process.env.PORT || 8000[m
[32m++        }`[m
[32m++      );[m
[32m++    });[m
    } catch (error) {[m
[31m--    console.error('❌ Error starting server:', error)[m
[32m++    console.error("❌ Error starting server:", error);[m
    }[m
  }[m
  [m
[31m--startServer()[m
[32m++startServer();[m
