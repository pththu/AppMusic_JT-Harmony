[33mcommit 91042207ec948777a4119694a63f61fab0df30a0[m
Merge: 2133a92 4677648
Author: duytuan2401 <levoduytuan2401@gmail.com>
Date:   Thu Oct 9 20:14:06 2025 +0700

    WIP on tuan: 2133a92 Merge pull request #8 from pththu/thu

[1mdiff --cc mobile/app.config.js[m
[1mindex b36e0ae,b36e0ae..2f61a91[m
[1m--- a/mobile/app.config.js[m
[1m+++ b/mobile/app.config.js[m
[36m@@@ -1,13 -1,13 +1,13 @@@[m
  import 'dotenv/config';[m
  [m
  export default ({ config }) => ({[m
[31m--  ...config,[m
[31m--  extra: {[m
[31m--    ...config.extra,[m
[31m--    "eas": {[m
[31m--      "projectId": "d5918968-3bf6-466a-b726-07b812636bd3"[m
[32m++    ...config,[m
[32m++    extra: {[m
[32m++        ...config.extra,[m
[32m++        "eas": {[m
[32m++            "projectId": "d5918968-3bf6-466a-b726-07b812636bd3"[m
[32m++        },[m
[32m++        API_URL: process.env.API_URL || 'http://192.168.1.31:3000',[m
[32m++        GOOGLE_OAUTH_CLIENT_ID_APP: process.env.GOOGLE_OAUTH_CLIENT_ID_APP || "",[m
      },[m
[31m--    API_URL: process.env.API_URL || '',[m
[31m--    GOOGLE_OAUTH_CLIENT_ID_APP: process.env.GOOGLE_OAUTH_CLIENT_ID_APP || "",[m
[31m--  },[m
  });[m
[1mdiff --cc mobile/app.json[m
[1mindex 97aaef1,97aaef1..28ecfbb[m
[1m--- a/mobile/app.json[m
[1m+++ b/mobile/app.json[m
[36m@@@ -41,7 -41,7 +41,7 @@@[m
        "eas": {[m
          "projectId": "d5918968-3bf6-466a-b726-07b812636bd3"[m
        },[m
[31m--      "API_URL": "http://10.107.151.251:3000/api/v1/",[m
[32m++      "API_URL": "http://192.168.1.19:3000/api/v1/",[m
        "GOOGLE_OAUTH_CLIENT_ID_APP": "145190840857-ild54e2gkkbjas6f2km11b2s156mj05c.apps.googleusercontent.com"[m
      }[m
    }[m
[1mdiff --cc mobile/app/(screens)/AllSongsScreen.tsx[m
[1mindex 6351393,6351393..5f5714f[m
[1m--- a/mobile/app/(screens)/AllSongsScreen.tsx[m
[1m+++ b/mobile/app/(screens)/AllSongsScreen.tsx[m
[36m@@@ -4,6 -4,6 +4,7 @@@[m [mimport Icon from 'react-native-vector-i[m
  import HeaderBackButton from '@/components/button/HeaderBackButton';[m
  import SongItem from '@/components/items/SongItem';[m
  import { useLocalSearchParams, useRouter } from 'expo-router';[m
[32m++import { useTheme } from '@/components/ThemeContext';[m
  [m
  const sampleSongs = [[m
    {[m
[36m@@@ -73,6 -73,6 +74,9 @@@[m [mexport default function AllSongsScreen([m
    const params = useLocalSearchParams();[m
    const artist = params.artist ? JSON.parse(params.artist as string) : { name: 'Artist' };[m
  [m
[32m++  const { theme } = useTheme();[m
[32m++  const primaryIconColor = theme === 'dark' ? 'white' : 'black';[m
[32m++[m
    const renderItem = ({ item }: any) => ([m
      <SongItem[m
        title={item.title}[m
[36m@@@ -83,10 -83,10 +87,10 @@@[m
    );[m
  [m
    return ([m
[31m--    <View className="flex-1  bg-[#0E0C1F]">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F]">[m
        <HeaderBackButton onPress={() => router.back()} />[m
[31m--      <Text className="text-white text-2xl font-bold px-4 mb-4">All Songs</Text>[m
[31m--      <Text className="text-white text-lg font-semibold px-4 mb-2">[m
[32m++      <Text className="text-black dark:text-white text-2xl font-bold px-4 mb-4">All Songs</Text>[m
[32m++      <Text className="text-black dark:text-white text-lg font-semibold px-4 mb-2">[m
          {artist.name}[m
        </Text>[m
        <FlatList[m
[36m@@@ -95,8 -95,8 +99,8 @@@[m
          renderItem={renderItem}[m
        />[m
        <TouchableOpacity className="bg-green-600 rounded-full px-5 py-3 m-4 flex-row items-center justify-center">[m
[31m--        <Icon name="play" size={20} color="white" />[m
[31m--        <Text className="text-white font-semibold ml-3">Play All</Text>[m
[32m++        <Icon name="play" size={20} color={primaryIconColor} />[m
[32m++        <Text className="text-black dark:text-white font-semibold ml-3">Play All</Text>[m
        </TouchableOpacity>[m
      </View>[m
    );[m
[1mdiff --cc mobile/app/(screens)/ArtistScreen.tsx[m
[1mindex 545a5a5,545a5a5..3eb5652[m
[1m--- a/mobile/app/(screens)/ArtistScreen.tsx[m
[1m+++ b/mobile/app/(screens)/ArtistScreen.tsx[m
[36m@@@ -81,7 -81,7 +81,7 @@@[m [mexport default function ArtistScreen() [m
    );[m
  [m
    return ([m
[31m--    <ScrollView className="flex-1  bg-[#0E0C1F]">[m
[32m++    <ScrollView className="flex-1 bg-white dark:bg-[#0E0C1F]">[m
        {/* Container cho ·∫£nh v√† overlay */}[m
        <View className="relative w-full h-72">[m
          <Image[m
[36m@@@ -110,7 -110,7 +110,7 @@@[m
          {/* <Text className="text-white text-3xl font-bold mb-1">[m
            {artist.name}[m
          </Text> */}[m
[31m--        <Text className="text-gray-400 mb-4">[m
[32m++        <Text className="text-gray-600 dark:text-gray-400 mb-4">[m
            {artist.monthlyListeners} monthly listeners[m
          </Text>[m
          <View className="flex-row space-x-4 mb-4">[m
[36m@@@ -134,11 -134,11 +134,11 @@@[m
            />[m
          </View>[m
          <View className="flex-row justify-between items-center mb-2">[m
[31m--          <Text className="text-white text-xl font-bold">Popular releases</Text>[m
[32m++          <Text className="text-black dark:text-white text-xl font-bold">Popular releases</Text>[m
            <TouchableOpacity[m
              onPress={() => handlePressSeeMore()}[m
            >[m
[31m--            <Text className="text-gray-400 font-semibold">See more</Text>[m
[32m++            <Text className="text-gray-600 dark:text-gray-400 font-semibold">See more</Text>[m
            </TouchableOpacity>[m
          </View>[m
          <FlatList[m
[1mdiff --cc mobile/app/(screens)/ArtistsFollowingScreen.tsx[m
[1mindex d80373e,d80373e..97934a3[m
[1m--- a/mobile/app/(screens)/ArtistsFollowingScreen.tsx[m
[1m+++ b/mobile/app/(screens)/ArtistsFollowingScreen.tsx[m
[36m@@@ -10,6 -10,6 +10,7 @@@[m [mimport [m
    View,[m
  } from "react-native";[m
  import Icon from "react-native-vector-icons/Ionicons";[m
[32m++import { useTheme } from '@/components/ThemeContext';[m
  [m
  const artists = [[m
    {[m
[36m@@@ -64,6 -64,6 +65,9 @@@[m
  [m
  export default function ArtistsFollowingScreen({ route }: { route: any }) {[m
    const navigation = useNavigation();[m
[32m++  const { theme } = useTheme();[m
[32m++  const primaryIconColor = theme === 'dark' ? 'white' : 'black';[m
[32m++  const secondaryIconColor = theme === 'dark' ? '#888' : 'gray';[m
  [m
    const handleBackPress = () => {[m
      if (route?.params?.fromProfile) {[m
[36m@@@ -73,29 -73,29 +77,29 @@@[m
      }[m
    };[m
    return ([m
[31m--    <View className="flex-1 bg-[#0E0C1F] px-4 pt-4">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F] px-4 pt-4">[m
        <View className="flex-row items-center mb-4">[m
          <TouchableOpacity onPress={() => router.back()} className="mr-4">[m
[31m--          <Icon name="arrow-back" size={24} color="white" />[m
[32m++          <Icon name="arrow-back" size={24} color={primaryIconColor} />[m
          </TouchableOpacity>[m
          <View>[m
[31m--          <Text className="text-white text-2xl font-semibold mb-2">[m
[32m++          <Text className="text-black dark:text-white text-2xl font-semibold mb-2">[m
              Artists Following[m
            </Text>[m
[31m--          <Text className="text-gray-400">8 artists following</Text>[m
[32m++          <Text className="text-gray-600 dark:text-gray-400">8 artists following</Text>[m
          </View>[m
        </View>[m
        <View className="flex-row items-center mb-4">[m
[31m--        <View className="flex-1 bg-gray-800 rounded-md p-2 flex-row items-center">[m
[31m--          <Icon name="search" size={20} color="#888" />[m
[32m++        <View className="flex-1 bg-gray-200 dark:bg-gray-800 rounded-md p-2 flex-row items-center">[m
[32m++          <Icon name="search" size={20} color={secondaryIconColor} />[m
            <TextInput[m
              placeholder="Search"[m
[31m--            placeholderTextColor="#888"[m
[31m--            className="ml-2 flex-1 text-white"[m
[32m++            placeholderTextColor={secondaryIconColor}[m
[32m++            className="ml-2 flex-1 text-black dark:text-white"[m
            />[m
          </View>[m
          <TouchableOpacity className="ml-4">[m
[31m--          <Icon name="swap-vertical" size={24} color="#888" />[m
[32m++          <Icon name="swap-vertical" size={24} color={secondaryIconColor} />[m
          </TouchableOpacity>[m
        </View>[m
        <FlatList[m
[36m@@@ -109,7 -109,7 +113,7 @@@[m
                source={{ uri: item.image }}[m
                className="w-20 h-20 rounded-full mb-2"[m
              />[m
[31m--            <Text className="text-white text-center">{item.name}</Text>[m
[32m++            <Text className="text-black dark:text-white text-center">{item.name}</Text>[m
            </TouchableOpacity>[m
          )}[m
        />[m
[1mdiff --cc mobile/app/(screens)/DownloadQualityScreen.tsx[m
[1mindex 53c1eec,53c1eec..635a2c0[m
[1m--- a/mobile/app/(screens)/DownloadQualityScreen.tsx[m
[1m+++ b/mobile/app/(screens)/DownloadQualityScreen.tsx[m
[36m@@@ -20,13 -20,13 +20,13 @@@[m [mexport default function DownloadQuality[m
    };[m
  [m
    return ([m
[31m--    <View className="flex-1 bg-[#0E0C1F] p-6">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F] p-6">[m
        <View className="flex-row justify-between items-center mb-6">[m
[31m--        <Text className="text-white text-xl font-bold">[m
[32m++        <Text className="text-black dark:text-white text-xl font-bold">[m
            Select Download Quality[m
          </Text>[m
          <TouchableOpacity onPress={() => router.back()}>[m
[31m--          <Text className="text-white text-lg">X</Text>[m
[32m++          <Text className="text-black dark:text-white text-lg">X</Text>[m
          </TouchableOpacity>[m
        </View>[m
  [m
[36m@@@ -41,10 -41,10 +41,10 @@@[m
        ))}[m
  [m
        <TouchableOpacity[m
[31m--        className="bg-gray-700 rounded-md py-3 mt-6 items-center"[m
[32m++        className="bg-gray-300 dark:bg-gray-700 rounded-md py-3 mt-6 items-center"[m
          onPress={() => router.back()}[m
        >[m
[31m--        <Text className="text-white font-semibold text-lg">Done</Text>[m
[32m++        <Text className="text-black dark:text-white font-semibold text-lg">Done</Text>[m
        </TouchableOpacity>[m
      </View>[m
    );[m
[1mdiff --cc mobile/app/(screens)/DownloadsScreen.tsx[m
[1mindex 9e539b1,9e539b1..a6f2c9a[m
[1m--- a/mobile/app/(screens)/DownloadsScreen.tsx[m
[1m+++ b/mobile/app/(screens)/DownloadsScreen.tsx[m
[36m@@@ -2,6 -2,6 +2,7 @@@[m [mimport React from 'react'[m
  import { View, Text, FlatList, TextInput, TouchableOpacity, Image } from 'react-native';[m
  import Icon from 'react-native-vector-icons/Ionicons';[m
  import { useNavigation } from '@react-navigation/native';[m
[32m++import { useTheme } from '@/components/ThemeContext';[m
  [m
  const downloadedSongs = [[m
    { id: '1', title: 'Inside Out', artist: 'The Chainsmokers, Charlee', image: 'https://i.scdn.co/image/ab67616d00001e02a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1' },[m
[36m@@@ -14,29 -14,29 +15,32 @@@[m
  [m
  export default function DownloadsScreen() {[m
    const navigation = useNavigation();[m
[32m++  const { theme } = useTheme();[m
[32m++  const primaryIconColor = theme === 'dark' ? 'white' : 'black';[m
[32m++  const secondaryIconColor = theme === 'dark' ? '#888' : 'gray';[m
  [m
    return ([m
[31m--    <View className="flex-1 bg-black px-4 pt-4">[m
[32m++    <View className="flex-1 bg-white dark:bg-black px-4 pt-4">[m
        <View className="flex-row items-center mb-4">[m
          <TouchableOpacity onPress={() => navigation.goBack()} className="mr-4">[m
[31m--          <Icon name="arrow-back" size={24} color="white" />[m
[32m++          <Icon name="arrow-back" size={24} color={primaryIconColor} />[m
          </TouchableOpacity>[m
          <View>[m
[31m--          <Text className="text-white text-2xl font-semibold mb-2">Downloads</Text>[m
[31m--          <Text className="text-gray-400">210 songs downloaded</Text>[m
[32m++          <Text className="text-black dark:text-white text-2xl font-semibold mb-2">Downloads</Text>[m
[32m++          <Text className="text-gray-600 dark:text-gray-400">210 songs downloaded</Text>[m
          </View>[m
        </View>[m
        <View className="flex-row items-center mb-4">[m
[31m--        <View className="flex-1 bg-gray-800 rounded-md p-2 flex-row items-center">[m
[31m--          <Icon name="search" size={20} color="#888" />[m
[32m++        <View className="flex-1 bg-gray-200 dark:bg-gray-800 rounded-md p-2 flex-row items-center">[m
[32m++          <Icon name="search" size={20} color={secondaryIconColor} />[m
            <TextInput[m
              placeholder="Search"[m
[31m--            placeholderTextColor="#888"[m
[31m--            className="ml-2 flex-1 text-white"[m
[32m++            placeholderTextColor={secondaryIconColor}[m
[32m++            className="ml-2 flex-1 text-black dark:text-white"[m
            />[m
          </View>[m
          <TouchableOpacity className="ml-4">[m
[31m--          <Icon name="swap-vertical" size={24} color="#888" />[m
[32m++          <Icon name="swap-vertical" size={24} color={secondaryIconColor} />[m
          </TouchableOpacity>[m
        </View>[m
        <FlatList[m
[36m@@@ -46,11 -46,11 +50,11 @@@[m
            <TouchableOpacity className="flex-row items-center p-2">[m
              <Image source={{ uri: item.image }} className="w-12 h-12 rounded-md" />[m
              <View className="ml-4 flex-1">[m
[31m--              <Text className="text-white font-semibold">{item.title}</Text>[m
[31m--              <Text className="text-gray-400">{item.artist}</Text>[m
[32m++              <Text className="text-black dark:text-white font-semibold">{item.title}</Text>[m
[32m++              <Text className="text-gray-600 dark:text-gray-400">{item.artist}</Text>[m
              </View>[m
              <TouchableOpacity>[m
[31m--              <Text className="text-gray-400 text-2xl">‚ãÆ</Text>[m
[32m++              <Text className="text-gray-600 dark:text-gray-400 text-2xl">‚ãÆ</Text>[m
              </TouchableOpacity>[m
            </TouchableOpacity>[m
          )}[m
[1mdiff --cc mobile/app/(screens)/EditProfileScreen.tsx[m
[1mindex 3259949,3259949..f4d4ce6[m
[1m--- a/mobile/app/(screens)/EditProfileScreen.tsx[m
[1m+++ b/mobile/app/(screens)/EditProfileScreen.tsx[m
[36m@@@ -6,6 -6,6 +6,7 @@@[m [mimport React, { useState } from "react"[m
  import { Alert, ScrollView, Text, TouchableOpacity, View } from "react-native";[m
  import DateTimePicker, { DateType } from "react-native-ui-datepicker";[m
  import Icon from "react-native-vector-icons/Ionicons";[m
[32m++import { useTheme } from '@/components/ThemeContext';[m
  [m
  export default function EditProfileScreen() {[m
    const [username, setUsername] = useState("");[m
[36m@@@ -16,6 -16,6 +17,8 @@@[m
    const [gender, setGender] = useState("");[m
    const [bio, setBio] = useState("");[m
    const [errors, setErrors] = useState<{ [key: string]: string }>({});[m
[32m++  const { theme } = useTheme();[m
[32m++  const primaryIconColor = theme === 'dark' ? 'white' : 'black';[m
  [m
    const validateEmail = (email: string) => {[m
      const re = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/;[m
[36m@@@ -59,12 -59,12 +62,12 @@@[m
    };[m
  [m
    return ([m
[31m--    <ScrollView className="flex-1 bg-[#0E0C1F] px-4 pt-4">[m
[32m++    <ScrollView className="flex-1 bg-white dark:bg-[#0E0C1F] px-4 pt-4">[m
        <View className="flex-row items-center mb-4">[m
          <TouchableOpacity onPress={() => router.back()} className="mr-4">[m
[31m--          <Icon name="arrow-back" size={24} color="white" />[m
[32m++          <Icon name="arrow-back" size={24} color={primaryIconColor} />[m
          </TouchableOpacity>[m
[31m--        <Text className="text-white text-3xl font-extrabold mb-6 text-center">[m
[32m++        <Text className="text-black dark:text-white text-3xl font-extrabold mb-6 text-center">[m
            Personal Information[m
          </Text>[m
        </View>[m
[36m@@@ -95,18 -95,18 +98,18 @@@[m
          iconName="badge"[m
        />[m
  [m
[31m--      <Text className="text-gray-300 mb-1">Date of Birth</Text>[m
[32m++      <Text className="text-gray-700 dark:text-gray-300 mb-1">Date of Birth</Text>[m
        <TouchableOpacity[m
[31m--        className="bg-gray-800 rounded-md p-3 mb-4"[m
[32m++        className="bg-gray-200 dark:bg-gray-800 rounded-md p-3 mb-4"[m
          onPress={() => setShowDatePicker(true)}[m
        >[m
[31m--        <Text className="text-white">[m
[32m++        <Text className="text-black dark:text-white">[m
            {dob ? formatDate(dob) : "Select date"}[m
          </Text>[m
        </TouchableOpacity>[m
        {errors.dob && <Text className="text-red-500 mb-2">{errors.dob}</Text>}[m
        {showDatePicker && ([m
[31m--        <View className="bg-gray-800 rounded-lg p-2">[m
[32m++        <View className="bg-gray-200 dark:bg-gray-800 rounded-lg p-2">[m
            <DateTimePicker[m
              mode="single"[m
              date={dob ? dayjs(dob) : dayjs()}[m
[1mdiff --cc mobile/app/(screens)/LikedSongsScreen.tsx[m
[1mindex fa054de,fa054de..f264d3d[m
[1m--- a/mobile/app/(screens)/LikedSongsScreen.tsx[m
[1m+++ b/mobile/app/(screens)/LikedSongsScreen.tsx[m
[36m@@@ -9,6 -9,6 +9,7 @@@[m [mimport [m
    View,[m
  } from "react-native";[m
  import Icon from "react-native-vector-icons/Ionicons";[m
[32m++import { useTheme } from '@/components/ThemeContext';[m
  [m
  const likedSongs = [[m
    {[m
[36m@@@ -57,27 -57,27 +58,29 @@@[m
  [m
  export default function LikedSongsScreen() {[m
    const navigation = useNavigation();[m
[32m++  const { theme } = useTheme();[m
[32m++  const primaryIconColor = theme === 'dark' ? 'white' : 'black';[m
  [m
    return ([m
[31m--    <View className="flex-1 bg-[#0E0C1F] px-4 pt-4">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F] px-4 pt-4">[m
        <View className="flex-row items-center mb-4">[m
          <TouchableOpacity onPress={() => navigation.goBack()} className="mr-4">[m
[31m--          <Icon name="arrow-back" size={24} color="white" />[m
[32m++          <Icon name="arrow-back" size={24} color={primaryIconColor} />[m
          </TouchableOpacity>[m
          <View>[m
[31m--          <Text className="text-white text-2xl font-semibold mb-2">[m
[32m++          <Text className="text-black dark:text-white text-2xl font-semibold mb-2">[m
              Liked Songs[m
            </Text>[m
[31m--          <Text className="text-gray-400">120 liked songs</Text>[m
[32m++          <Text className="text-gray-600 dark:text-gray-400">120 liked songs</Text>[m
          </View>[m
        </View>[m
        <View className="flex-row items-center mb-4">[m
[31m--        <View className="flex-1 bg-gray-800 rounded-md p-2 flex-row items-center">[m
[32m++        <View className="flex-1 bg-gray-200 dark:bg-gray-800 rounded-md p-2 flex-row items-center">[m
            <Icon name="search" size={20} color="#888" />[m
            <TextInput[m
              placeholder="Search"[m
              placeholderTextColor="#888"[m
[31m--            className="ml-2 flex-1 text-white"[m
[32m++            className="ml-2 flex-1 text-black dark:text-white"[m
            />[m
          </View>[m
          <TouchableOpacity className="ml-4">[m
[36m@@@ -94,11 -94,11 +97,11 @@@[m
                className="w-12 h-12 rounded-md"[m
              />[m
              <View className="ml-4 flex-1">[m
[31m--              <Text className="text-white font-semibold">{item.title}</Text>[m
[31m--              <Text className="text-gray-400">{item.artist}</Text>[m
[32m++              <Text className="text-black dark:text-white font-semibold">{item.title}</Text>[m
[32m++              <Text className="text-gray-600 dark:text-gray-400">{item.artist}</Text>[m
              </View>[m
              <TouchableOpacity>[m
[31m--              <Text className="text-gray-400 text-2xl">‚ãÆ</Text>[m
[32m++              <Text className="text-gray-600 dark:text-gray-400 text-2xl">‚ãÆ</Text>[m
              </TouchableOpacity>[m
            </TouchableOpacity>[m
          )}[m
[1mdiff --cc mobile/app/(screens)/MusicLanguageScreen.tsx[m
[1mindex 5a21b29,5a21b29..38c647d[m
[1m--- a/mobile/app/(screens)/MusicLanguageScreen.tsx[m
[1m+++ b/mobile/app/(screens)/MusicLanguageScreen.tsx[m
[36m@@@ -29,11 -29,11 +29,11 @@@[m [mexport default function MusicLanguageSc[m
    };[m
  [m
    return ([m
[31m--    <View className="flex-1 	bg-[#0E0C1F] p-6">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F] p-6">[m
        <View className="flex-row justify-between items-center mb-6">[m
[31m--        <Text className="text-white text-xl font-bold">Select Language(s)</Text>[m
[32m++        <Text className="text-black dark:text-white text-xl font-bold">Select Language(s)</Text>[m
          <TouchableOpacity onPress={() => router.back()}>[m
[31m--          <Text className="text-white text-lg">X</Text>[m
[32m++          <Text className="text-black dark:text-white text-lg">X</Text>[m
          </TouchableOpacity>[m
        </View>[m
        <ScrollView>[m
[36m@@@ -43,21 -43,21 +43,21 @@@[m
                key={language}[m
                className={`w-1/2 p-3 mb-4 rounded-md ${[m
                  settings?.musicLanguages.includes(language)[m
[31m--                  ? "bg-gray-700"[m
[31m--                  : "bg-gray-900"[m
[32m++                  ? "bg-gray-300 dark:bg-gray-700"[m
[32m++                  : "bg-gray-100 dark:bg-gray-900"[m
                }`}[m
                onPress={() => toggleLanguage(language)}[m
              >[m
[31m--              <Text className="text-white text-center">{language}</Text>[m
[32m++              <Text className="text-black dark:text-white text-center">{language}</Text>[m
              </TouchableOpacity>[m
            ))}[m
          </View>[m
        </ScrollView>[m
        <TouchableOpacity[m
[31m--        className="bg-gray-700 rounded-md py-3 mt-6 items-center"[m
[32m++        className="bg-gray-300 dark:bg-gray-700 rounded-md py-3 mt-6 items-center"[m
          onPress={() => router.back()}[m
        >[m
[31m--        <Text className="text-white font-semibold text-lg">Done</Text>[m
[32m++        <Text className="text-black dark:text-white font-semibold text-lg">Done</Text>[m
        </TouchableOpacity>[m
      </View>[m
    );[m
[1mdiff --cc mobile/app/(screens)/PlaylistsScreen.tsx[m
[1mindex eece831,eece831..49aa596[m
[1m--- a/mobile/app/(screens)/PlaylistsScreen.tsx[m
[1m+++ b/mobile/app/(screens)/PlaylistsScreen.tsx[m
[36m@@@ -2,6 -2,6 +2,7 @@@[m [mimport React from 'react'[m
  import { View, Text, FlatList, TextInput, TouchableOpacity, Image } from 'react-native';[m
  import Icon from 'react-native-vector-icons/Ionicons';[m
  import { useNavigation } from '@react-navigation/native';[m
[32m++import { useTheme } from '@/components/ThemeContext';[m
  [m
  const playlists = [[m
    { id: '1', title: 'Maroon 5 Songs', type: 'Playlist', image: 'https://i.scdn.co/image/ab67616d00001e02a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1' },[m
[36m@@@ -12,25 -12,25 +13,27 @@@[m
  [m
  export default function PlaylistsScreen() {[m
    const navigation = useNavigation();[m
[32m++  const { theme } = useTheme();[m
[32m++  const primaryIconColor = theme === 'dark' ? 'white' : 'black';[m
  [m
    return ([m
[31m--    <View className="flex-1 bg-[#0E0C1F] px-4 pt-4">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F] px-4 pt-4">[m
        <View className="flex-row items-center mb-4">[m
          <TouchableOpacity onPress={() => navigation.goBack()} className="mr-4">[m
[31m--          <Icon name="arrow-back" size={24} color="white" />[m
[32m++          <Icon name="arrow-back" size={24} color={primaryIconColor} />[m
          </TouchableOpacity>[m
          <View>[m
[31m--          <Text className="text-white text-2xl font-semibold mb-2">Playlists</Text>[m
[31m--          <Text className="text-gray-400">12 playlists</Text>[m
[32m++          <Text className="text-black dark:text-white text-2xl font-semibold mb-2">Playlists</Text>[m
[32m++          <Text className="text-gray-600 dark:text-gray-400">12 playlists</Text>[m
          </View>[m
        </View>[m
        <View className="flex-row items-center mb-4">[m
[31m--        <View className="flex-1 bg-gray-800 rounded-md p-2 flex-row items-center">[m
[32m++        <View className="flex-1 bg-gray-200 dark:bg-gray-800 rounded-md p-2 flex-row items-center">[m
            <Icon name="search" size={20} color="#888" />[m
            <TextInput[m
              placeholder="Search"[m
              placeholderTextColor="#888"[m
[31m--            className="ml-2 flex-1 text-white"[m
[32m++            className="ml-2 flex-1 text-black dark:text-white"[m
            />[m
          </View>[m
          <TouchableOpacity className="ml-4">[m
[36m@@@ -44,8 -44,8 +47,8 @@@[m
            <TouchableOpacity className="flex-row items-center p-2">[m
              <Image source={{ uri: item.image }} className="w-24 h-24 rounded-md" />[m
              <View className="ml-4 flex-1 justify-center">[m
[31m--              <Text className="text-white font-semibold">{item.title}</Text>[m
[31m--              <Text className="text-gray-400">{item.type}</Text>[m
[32m++              <Text className="text-black dark:text-white font-semibold">{item.title}</Text>[m
[32m++              <Text className="text-gray-600 dark:text-gray-400">{item.type}</Text>[m
              </View>[m
            </TouchableOpacity>[m
          )}[m
[1mdiff --cc mobile/app/(screens)/QueueScreen.tsx[m
[1mindex 1baf43c,1baf43c..d9da0e9[m
[1m--- a/mobile/app/(screens)/QueueScreen.tsx[m
[1m+++ b/mobile/app/(screens)/QueueScreen.tsx[m
[36m@@@ -12,9 -12,9 +12,13 @@@[m [mimport Ionicons from 'react-native-vect[m
  // import { useNavigation } from '@react-navigation/native';[m
  import { router, useLocalSearchParams } from 'expo-router';[m
  import { useQueueStore } from '@/store/queueStore';[m
[32m++import { useTheme } from '@/components/ThemeContext';[m
  [m
  export default function QueueScreen() {[m
    const [autoRecommendations, setAutoRecommendations] = useState(true);[m
[32m++  const { theme } = useTheme();[m
[32m++  const primaryIconColor = theme === 'dark' ? 'white' : 'black';[m
[32m++  const secondaryIconColor = theme === 'dark' ? '#888' : 'gray';[m
  [m
    // Nh·∫≠n d·ªØ li·ªáu b√†i h√°t ƒëang ph√°t v√† h√†ng ƒë·ª£i t·ª´ params[m
    // const { nowPlaying, queue } = route.params;[m
[36m@@@ -34,41 -34,41 +38,41 @@@[m
      return ([m
        <View[m
          key={`${item.id}-${index}`}[m
[31m--        className={`flex-row items-center py-2 ${index > 0 ? 'border-b border-gray-700' : ''}`}[m
[32m++        className={`flex-row items-center py-2 ${index > 0 ? 'border-b border-gray-300 dark:border-gray-700' : ''}`}[m
        >[m
          <View className="mr-4">[m
            {isPlaying ? ([m
              <Ionicons name="volume-medium" size={24} color="#1ED760" />[m
            ) : ([m
[31m--            <Text className="text-gray-400 text-base w-6">{displayIndex}</Text>[m
[32m++            <Text className="text-gray-600 dark:text-gray-400 text-base w-6">{displayIndex}</Text>[m
            )}[m
          </View>[m
          <Image source={{ uri: item.image }} className="w-12 h-12 rounded-md" />[m
          <View className="ml-4 flex-1">[m
            <Text[m
[31m--            className={`font-semibold ${isPlaying ? 'text-green-400' : 'text-white'}`}[m
[32m++            className={`font-semibold ${isPlaying ? 'text-green-600 dark:text-green-400' : 'text-black dark:text-white'}`}[m
            >[m
              {item.title}[m
            </Text>[m
[31m--          <Text className="text-gray-400">[m
[32m++          <Text className="text-gray-600 dark:text-gray-400">[m
              {item.artists?.map(a => a.name).join(', ')}[m
            </Text>[m
          </View>[m
          <TouchableOpacity>[m
[31m--          <Icon name="more-vert" size={24} color="gray" />[m
[32m++          <Icon name="more-vert" size={24} color={secondaryIconColor} />[m
          </TouchableOpacity>[m
        </View>[m
      );[m
    };[m
  [m
    return ([m
[31m--    <View className="flex-1 bg-[#0E0C1F] p-4">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F] p-4">[m
        <View className="flex-row items-center mb-4">[m
          {/* N√∫t quay l·∫°i */}[m
          <TouchableOpacity onPress={() => router.back()}>[m
[31m--          <Ionicons name="chevron-down" size={28} color="white" />[m
[32m++          <Ionicons name="chevron-down" size={28} color={primaryIconColor} />[m
          </TouchableOpacity>[m
[31m--        <Text className="text-white text-xl font-semibold flex-1 text-center">[m
[32m++        <Text className="text-black dark:text-white text-xl font-semibold flex-1 text-center">[m
            In Queue[m
          </Text>[m
        </View>[m
[36m@@@ -83,9 -83,9 +87,9 @@@[m
              />[m
            )}[m
            <View>[m
[31m--            <Text className="text-gray-400 text-sm">Now Playing</Text>[m
[31m--            <Text className="text-white font-bold">{nowPlaying.title}</Text>[m
[31m--            <Text className="text-gray-400 text-sm">[m
[32m++            <Text className="text-gray-600 dark:text-gray-400 text-sm">Now Playing</Text>[m
[32m++            <Text className="text-black dark:text-white font-bold">{nowPlaying.title}</Text>[m
[32m++            <Text className="text-gray-600 dark:text-gray-400 text-sm">[m
                {nowPlaying.artists?.map(a => a.name).join(', ')}[m
              </Text>[m
            </View>[m
[36m@@@ -100,13 -100,13 +104,13 @@@[m
          showsVerticalScrollIndicator={false}[m
          contentContainerStyle={{ paddingBottom: 100 }}[m
          ListHeaderComponent={() => ([m
[31m--          <View className="flex-row justify-between items-center py-2 border-t border-gray-700">[m
[31m--            <Text className="text-white text-lg font-semibold">Queue</Text>[m
[32m++          <View className="flex-row justify-between items-center py-2 border-t border-gray-300 dark:border-gray-700">[m
[32m++            <Text className="text-black dark:text-white text-lg font-semibold">Queue</Text>[m
            </View>[m
          )}[m
          ListFooterComponent={() => ([m
            <View className="flex-row justify-between items-center mt-4">[m
[31m--            <Text className="text-white text-lg font-semibold">[m
[32m++            <Text className="text-black dark:text-white text-lg font-semibold">[m
                Auto-recommendations[m
              </Text>[m
              <Switch[m
[1mdiff --cc mobile/app/(screens)/SongInfoScreen.tsx[m
[1mindex 55bca01,55bca01..101cf0f[m
[1m--- a/mobile/app/(screens)/SongInfoScreen.tsx[m
[1m+++ b/mobile/app/(screens)/SongInfoScreen.tsx[m
[36m@@@ -9,6 -9,6 +9,7 @@@[m [mimport [m
  } from "react-native";[m
  // import { RouteProp, useRoute, useNavigation } from '@react-navigation/native';[m
  import Ionicons from "react-native-vector-icons/Ionicons";[m
[32m++import { useTheme } from "@/components/ThemeContext";[m
  [m
  // B·ªï sung: ƒê·ªãnh nghƒ©a l·∫°i type Song ƒë·ªÉ s·ª≠ d·ª•ng n·ªôi b·ªô trong file n√†y[m
  interface Song {[m
[36m@@@ -27,8 -27,8 +28,8 @@@[m
  // C·∫≠p nh·∫≠t ƒë·ªÉ hi·ªÉn th·ªã tr√™n hai c·ªôt[m
  const InfoRow = ({ label, value }: { label: string; value?: string }) => ([m
    <View className="flex-row mb-4">[m
[31m--    <Text className="text-gray-400 text-lg w-28">{label}</Text>[m
[31m--    <Text className="text-white text-base flex-1">[m
[32m++    <Text className="text-gray-600 dark:text-gray-400 text-lg w-28">{label}</Text>[m
[32m++    <Text className="text-black dark:text-white text-base flex-1">[m
        {value || "Kh√¥ng c√≥ th√¥ng tin"}[m
      </Text>[m
    </View>[m
[36m@@@ -41,9 -41,9 +42,9 @@@[m [mconst LinkRow = ({ label, url }: { labe[m
    }[m
    return ([m
      <View className="flex-row mb-4">[m
[31m--      <Text className="text-gray-400 text-x1 w-28">{label}</Text>[m
[32m++      <Text className="text-gray-600 dark:text-gray-400 text-x1 w-28">{label}</Text>[m
        <TouchableOpacity onPress={() => Linking.openURL(url)} className="flex-1">[m
[31m--        <Text className="text-blue-400 text-base" numberOfLines={1}>[m
[32m++        <Text className="text-blue-600 dark:text-blue-400 text-base" numberOfLines={1}>[m
            {url}[m
          </Text>[m
        </TouchableOpacity>[m
[36m@@@ -60,16 -60,16 +61,19 @@@[m [mexport default function SongInfoScreen([m
    // √âp ki·ªÉu (type assertion) ƒë·ªÉ ƒë·∫£m b·∫£o song c√≥ ƒë·∫ßy ƒë·ªß thu·ªôc t√≠nh[m
    const typedSong = song as Song;[m
  [m
[32m++  const { theme } = useTheme();[m
[32m++  const primaryIconColor = theme === 'dark' ? 'white' : 'black';[m
[32m++[m
    return ([m
[31m--    <View className="flex-1 bg-[#0E0C1F] px-4 pt-4">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F] px-4 pt-4">[m
        {/* Header */}[m
        <View className="flex-row justify-between items-center mb-6">[m
          <TouchableOpacity onPress={() => router.back()}>[m
            {/* Thay ƒë·ªïi icon quay l·∫°i */}[m
[31m--          <Ionicons name="chevron-down" size={28} color="white" />[m
[32m++          <Ionicons name="chevron-down" size={28} color={primaryIconColor} />[m
          </TouchableOpacity>[m
          {/* C·∫≠p nh·∫≠t ti√™u ƒë·ªÅ */}[m
[31m--        <Text className="text-white text-2xl font-bold flex-1 text-center">[m
[32m++        <Text className="text-black dark:text-white text-2xl font-bold flex-1 text-center">[m
            Information[m
          </Text>[m
        </View>[m
[1mdiff --cc mobile/app/(screens)/SongScreen.tsx[m
[1mindex 22d5190,22d5190..17a30cb[m
[1m--- a/mobile/app/(screens)/SongScreen.tsx[m
[1m+++ b/mobile/app/(screens)/SongScreen.tsx[m
[36m@@@ -16,6 -16,6 +16,7 @@@[m [mimport { useNavigate } from "@/hooks/us[m
  import { usePlayerStore } from "@/store/playerStore";[m
  import { useQueueStore } from "@/store/queueStore";[m
  import { router } from "expo-router";[m
[32m++import { useTheme } from "@/components/ThemeContext";[m
  [m
  // ƒê·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu cho b√†i h√°t v√† ngh·ªá sƒ© ·ªü ƒë√¢y ƒë·ªÉ s·ª≠ d·ª•ng trong file n√†y[m
  interface Artist {[m
[36m@@@ -116,6 -116,6 +117,11 @@@[m [mexport default function SongScreen() [m
  [m
    const [isPlaying, setIsPlaying] = useState(false);[m
    const { navigate } = useNavigate();[m
[32m++  const { theme } = useTheme(); // Ensure component re-renders on theme change[m
[32m++[m
[32m++  // Dynamic icon colors based on theme[m
[32m++  const primaryIconColor = theme === 'dark' ? 'white' : 'black';[m
[32m++  const secondaryIconColor = theme === 'dark' ? '#888' : 'gray';[m
  [m
    const togglePlayPause = () => {[m
      setIsPlaying(!isPlaying);[m
[36m@@@ -134,16 -134,16 +140,16 @@@[m
    };[m
  [m
    const renderUpNextItem = ({ item }: { item: Song }) => ([m
[31m--    <View className="flex-row items-center py-2 border-b border-gray-700">[m
[32m++    <View className="flex-row items-center py-2 border-b border-gray-300 dark:border-gray-700">[m
        <Image source={{ uri: item.image }} className="w-12 h-12 rounded-md" />[m
        <View className="flex-1 ml-3">[m
[31m--        <Text className="text-white font-bold text-base">{item.title}</Text>[m
[31m--        <Text className="text-gray-400 text-sm">[m
[32m++        <Text className="text-black dark:text-white font-bold text-base">{item.title}</Text>[m
[32m++        <Text className="text-gray-600 dark:text-gray-400 text-sm">[m
            {item.artists?.map((a) => a.name).join(", ")}[m
          </Text>[m
        </View>[m
        <TouchableOpacity>[m
[31m--        <Icon name="more-vert" size={24} color="gray" />[m
[32m++        <Icon name="more-vert" size={24} color={secondaryIconColor} />[m
        </TouchableOpacity>[m
      </View>[m
    );[m
[36m@@@ -152,15 -152,15 +158,15 @@@[m
      <View>[m
        {/* Header */}[m
        <View className="flex-row justify-between items-center mb-4">[m
[31m--        <TouchableOpacity onPress={() => router.back()}>[m
[31m--          <Ionicons name="chevron-down" size={28} color="white" />[m
[31m--        </TouchableOpacity>[m
[31m--        <View className="flex-1 items-center">[m
[31m--          <Text className="text-gray-400 text-sm">Now playing</Text>[m
[31m--          <Text className="text-white text-base font-semibold">[m
[31m--            {song.title}[m
[31m--          </Text>[m
[31m--        </View>[m
[32m++      <TouchableOpacity onPress={() => router.back()}>[m
[32m++        <Ionicons name="chevron-down" size={28} color={primaryIconColor} />[m
[32m++      </TouchableOpacity>[m
[32m++      <View className="flex-1 items-center">[m
[32m++        <Text className="text-black dark:text-gray-400 text-sm">Now playing</Text>[m
[32m++        <Text className="text-black dark:text-white text-base font-semibold">[m
[32m++          {song.title}[m
[32m++        </Text>[m
[32m++      </View>[m
          {/* <TouchableOpacity>[m
            <Icon name="more-vert" size={28} color="white" />[m
          </TouchableOpacity> */}[m
[36m@@@ -179,10 -179,10 +185,10 @@@[m
              }}[m
            />[m
            <View className="absolute inset-0 justify-center pb-6 items-center bg-opacity-50 rounded-xl px-4">[m
[31m--            <Text className="text-white text-3xl font-bold mb-2 text-center">[m
[32m++            <Text className="text-black dark:text-white text-3xl font-bold mb-2 text-center">[m
                {song.title}[m
              </Text>[m
[31m--            <Text className="text-gray-300 text-lg mb-1 text-center">[m
[32m++            <Text className="text-gray-500 dark:text-gray-300 text-lg mb-1 text-center">[m
                {song.artists?.map((a) => a.name).join(", ")}[m
              </Text>[m
            </View>[m
[36m@@@ -192,8 -192,8 +198,8 @@@[m
        {/* Song Info and Action Buttons */}[m
        <View className="flex-row justify-between items-center mb-4">[m
          <View>[m
[31m--          <Text className="text-white text-2xl font-bold">{song.title}</Text>[m
[31m--          <Text className="text-gray-400 text-base">[m
[32m++          <Text className="text-black dark:text-white text-2xl font-bold">{song.title}</Text>[m
[32m++          <Text className="text-gray-600 dark:text-gray-400 text-base">[m
              {song.artists?.map((a) => a.name).join(", ")}[m
            </Text>[m
          </View>[m
[36m@@@ -205,17 -205,17 +211,17 @@@[m
              <Ionicons[m
                name="information-circle-outline"[m
                size={24}[m
[31m--              color="white"[m
[32m++              color={primaryIconColor}[m
              />[m
            </TouchableOpacity>[m
            <TouchableOpacity className="mr-4">[m
[31m--            <Icon name="favorite-border" size={24} color="white" />[m
[32m++            <Icon name="favorite-border" size={24} color={primaryIconColor} />[m
            </TouchableOpacity>[m
            <TouchableOpacity className="mr-4">[m
[31m--            <Icon name="download" size={24} color="white" />[m
[32m++            <Icon name="download" size={24} color={primaryIconColor} />[m
            </TouchableOpacity>[m
            <TouchableOpacity>[m
[31m--            <Icon name="share" size={24} color="white" />[m
[32m++            <Icon name="share" size={24} color={primaryIconColor} />[m
            </TouchableOpacity>[m
          </View>[m
        </View>[m
[36m@@@ -223,10 -223,10 +229,10 @@@[m
        {/* Controls */}[m
        <View className="flex-row justify-between items-center mb-3 px-6">[m
          <TouchableOpacity>[m
[31m--          <Icon name="shuffle" size={24} color="gray" />[m
[32m++          <Icon name="shuffle" size={24} color={secondaryIconColor} />[m
          </TouchableOpacity>[m
          <TouchableOpacity>[m
[31m--          <Icon name="skip-previous" size={30} color="white" />[m
[32m++          <Icon name="skip-previous" size={30} color={primaryIconColor} />[m
          </TouchableOpacity>[m
          <TouchableOpacity[m
            className="bg-white rounded-full p-2 shadow-lg"[m
[36m@@@ -235,31 -235,31 +241,31 @@@[m
            <Icon[m
              name={isPlaying ? "pause" : "play-arrow"}[m
              size={40}[m
[31m--            color="black"[m
[32m++            color={primaryIconColor}[m
            />[m
          </TouchableOpacity>[m
          <TouchableOpacity>[m
[31m--          <Icon name="skip-next" size={30} color="white" />[m
[32m++          <Icon name="skip-next" size={30} color={primaryIconColor} />[m
          </TouchableOpacity>[m
          <TouchableOpacity>[m
[31m--          <Icon name="repeat" size={24} color="gray" />[m
[32m++          <Icon name="repeat" size={24} color={secondaryIconColor} />[m
          </TouchableOpacity>[m
        </View>[m
  [m
        {/* Progress Bar */}[m
        <View className="flex-row items-center px-3 mb-3">[m
[31m--        <Text className="text-gray-400 text-xs w-8 text-center">0:25</Text>[m
[31m--        <View className="flex-1 h-1 bg-gray-700 rounded-sm mx-2">[m
[31m--          <View className="w-1/3 h-1 bg-white rounded-sm" />[m
[32m++        <Text className="text-gray-600 dark:text-gray-400 text-xs w-8 text-center">0:25</Text>[m
[32m++        <View className="flex-1 h-1 bg-gray-300 dark:bg-gray-700 rounded-sm mx-2">[m
[32m++          <View className="w-1/3 h-1 bg-black dark:bg-white rounded-sm" />[m
          </View>[m
[31m--        <Text className="text-gray-400 text-xs w-8 text-center">3:15</Text>[m
[32m++        <Text className="text-gray-600 dark:text-gray-400 text-xs w-8 text-center">3:15</Text>[m
        </View>[m
  [m
        {/* Up Next Header */}[m
        <View className="flex-row justify-between items-center mb-2">[m
[31m--        <Text className="text-white text-lg font-bold">Up Next</Text>[m
[32m++        <Text className="text-black dark:text-white text-lg font-bold">Up Next</Text>[m
          <TouchableOpacity onPress={() => handleSelectQueue()}>[m
[31m--          <Text className="text-gray-400 text-base">Queue</Text>[m
[32m++          <Text className="text-gray-600 dark:text-gray-400 text-base">Queue</Text>[m
          </TouchableOpacity>[m
        </View>[m
      </View>[m
[36m@@@ -273,7 -273,7 +279,7 @@@[m
    );[m
  [m
    return ([m
[31m--    <View className="flex-1 bg-[#0E0C1F] px-4 pt-4">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F] px-4 pt-4">[m
        <FlatList[m
          data={upNextSongs}[m
          renderItem={renderUpNextItem}[m
[1mdiff --cc mobile/app/(screens)/StreamingQualityScreen.tsx[m
[1mindex acdcb04,acdcb04..332b3c5[m
[1m--- a/mobile/app/(screens)/StreamingQualityScreen.tsx[m
[1m+++ b/mobile/app/(screens)/StreamingQualityScreen.tsx[m
[36m@@@ -19,41 -19,41 +19,41 @@@[m [mexport default function StreamingQualit[m
    };[m
  [m
    return ([m
[31m--    <View className="flex-1 bg-[#0E0C1F] p-6">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F] p-6">[m
        <View className="flex-row justify-between items-center mb-6">[m
[31m--        <Text className="text-white text-xl font-bold">[m
[32m++        <Text className="text-black dark:text-white text-xl font-bold">[m
            Select Streaming Quality[m
          </Text>[m
          <TouchableOpacity onPress={() => router.back()}>[m
[31m--          <Text className="text-white text-lg">X</Text>[m
[32m++          <Text className="text-black dark:text-white text-lg">X</Text>[m
          </TouchableOpacity>[m
        </View>[m
  [m
        {qualities.map((quality) => ([m
          <TouchableOpacity[m
            key={quality.label}[m
[31m--          className="flex-row justify-between items-center py-4 border-b border-gray-700"[m
[32m++          className="flex-row justify-between items-center py-4 border-b border-gray-300 dark:border-gray-700"[m
            onPress={() => handleSelect(quality.label)}[m
          >[m
            <View>[m
[31m--            <Text className="text-white text-lg">{quality.label}</Text>[m
[31m--            <Text className="text-gray-400">{quality.description}</Text>[m
[32m++            <Text className="text-black dark:text-white text-lg">{quality.label}</Text>[m
[32m++            <Text className="text-gray-600 dark:text-gray-400">{quality.description}</Text>[m
            </View>[m
            <View>[m
              {settings?.streamingQuality === quality.label ? ([m
[31m--              <View className="w-5 h-5 rounded-full border-2 border-white bg-white" />[m
[32m++              <View className="w-5 h-5 rounded-full border-2 border-black dark:border-white bg-black dark:bg-white" />[m
              ) : ([m
[31m--              <View className="w-5 h-5 rounded-full border-2 border-white" />[m
[32m++              <View className="w-5 h-5 rounded-full border-2 border-black dark:border-white" />[m
              )}[m
            </View>[m
          </TouchableOpacity>[m
        ))}[m
  [m
        <TouchableOpacity[m
[31m--        className="bg-gray-700 rounded-md py-3 mt-6 items-center"[m
[32m++        className="bg-gray-300 dark:bg-gray-700 rounded-md py-3 mt-6 items-center"[m
          onPress={() => router.back()}[m
        >[m
[31m--        <Text className="text-white font-semibold text-lg">Done</Text>[m
[32m++        <Text className="text-black dark:text-white font-semibold text-lg">Done</Text>[m
        </TouchableOpacity>[m
      </View>[m
    );[m
[1mdiff --cc mobile/app/(screens)/_layout.tsx[m
[1mindex 970d1fc,970d1fc..ee97c73[m
[1m--- a/mobile/app/(screens)/_layout.tsx[m
[1m+++ b/mobile/app/(screens)/_layout.tsx[m
[36m@@@ -4,7 -4,7 +4,7 @@@[m [mimport { SafeAreaView } from "react-nat[m
  [m
  export default function ScreenLayout() {[m
    return ([m
[31m--    <SafeAreaView className="flex-1">[m
[32m++    <SafeAreaView className="flex-1 bg-white dark:bg-black">[m
        <Stack screenOptions={{ headerShown: false }} />[m
      </SafeAreaView>[m
    );[m
[1mdiff --cc mobile/app/(tabs)/HomeScreen.tsx[m
[1mindex 7a90382,7a90382..f46fc75[m
[1m--- a/mobile/app/(tabs)/HomeScreen.tsx[m
[1m+++ b/mobile/app/(tabs)/HomeScreen.tsx[m
[36m@@@ -1,11 -1,11 +1,6 @@@[m
  import CustomButton from "@/components/custom/CustomButton";[m
  import AlbumItem from "@/components/items/AlbumItem";[m
  import SongItem from "@/components/items/SongItem";[m
[31m--import {[m
[31m--  NavigationProp,[m
[31m--  ParamListBase,[m
[31m--  useNavigation,[m
[31m--} from "@react-navigation/native";[m
  import React, { useEffect, useRef, useState } from "react";[m
  import {[m
    Animated,[m
[36m@@@ -15,6 -15,6 +10,7 @@@[m
    Text,[m
    TouchableOpacity,[m
    View,[m
[32m++  useColorScheme,[m
  } from "react-native";[m
  import Icon from "react-native-vector-icons/Ionicons";[m
  import { useNavigate } from "@/hooks/useNavigate";[m
[36m@@@ -126,37 -126,37 +122,22 @@@[m [mconst relaxData = [m
    },[m
  ];[m
  [m
[31m--const avatarImages = [[m
[31m--  "https://randomuser.me/api/portraits/men/1.jpg",[m
[31m--  "https://randomuser.me/api/portraits/women/2.jpg",[m
[31m--  "https://randomuser.me/api/portraits/men/3.jpg",[m
[31m--  "https://randomuser.me/api/portraits/women/4.jpg",[m
[31m--  "https://randomuser.me/api/portraits/men/5.jpg",[m
[31m--];[m
[31m--[m
  export default function HomeScreen() {[m
  [m
    const { navigate } = useNavigate();[m
    const user = useAuthStore((state) => state.user);[m
[32m++  const colorScheme = useColorScheme();[m
    console.log('user', user);[m
    const [activeTab, setActiveTab] = useState("forYou");[m
    const animation = useRef(new Animated.Value(0)).current;[m
[31m--  // const navigation = useNavigation<NavigationProp<ParamListBase>>();[m
    const greetingOpacity = useRef(new Animated.Value(0)).current;[m
    const greetingTranslateY = useRef(new Animated.Value(20)).current;[m
[31m--  const [avatarImage, setAvatarImage] = useState<string | null>(null);[m
    const [hasNotification] = useState(true);[m
    const [tabWidths, setTabWidths] = useState<number[]>([]);[m
    const [tabPositions, setTabPositions] = useState<number[]>([]);[m
    const [tabsLayouted, setTabsLayouted] = useState(false);[m
  [m
    useEffect(() => {[m
[31m--    if (!avatarImage) {[m
[31m--      const random =[m
[31m--        avatarImages[Math.floor(Math.random() * avatarImages.length)];[m
[31m--      setAvatarImage(random);[m
[31m--    }[m
[31m--[m
      Animated.parallel([[m
        Animated.timing(greetingOpacity, {[m
          toValue: 1,[m
[36m@@@ -169,7 -169,7 +150,7 @@@[m
          useNativeDriver: true,[m
        }),[m
      ]).start();[m
[31m--  }, [greetingOpacity, greetingTranslateY, avatarImage]);[m
[32m++  }, [greetingOpacity, greetingTranslateY]);[m
  [m
    useEffect(() => {[m
      if (tabWidths.length === tabs.length) {[m
[36m@@@ -218,39 -218,39 +199,30 @@@[m
      : 0;[m
  [m
    return ([m
[31m--    <View className="flex-1  bg-[#0E0C1F]">[m
[32m++    <View className="flex-1 bg-white dark:bg-[#0E0C1F]">[m
        {/* Header */}[m
[31m--      <View className="flex-row justify-between items-center mx-5 mt-10 mb-2">[m
[32m++      <View className="flex-row justify-between items-center mx-5 mt-10 mb-2 border border-gray-300 dark:border-black rounded-lg p-4">[m
          <Animated.Text[m
[31m--          className="text-white text-2xl font-bold"[m
[32m++          className="text-black dark:text-white text-2xl font-bold"[m
            style={{[m
              opacity: greetingOpacity,[m
              transform: [{ translateY: greetingTranslateY }],[m
            }}[m
          >[m
[31m--          Hi, {user.fullName || "User"} üëã[m
[32m++          Hi, {String(user?.fullName || user?.username || 'User')} üëã[m
          </Animated.Text>[m
          <View className="flex-row items-center">[m
            <TouchableOpacity className="mr-4 relative">[m
[31m--            <Icon name="notifications-outline" size={28} color="#fff" />[m
[32m++            <Icon name="notifications-outline" size={28} color={colorScheme === "dark" ? "#fff" : "#000"} />[m
              {hasNotification && ([m
                <View className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full" />[m
              )}[m
            </TouchableOpacity>[m
[31m--          <TouchableOpacity[m
[31m--            onPress={() =>[m
[31m--              // navigation.navigate("Profile", { screen: "ProfileMain" })[m
[31m--              navigate("Profile")[m
[31m--            }[m
[31m--          >[m
[31m--            {avatarImage ? ([m
[31m--              <Image[m
[31m--                source={{ uri: avatarImage }}[m
[31m--                className="w-10 h-10 rounded-full"[m
[31m--              />[m
[31m--            ) : ([m
[31m--              <View className="w-10 h-10 rounded-full bg-gray-600" />[m
[31m--            )}[m
[32m++          <TouchableOpacity onPress={() => navigate("Profile")}>[m
[32m++            <Image[m
[32m++              source={{ uri: user?.avatarUrl || 'https://res.cloudinary.com/chaamz03/image/upload/v1756819623/default-avatar-icon-of-social-media-user-vector_t2fvta.jpg' }}[m
[32m++              className="w-10 h-10 rounded-full"[m
[32m++            />[m
            </TouchableOpacity>[m
          </View>[m
        </View>[m
[36m@@@ -271,8 -271,8 +243,8 @@@[m
              >[m
                <Text[m
                  className={`text-xl font-bold ${activeTab === tab.id[m
[31m--                    ? "text-white font-bold"[m
[31m--                    : "text-gray-500 font-normal"[m
[32m++                  ? "text-black dark:text-white font-bold"[m
[32m++                  : "text-gray-500 dark:text-gray-400 font-normal"[m
                    }`}[m
                >[m
                  {tab.label}[m
[36m@@@ -282,7 -282,7 +254,7 @@@[m
          </ScrollView>[m
          {tabsLayouted && ([m
            <Animated.View[m
[31m--            className="h-0.5 bg-white absolute -bottom-2"[m
[32m++            className="h-0.5 bg-black dark:bg-white absolute -bottom-2"[m
              style={{[m
                width: tabUnderlineWidth,[m
                transform: [{ translateX: tabUnderlineLeft }],[m
[36m@@@ -301,10 -301,10 +273,10 @@@[m
                className="w-full h-48 rounded-lg"[m
              />[m
              <View className="absolute bottom-4 left-4">[m
[31m--              <Text className="text-white text-xl font-bold">[m
[32m++              <Text className="text-black dark:text-white text-xl font-bold">[m
                  {forYouData[0].title}[m
                </Text>[m
[31m--              <Text className="text-gray-300">{forYouData[0].content}</Text>[m
[32m++              <Text className="text-gray-600 dark:text-gray-300">{forYouData[0].content}</Text>[m
                <CustomButton[m
                  title="Play"[m
                  onPress={() => { }}[m
[36m@@@ -316,10 -316,10 +288,10 @@@[m
            {/* Recently Played Horizontal List */}[m
            <View className="mb-6">[m
              <View className="flex-row justify-between items-center mb-2">[m
[31m--              <Text className="text-white text-lg font-bold">[m
[32m++              <Text className="text-black dark:text-white text-lg font-bold">[m
                  {forYouData[1].title}[m
                </Text>[m
[31m--              <CustomButton title="See more" onPress={() => { }} />[m
[32m++              <CustomButton title="Xem th√™m" onPress={() => { }} />[m
              </View>[m
              <FlatList[m
                horizontal[m
[36m@@@ -338,7 -338,7 +310,7 @@@[m
  [m
            {/* Mixes for you Horizontal List */}[m
            <View className="mb-6">[m
[31m--            <Text className="text-white text-lg font-bold mb-2">[m
[32m++            <Text className="text-black dark:text-white text-lg font-bold mb-2">[m
                {forYouData[2].title}[m
              </Text>[m
              <FlatList[m
[36m@@@ -367,10 -367,10 +339,10 @@@[m
                className="w-full h-48 rounded-lg"[m
              />[m
              <View className="absolute bottom-4 left-4">[m
[31m--              <Text className="text-white text-xl font-bold">[m
[32m++              <Text className="text-black dark:text-white text-xl font-bold">[m
                  {relaxData[0].title}[m
                </Text>[m
[31m--              <Text className="text-gray-300">{relaxData[0].content}</Text>[m
[32m++              <Text className="text-gray-600 dark:text-gray-300">{relaxData[0].content}</Text>[m
              </View>[m
            </View>[m
  [m
[1mdiff --cc mobile/app/(tabs)/ProfileScreen.tsx[m
[1mindex e7ab1b1,e7ab1b1..037fe46[m
[1m--- a/mobile/app/(tabs)/ProfileScreen.tsx[m
[1m+++ b/mobile/app/(tabs)/ProfileScreen.tsx[m
[36m@@@ -1,134 -1,134 +1,172 @@@[m
[32m++// ProfileScreen.tsx[m
[32m++[m
  import { SettingsContext } from "@/context/SettingsContext";[m
  import { useNavigate } from "@/hooks/useNavigate";[m
  import React, { useContext } from "react";[m
[31m--import { Image, Text, View } from "react-native";[m
[32m++import { Image, Pressable, ScrollView, Text, View } from "react-native";[m
  import { SafeAreaView } from "react-native-safe-area-context";[m
  import Icon from "react-native-vector-icons/Ionicons";[m
  [m
[31m--// Import c√°c component t√πy ch·ªânh c·∫ßn thi·∫øt[m
  import LibraryItemButton from "@/components/button/LibraryItemButton";[m
  import CustomButton from "@/components/custom/CustomButton";[m
  import SettingItem from "@/components/items/SettingItem";[m
[31m--import useAuthStore from "@/store/authStore";[m
[32m++import { ThemeToggle } from "@/components/ThemeToggle";[m
[32m++import { useCustomAlert } from "@/hooks/useCustomAlert";[m
  import { Logout } from "@/routes/ApiRouter";[m
[31m--import { useCustomAlert } from '@/hooks/useCustomAlert';[m
[32m++import useAuthStore from "@/store/authStore";[m
  import { GoogleSignin } from "@react-native-google-signin/google-signin";[m
  [m
  export default function ProfileScreen() {[m
    const settings = useContext(SettingsContext);[m
[31m--  const user = useAuthStore(state => state.user);[m
[32m++  const user = useAuthStore((state) => state.user);[m
    const { navigate } = useNavigate();[m
    const { success } = useCustomAlert();[m
[31m--  const logout = useAuthStore(state => state.logout);[m
[32m++  const logout = useAuthStore((state) => state.logout);[m
  [m
    const handleLogout = async () => {[m
      try {[m
[31m--      const response = await Logout(); // logout kh·ªèi server -> x√≥a cookie[m
[31m--      logout(); // logout kh·ªèi client -> x√≥a store[m
[31m--      if (user?.accountType === 'google') {[m
[31m--        await GoogleSignin.signOut(); // logout kh·ªèi google[m
[32m++      const response = await Logout(); [m
[32m++      logout();[m
[32m++      if (user?.accountType === "google") {[m
[32m++        await GoogleSignin.signOut();[m
        }[m
        console.log(response);[m
        if (response.statusCode == 200) {[m
[31m--        success('ƒêƒÉng xu·∫•t th√†nh c√¥ng', '');[m
[31m--        navigate('Auth');[m
[32m++        success("ƒêƒÉng xu·∫•t th√†nh c√¥ng", "");[m
[32m++        navigate("Auth");[m
        }[m
      } catch (error) {[m
        console.log(error);[m
      }[m
[31m--  }[m
[32m++  };[m
[32m++[m
[32m++  const handleEditAvatar = () => {[m
[32m++    console.log("Edit avatar pressed");[m
[32m++  };[m
  [m
    return ([m
[31m--    <SafeAreaView className="flex-1 bg-[#0E0C1F] p-6">[m
[31m--      {/* Ti√™u ƒë·ªÅ v√† n√∫t Edit */}[m
[31m--      <View className="flex-row justify-between items-center mb-4">[m
[31m--        <Text className="text-white text-3xl font-bold">Profile</Text>[m
[31m--        <CustomButton[m
[31m--          title="Edit"[m
[31m--          onPress={() => navigate("EditProfile")}[m
[31m--          iconName="pencil"[m
[31m--        />[m
[31m--      </View>[m
[32m++    <SafeAreaView className="flex-1 bg-white dark:bg-gray-900">[m
[32m++      <ScrollView className="p-6">[m
[32m++        <View className="flex-row justify-between items-center mb-4">[m
[32m++          <Text className="text-black dark:text-white text-3xl font-bold">[m
[32m++            H·ªì s∆°[m
[32m++          </Text>[m
[32m++          <CustomButton[m
[32m++            title="Ch·ªânh s·ª≠a"[m
[32m++            onPress={() => navigate("EditProfile")}[m
[32m++            iconName="pencil"[m
[32m++          />[m
[32m++        </View>[m
  [m
[31m--      {/* ·∫¢nh ƒë·∫°i di·ªán v√† t√™n */}[m
[31m--      <View className="items-center my-4">[m
[31m--        <Image[m
[31m--          source={{[m
[31m--            uri: "https://images.pexels.com/photos/1763075/pexels-photo-1763075.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",[m
[31m--          }}[m
[31m--          className="w-24 h-24 rounded-full mb-4 border-4 border-white shadow-xl"[m
[31m--        />[m
[31m--        <Text className="text-white text-2xl font-bold">...</Text>[m
[31m--      </View>[m
[32m++        <View className="items-center my-4">[m
[32m++          <Pressable[m
[32m++            className="items-center w-24 h-24 mb-4"[m
[32m++            onPress={() => handleEditAvatar()}[m
[32m++          >[m
[32m++            <Image[m
[32m++              source={{[m
[32m++                uri:[m
[32m++                  user?.avatarUrl ||[m
[32m++                  "https://images.pexels.com/photos/1763075/pexels-photo-1763075.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",[m
[32m++              }}[m
[32m++              className="w-24 h-24 rounded-full"[m
[32m++            />[m
[32m++          </Pressable>[m
[32m++          <Text className="text-black dark:text-white text-2xl font-bold">[m
[32m++            {user?.fullName || user?.username}[m
[32m++          </Text>[m
[32m++        </View>[m
  [m
[31m--      {/* Th√¥ng tin li√™n h·ªá */}[m
[31m--      <View className="my-4">[m
[31m--        <View className="flex-row items-center mb-1">[m
[31m--          <Icon[m
[31m--            name="mail-outline"[m
[31m--            size={20}[m
[31m--            color="#9CA3AF"[m
[31m--            className="mr-2"[m
[31m--          />[m
[31m--          <Text className="text-gray-400">Email</Text>[m
[32m++        <View className="my-4">[m
[32m++          <View className="flex-row items-center mb-1">[m
[32m++            <Icon[m
[32m++              name="mail-outline"[m
[32m++              size={20}[m
[32m++              color="#9CA3AF"[m
[32m++              className="mr-2"[m
[32m++            />[m
[32m++            <Text className="text-gray-600 dark:text-gray-400">Email</Text>[m
[32m++          </View>[m
[32m++          <Text className="text-black dark:text-white mb-3">{user?.email}</Text>[m
[32m++[m
[32m++          <View className="flex-row items-center mb-1">[m
[32m++            <Icon[m
[32m++              name="calendar-outline"[m
[32m++              size={20}[m
[32m++              color="#9CA3AF"[m
[32m++              className="mr-2"[m
[32m++            />[m
[32m++            <Text className="text-gray-600 dark:text-gray-400">Ng√†y sinh</Text>[m
[32m++          </View>[m
[32m++          <Text className="text-black dark:text-white">[m
[32m++            {new Date(user?.dob).toLocaleDateString() || "Ch∆∞a c√≥ th√¥ng tin"}[m
[32m++          </Text>[m
[32m++[m
[32m++          <View className="flex-row items-center mb-1">[m
[32m++            <Icon[m
[32m++              name="information-circle-outline"[m
[32m++              size={20}[m
[32m++              color="#9CA3AF"[m
[32m++              className="mr-2"[m
[32m++            />[m
[32m++            <Text className="text-gray-600 dark:text-gray-400">Ti·ªÉu s·ª≠</Text>[m
[32m++          </View>[m
[32m++          <Text className="text-black dark:text-white">{user?.bio}</Text>[m
          </View>[m
[31m--        <Text className="text-white mb-3">...</Text>[m
  [m
[31m--        <View className="flex-row items-center mb-1">[m
[31m--          <Icon[m
[31m--            name="call-outline"[m
[31m--            size={20}[m
[31m--            color="#9CA3AF"[m
[31m--            className="mr-2"[m
[32m++        <View className="flex-row justify-between my-4">[m
[32m++          <LibraryItemButton[m
[32m++            title="... B√†i h√°t"[m
[32m++            icon="favorite"[m
[32m++            onPress={() => navigate("LikedSongsScreen")}[m
[32m++            color="#ffb5b5"[m
[32m++          />[m
[32m++          <LibraryItemButton[m
[32m++            title="... Playlists"[m
[32m++            icon="list"[m
[32m++            onPress={() => navigate("PlaylistsScreen")}[m
[32m++            color="#82d8ff"[m
[32m++          />[m
[32m++          <LibraryItemButton[m
[32m++            title="... Ngh·ªá sƒ©"[m
[32m++            icon="person"[m
[32m++            onPress={() => navigate("ArtistsFollowingScreen")}[m
[32m++            color="#FFA500"[m
            />[m
[31m--          <Text className="text-gray-400">Phone Number</Text>[m
          </View>[m
[31m--        <Text className="text-white">...</Text>[m
[31m--      </View>[m
[31m--[m
[31m--      {/* C√°c n√∫t Th∆∞ vi·ªán (Library) */}[m
[31m--      <View className="flex-row justify-between my-4">[m
[31m--        <LibraryItemButton[m
[31m--          title="... Songs"[m
[31m--          icon="favorite"[m
[31m--          onPress={() => navigate("LikedSongsScreen")}[m
[31m--          color="#ffb5b5"[m
[31m--        />[m
[31m--        <LibraryItemButton[m
[31m--          title="... Playlists"[m
[31m--          icon="list"[m
[31m--          onPress={() => navigate("PlaylistsScreen")}[m
[31m--          color="#82d8ff"[m
[31m--        />[m
[31m--        <LibraryItemButton[m
[31m--          title="... Artists"[m
[31m--          icon="person"[m
[31m--          onPress={() => navigate("ArtistsFollowingScreen")}[m
[31m--          color="#fff999"[m
[31m--        />[m
[31m--      </View>[m
  [m
[31m--      {/* C√†i ƒë·∫∑t (Settings) */}[m
[31m--      <View>[m
[31m--        <Text className="text-white font-semibold mb-2 text-2xl">Settings</Text>[m
[31m--        <SettingItem[m
[31m--          title={`Music Language(s): ${settings?.musicLanguages.join(", ")}`}[m
[31m--          onPress={() => navigate("MusicLanguage")}[m
[31m--        />[m
[31m--        <SettingItem[m
[31m--          title={`Streaming Quality: ${settings?.streamingQuality}`}[m
[31m--          onPress={() => navigate("StreamingQuality")}[m
[31m--        />[m
[31m--        <SettingItem[m
[31m--          title={`Download Quality: ${settings?.downloadQuality}`}[m
[31m--          onPress={() => navigate("DownloadQuality")}[m
[31m--        />[m
[31m--        <SettingItem[m
[31m--          color="red"[m
[31m--          title="Log out"[m
[31m--          onPress={() => handleLogout()}[m
[31m--        />[m
[31m--      </View>[m
[32m++        <View>[m
[32m++          <Text className="text-black dark:text-white font-semibold mb-2 text-2xl">[m
[32m++            C√†i ƒë·∫∑t[m
[32m++          </Text>[m
[32m++          <SettingItem[m
[32m++            title="Ch·∫ø ƒë·ªô T·ªëi/S√°ng"[m
[32m++            rightComponent={[m
[32m++              <View className={"mr-2"}>[m
[32m++                <ThemeToggle />[m
[32m++              </View>[m
[32m++            }[m
[32m++            onPress={() => {}}[m
[32m++          />[m
[32m++          <SettingItem[m
[32m++            title={`Ng√¥n ng·ªØ: ${settings?.musicLanguages.join(", ")}`}[m
[32m++            onPress={() => navigate("MusicLanguage")}[m
[32m++          />[m
[32m++          <SettingItem[m
[32m++            title={`Ch·∫•t l∆∞·ª£ng ph√°t tr·ª±c tuy·∫øn: ${settings?.streamingQuality}`}[m
[32m++            onPress={() => navigate("StreamingQuality")}[m
[32m++          />[m
[32m++          <SettingItem[m
[32m++            title={`Ch·∫•t l∆∞·ª£ng t·∫£i xu·ªëng: ${settings?.downloadQuality}`}[m
[32m++            onPress={() => navigate("DownloadQuality")}[m
[32m++          />[m
[32m++          <SettingItem[m
[32m++            color="red"[m
[32m++            title="ƒêƒÉng xu·∫•t"[m
[32m++            onPress={() => handleLogout()}[m
[32m++          />[m
[32m++        </View>[m
[32m++      </ScrollView>[m
      </SafeAreaView>[m
    );[m
[31m--}[m
[32m++}[m
[1mdiff --cc mobile/app/(tabs)/SearchScreen.tsx[m
[1mindex 071ba65,071ba65..40fc2d2[m
[1m--- a/mobile/app/(tabs)/SearchScreen.tsx[m
[1m+++ b/mobile/app/(tabs)/SearchScreen.tsx[m
[36m@@@ -11,6 -11,6 +11,7 @@@[m [mimport [m
    TextInput,[m
    TouchableOpacity,[m
    View,[m
[32m++  useColorScheme,[m
  } from "react-native";[m
  import { SafeAreaView } from "react-native-safe-area-context";[m
  import Icon from "react-native-vector-icons/Ionicons";[m
[36m@@@ -225,6 -225,6 +226,7 @@@[m [mconst recentSearches = [m
  export default function SearchScreen() {[m
    const router = useRouter();[m
    const { navigate } = useNavigate();[m
[32m++  const colorScheme = useColorScheme();[m
    const [isFocused, setIsFocused] = useState(false);[m
    const [searchText, setSearchText] = useState("");[m
    const inputRef = useRef<TextInput>(null);[m
[36m@@@ -252,7 -252,7 +254,7 @@@[m
  [m
    const containerBackgroundColor = animation.interpolate({[m
      inputRange: [0, 1],[m
[31m--    outputRange: ["#000", "#121212"],[m
[32m++    outputRange: [colorScheme === "dark" ? "#000" : "#fff", colorScheme === "dark" ? "#121212" : "#f5f5f5"],[m
    });[m
  [m
    const clearSearch = () => {[m
[36m@@@ -266,19 -266,19 +268,19 @@@[m
        style={{ backgroundColor: containerBackgroundColor }}[m
      >[m
        <SafeAreaView className="flex-1">[m
[31m--        <View className="flex-row bg-gray-800 mx-3 rounded-lg px-3 items-center h-10 shadow-lg shadow-black/30">[m
[32m++        <View className={`flex-row ${colorScheme === "dark" ? "bg-gray-800" : "bg-white"} mx-3 rounded-lg px-3 items-center shadow-lg ${colorScheme === "dark" ? "shadow-black/30" : "shadow-gray-300/30 border border-black"}`}>[m
            {isFocused ? ([m
              <TouchableOpacity onPress={onBlur} className="mr-2">[m
[31m--              <Icon name="arrow-back" size={20} color="#888" />[m
[32m++              <Icon name="arrow-back" size={20} color={colorScheme === "dark" ? "#888" : "#000"} />[m
              </TouchableOpacity>[m
            ) : ([m
[31m--            <Icon name="search" size={20} color="#888" className="mr-2" />[m
[32m++            <Icon name="search" size={20} color={colorScheme === "dark" ? "#888" : "#000"} className="mr-2" />[m
            )}[m
            <TextInput[m
              ref={inputRef}[m
[31m--            className="flex-1 text-white text-base h-full"[m
[32m++            className={`flex-1 ${colorScheme === "dark" ? "text-white" : "text-black"} text-base h-full`}[m
              placeholder="Search songs, artist, album or playlist"[m
[31m--            placeholderTextColor="#888"[m
[32m++            placeholderTextColor={colorScheme === "dark" ? "#888" : "#777"}[m
              value={searchText}[m
              onChangeText={setSearchText}[m
              onFocus={onFocus}[m
[36m@@@ -287,14 -287,14 +289,14 @@@[m
            />[m
            {searchText.length > 0 && ([m
              <TouchableOpacity onPress={clearSearch} className="ml-2">[m
[31m--              <Icon name="close-circle" size={20} color="#888" />[m
[32m++              <Icon name="close-circle" size={20} color={colorScheme === "dark" ? "#888" : "#000"} />[m
              </TouchableOpacity>[m
            )}[m
          </View>[m
  [m
          {!isFocused ? ([m
            <View className="mt-5">[m
[31m--            <Text className="text-white font-bold text-lg ml-3 mb-3">[m
[32m++            <Text className={`text-${colorScheme === "dark" ? "white" : "black"} font-bold text-lg ml-3 mb-3`}>[m
                Trending artists[m
              </Text>[m
              <FlatList[m
[36m@@@ -317,7 -317,7 +319,7 @@@[m
                )}[m
              />[m
  [m
[31m--            <Text className="text-white font-bold text-lg ml-3 mb-3">[m
[32m++            <Text className={`text-${colorScheme === "dark" ? "white" : "black"} font-bold text-lg ml-3 mb-3`}>[m
                Browse[m
              </Text>[m
              <FlatList[m
[36m@@@ -338,14 -338,14 +340,14 @@@[m
            </View>[m
          ) : ([m
            <View className="mt-5 mx-3">[m
[31m--            <Text className="text-white font-bold text-lg mb-3">[m
[32m++            <Text className={`text-${colorScheme === "dark" ? "white" : "black"} font-bold text-lg mb-3`}>[m
                Recent searches[m
              </Text>[m
              <FlatList[m
                data={recentSearches}[m
                keyExtractor={(item) => item.id}[m
                ItemSeparatorComponent={() => ([m
[31m--                <View className="h-px bg-gray-700" />[m
[32m++                <View className={`h-px ${colorScheme === "dark" ? "bg-gray-700" : "bg-gray-300"}`} />[m
                )}[m
                renderItem={({ item }) => {[m
                  let iconName = "musical-notes";[m
[36m@@@ -359,22 -359,22 +361,22 @@@[m
                        <Icon[m
                          name={iconName}[m
                          size={18}[m
[31m--                        color="#888"[m
[32m++                        color={colorScheme === "dark" ? "#888" : "#000"}[m
                          className="mr-3"[m
                        />[m
                        <View>[m
[31m--                        <Text className="text-white font-bold text-sm">[m
[32m++                        <Text className={`text-${colorScheme === "dark" ? "white" : "black"} font-bold text-sm`}>[m
                            {item.title}[m
                          </Text>[m
                          {item.subtitle ? ([m
[31m--                          <Text className="text-gray-400 text-xs">[m
[32m++                          <Text className={`text-${colorScheme === "dark" ? "gray-400" : "gray-600"} text-xs`}>[m
                              {item.subtitle}[m
                            </Text>[m
                          ) : null}[m
                        </View>[m
                      </View>[m
                      <TouchableOpacity>[m
[31m--                      <Icon name="close" size={20} color="#888" />[m
[32m++                      <Icon name="close" size={20} color={colorScheme === "dark" ? "#888" : "#000"} />[m
                      </TouchableOpacity>[m
                    </TouchableOpacity>[m
                  );[m
[36m@@@ -383,6 -383,6 +385,7 @@@[m
              <CustomButton[m
                title="Clear history"[m
                onPress={() => { }}[m
[32m++              variant="primary"[m
                className="mt-5 items-end"[m
              />[m
            </View>[m
[1mdiff --cc mobile/app/(tabs)/SocialScreen.tsx[m
[1mindex 8bddf82,8bddf82..bb6de17[m
[1m--- a/mobile/app/(tabs)/SocialScreen.tsx[m
[1m+++ b/mobile/app/(tabs)/SocialScreen.tsx[m
[36m@@@ -1,25 -1,25 +1,1280 @@@[m
[31m--import { Button, Text } from 'react-native'[m
[31m--import React from 'react'[m
[31m--import { SafeAreaView } from 'react-native-safe-area-context'[m
[31m--import useAuthStore from '@/store/authStore'[m
[31m--import { GetMe } from '@/routes/ApiRouter'[m
[32m++// import React, { useEffect, useState } from "react";[m
[32m++// import {[m
[32m++//   Alert,[m
[32m++//   FlatList,[m
[32m++//   Image,[m
[32m++//   Keyboard,[m
[32m++//   KeyboardAvoidingView,[m
[32m++//   Linking,[m
[32m++//   Modal,[m
[32m++//   Platform,[m
[32m++//   Text,[m
[32m++//   TextInput,[m
[32m++//   TouchableOpacity,[m
[32m++//   View,[m
[32m++//   useColorScheme,[m
[32m++// } from "react-native";[m
[32m++// import { SafeAreaView } from "react-native-safe-area-context";[m
[32m++// import Icon from "react-native-vector-icons/Feather";[m
[32m++[m
[32m++// const PostItem = ({[m
[32m++//   avatarUrl,[m
[32m++//   username,[m
[32m++//   groupName,[m
[32m++//   time,[m
[32m++//   contentText,[m
[32m++//   images,[m
[32m++//   musicLink,[m
[32m++//   likeCount,[m
[32m++//   commentCount,[m
[32m++//   shareCount,[m
[32m++//   isOnline,[m
[32m++//   onPostUpdate, // NH·∫¨N: H√†m callback t·ª´ SocialScreen[m
[32m++//   onCommentPress, // New prop to open comment modal[m
[32m++//   onSharePress, // New prop to handle share press[m
[32m++// }) => {[m
[32m++//   const colorScheme = useColorScheme();[m
[32m++//   // STATE: Theo d√µi tr·∫°ng th√°i ƒë√£ th√≠ch (liked)[m
[32m++//   const [isLiked, setIsLiked] = useState(false);[m
[32m++[m
[32m++//   // STATE: D√πng state n·ªôi b·ªô ƒë·ªÉ hi·ªÉn th·ªã s·ªë like (ƒë∆∞·ª£c ƒë·ªìng b·ªô v·ªõi prop)[m
[32m++//   const [currentLikeCount, setCurrentLikeCount] = useState(likeCount);[m
[32m++[m
[32m++//   // X·ª≠ l√Ω n√∫t Tim[m
[32m++//   const handleLike = () => {[m
[32m++//     const newLikedStatus = !isLiked;[m
[32m++//     const likeChange = newLikedStatus ? 1 : -1;[m
[32m++[m
[32m++//     setIsLiked(newLikedStatus);[m
[32m++//     setCurrentLikeCount((prevCount) => prevCount + likeChange);[m
[32m++[m
[32m++//     // G·ª≠i s·ª± ki·ªán c·∫≠p nh·∫≠t l√™n SocialScreen (n·∫øu c·∫ßn c·∫≠p nh·∫≠t state chung)[m
[32m++//     if (onPostUpdate) {[m
[32m++//       onPostUpdate("like", likeChange);[m
[32m++//     }[m
[32m++//   };[m
[32m++[m
[32m++//   // X·ª≠ l√Ω n√∫t B√¨nh lu·∫≠n[m
[32m++//   const handleComment = () => {[m
[32m++//     if (onPostUpdate) {[m
[32m++//       onPostUpdate("comment", 1);[m
[32m++//     }[m
[32m++//     if (onCommentPress) {[m
[32m++//       onCommentPress();[m
[32m++//     }[m
[32m++//   };[m
[32m++[m
[32m++//   // X·ª≠ l√Ω n√∫t Chia s·∫ª[m
[32m++//   const handleShare = () => {[m
[32m++//     if (onPostUpdate) {[m
[32m++//       onPostUpdate("share", 1);[m
[32m++//     }[m
[32m++//     if (onSharePress) {[m
[32m++//       onSharePress();[m
[32m++//     } else {[m
[32m++//       Alert.alert([m
[32m++//         "Chia s·∫ª",[m
[32m++//         `M·ªü Share Sheet ƒë·ªÉ chia s·∫ª b√†i ƒëƒÉng c·ªßa ${username}.`[m
[32m++//       );[m
[32m++//     }[m
[32m++//   };[m
[32m++[m
[32m++//   return ([m
[32m++//     <SafeAreaView className="bg-white dark:bg-[#171431] p-3 mb-3 rounded-xl shadow-lg shadow-black/50">[m
[32m++//       {/* Header */}[m
[32m++//       <View className="flex-row items-center mb-1.5">[m
[32m++//         <Image source={{ uri: avatarUrl }} className="w-9 h-9 rounded-full" />[m
[32m++//         <View className="ml-2 flex-col">[m
[32m++//           <View className="flex-row items-center">[m
[32m++//             <Text className="font-bold text-sm text-black dark:text-white">{username}</Text>[m
[32m++//             {groupName ? ([m
[32m++//               <Text className="text-sm text-gray-600 dark:text-gray-300">[m
[32m++[m
[32m++//                 {">"} {groupName}[m
[32m++//               </Text>[m
[32m++//             ) : null}[m
[32m++//             {isOnline ? ([m
[32m++//               <View className="w-2 h-2 rounded-full bg-green-400 ml-1.5" />[m
[32m++//             ) : null}[m
[32m++//           </View>[m
[32m++//           <Text className="text-gray-500 dark:text-gray-400 text-xs">{time}</Text>[m
[32m++//         </View>[m
[32m++//       </View>[m
[32m++[m
[32m++//       {/* Content Text */}[m
[32m++//       {contentText ? ([m
[32m++//         <Text className="text-sm text-black dark:text-gray-300 mb-2">{contentText}</Text>[m
[32m++//       ) : null}[m
[32m++[m
[32m++//       {/* Images */}[m
[32m++//       {images && images.length > 0 ? ([m
[32m++//         <View className="flex-row mb-2">[m
[32m++//           {images.map((img, index) => ([m
[32m++//             <Image[m
[32m++//               key={index}[m
[32m++//               source={{ uri: img }}[m
[32m++//               className="w-30 h-30 rounded-lg mr-2"[m
[32m++//             />[m
[32m++//           ))}[m
[32m++//         </View>[m
[32m++//       ) : null}[m
[32m++[m
[32m++//       {/* Music Link */}[m
[32m++//       {musicLink ? ([m
[32m++//         <TouchableOpacity[m
[32m++//           onPress={() => Linking.openURL(musicLink)}[m
[32m++//           className="bg-blue-900/50 p-2 rounded-lg mb-2"[m
[32m++//         >[m
[32m++//           <Text className="text-blue-400 underline">Nghe nh·∫°c t·∫°i ƒë√¢y</Text>[m
[32m++//         </TouchableOpacity>[m
[32m++//       ) : null}[m
[32m++[m
[32m++//       {/* Interaction Buttons */}[m
[32m++//       <View className={`flex-row justify-between pt-2 border-t ${colorScheme === "dark" ? "border-gray-700" : "border-gray-300"}`}>[m
[32m++//         {/* N√öT LIKE (TIM) */}[m
[32m++//         <TouchableOpacity[m
[32m++//           onPress={handleLike}[m
[32m++//           className="flex-row items-center space-x-1"[m
[32m++//         >[m
[32m++//           <Icon[m
[32m++//             name={isLiked ? "heart" : "heart"} // C·∫£ hai icon ƒë·ªÅu l√† 'heart', ch·ªâ kh√°c m√†u[m
[32m++//             size={20}[m
[32m++//             color={isLiked ? "#ef4444" : (colorScheme === "dark" ? "#9ca3af" : "#000000")} // M√†u ƒë·ªè khi liked, x√°m khi ch∆∞a liked[m
[32m++//           />[m
[32m++//           <Text[m
[32m++//             className={`ml-1 ${isLiked ? "text-red-400 font-bold" : (colorScheme === "dark" ? "text-gray-400" : "text-black")}`}[m
[32m++//           >[m
[32m++//             {currentLikeCount}[m
[32m++//           </Text>[m
[32m++//         </TouchableOpacity>[m
[32m++[m
[32m++//         {/* N√öT B√åNH LU·∫¨N */}[m
[32m++//         <TouchableOpacity[m
[32m++//           onPress={handleComment}[m
[32m++//           className="flex-row items-center space-x-1"[m
[32m++//         >[m
[32m++//           <Icon name="message-circle" size={20} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++//           <Text className={`ml-1 ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>{commentCount}</Text>[m
[32m++//         </TouchableOpacity>[m
[32m++[m
[32m++//         {/* N√öT CHIA S·∫∫ */}[m
[32m++//         <TouchableOpacity[m
[32m++//           onPress={handleShare}[m
[32m++//           className="flex-row items-center space-x-1"[m
[32m++//         >[m
[32m++//           <Icon name="share-2" size={20} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++//           <Text className={`ml-1 ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>{shareCount}</Text>[m
[32m++//         </TouchableOpacity>[m
[32m++//       </View>[m
[32m++//     </SafeAreaView>[m
[32m++//   );[m
[32m++// };[m
[32m++[m
[32m++// const CommentModal = ({[m
[32m++//   visible,[m
[32m++//   onClose,[m
[32m++//   comments,[m
[32m++//   onAddComment,[m
[32m++//   onCommentLike,[m
[32m++//   postId,[m
[32m++// }) => {[m
[32m++//   const colorScheme = useColorScheme();[m
[32m++//   const [newComment, setNewComment] = useState("");[m
[32m++//   const [replyTo, setReplyTo] = useState(null); // L∆∞u comment ƒëang tr·∫£ l·ªùi[m
[32m++//   const [quote, setQuote] = useState(null); // L∆∞u comment ƒëang tr√≠ch d·∫´n[m
[32m++//   const [isKeyboardVisible, setKeyboardVisible] = useState(false);[m
[32m++//   const [expandedReplies, setExpandedReplies] = useState({}); // theo d√µi comment cha ƒëang m·ªü r·ªông replies[m
[32m++[m
[32m++//   useEffect(() => {[m
[32m++//     const keyboardDidShowListener = Keyboard.addListener([m
[32m++//       "keyboardDidShow",[m
[32m++//       () => {[m
[32m++//         setKeyboardVisible(true);[m
[32m++//       }[m
[32m++//     );[m
[32m++//     const keyboardDidHideListener = Keyboard.addListener([m
[32m++//       "keyboardDidHide",[m
[32m++//       () => {[m
[32m++//         setKeyboardVisible(false);[m
[32m++//       }[m
[32m++//     );[m
[32m++[m
[32m++//     return () => {[m
[32m++//       keyboardDidShowListener.remove();[m
[32m++//       keyboardDidHideListener.remove();[m
[32m++//     };[m
[32m++//   }, []);[m
[32m++[m
[32m++//   const handleAddComment = () => {[m
[32m++//     if (newComment.trim()) {[m
[32m++//       // G·ª≠i comment ch·ªâ v·ªõi text[m
[32m++//       onAddComment(newComment);[m
[32m++//       setNewComment("");[m
[32m++//       setReplyTo(null);[m
[32m++//       setQuote(null);[m
[32m++//     }[m
[32m++//   };[m
[32m++[m
[32m++//   // H√†m x·ª≠ l√Ω khi nh·∫•n tr·∫£ l·ªùi comment[m
[32m++//   const handleReply = (comment) => {[m
[32m++//     setReplyTo(comment);[m
[32m++//     setQuote(null);[m
[32m++//   };[m
[32m++[m
[32m++//   // H√†m x·ª≠ l√Ω khi nh·∫•n tr√≠ch d·∫´n comment[m
[32m++//   const handleQuote = (comment) => {[m
[32m++//     setQuote(comment);[m
[32m++//     setReplyTo(null);[m
[32m++//   };[m
[32m++[m
[32m++//   // H√†m h·ªßy tr·∫£ l·ªùi ho·∫∑c tr√≠ch d·∫´n[m
[32m++//   const cancelReplyOrQuote = () => {[m
[32m++//     setReplyTo(null);[m
[32m++//     setQuote(null);[m
[32m++//   };[m
[32m++[m
[32m++//   // H√†m toggle m·ªü r·ªông replies[m
[32m++//   const toggleExpandedReplies = (commentId) => {[m
[32m++//     setExpandedReplies((prev) => ({[m
[32m++//       ...prev,[m
[32m++//       [commentId]: !prev[commentId],[m
[32m++//     }));[m
[32m++//   };[m
[32m++[m
[32m++//   return ([m
[32m++//     <Modal visible={visible} animationType="slide" transparent>[m
[32m++//       <KeyboardAvoidingView[m
[32m++//         style={{[m
[32m++//           flex: 1,[m
[32m++//           justifyContent: "flex-end",[m
[32m++//           backgroundColor: "rgba(0,0,0,0.5)",[m
[32m++//         }}[m
[32m++//         behavior={Platform.OS === "ios" ? "padding" : "height"}[m
[32m++//         keyboardVerticalOffset={Platform.OS === "ios" ? 60 : 0}[m
[32m++//       >[m
[32m++//         <View[m
[32m++//           className={`rounded-t-xl p-4 ${isKeyboardVisible ? "h-1/2" : "h-3/4"} ${colorScheme === "dark" ? "bg-[#171431]" : "bg-white"}`}[m
[32m++//         >[m
[32m++//           <View className="flex-row justify-between items-center mb-4">[m
[32m++//             <Text className={`text-lg font-bold ${colorScheme === "dark" ? "text-white" : "text-black"}`}>B√¨nh lu·∫≠n</Text>[m
[32m++//             <TouchableOpacity onPress={onClose}>[m
[32m++//               <Icon name="x" size={24} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++//             </TouchableOpacity>[m
[32m++//           </View>[m
[32m++//           <FlatList[m
[32m++//             data={comments}[m
[32m++//             keyExtractor={(item) => item.id}[m
[32m++//             renderItem={({ item }) => {[m
[32m++//               const isExpanded = expandedReplies[item.id];[m
[32m++//               const visibleReplies = isExpanded[m
[32m++//                 ? item.replies[m
[32m++//                 : item.replies.slice(0, 3);[m
[32m++//               return ([m
[32m++//                 <View className="mb-3">[m
[32m++//                   {/* Comment cha */}[m
[32m++//                   <View className="flex-row items-center mb-1">[m
[32m++//                     <Image[m
[32m++//                       source={{[m
[32m++//                         uri: "https://randomuser.me/api/portraits/men/3.jpg",[m
[32m++//                       }}[m
[32m++//                       className="w-6 h-6 rounded-full mr-2"[m
[32m++//                     />[m
[32m++//                     <Text className={`font-bold text-sm ${colorScheme === "dark" ? "text-white" : "text-black"}`}>[m
[32m++//                       {item.username}[m
[32m++//                     </Text>[m
[32m++//                     <Text className={`text-xs ml-2 ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>[m
[32m++//                       {item.time}[m
[32m++//                     </Text>[m
[32m++//                   </View>[m
[32m++//                   {/* Hi·ªÉn th·ªã tr√≠ch d·∫´n n·∫øu c√≥ */}[m
[32m++//                   {item.quote ? ([m
[32m++//                     <View className={`rounded p-2 mb-1 ml-8 border-l-4 border-blue-500 ${colorScheme === "dark" ? "bg-gray-700" : "bg-gray-200"}`}>[m
[32m++//                       <Text className={`italic text-sm ${colorScheme === "dark" ? "text-gray-300" : "text-gray-700"}`}>[m
[32m++//                         {item.quote.text}[m
[32m++//                       </Text>[m
[32m++//                       <Text className={`text-xs ${colorScheme === "dark" ? "text-gray-400" : "text-gray-600"}`}>[m
[32m++//                         - {item.quote.username}[m
[32m++//                       </Text>[m
[32m++//                     </View>[m
[32m++//                   ) : null}[m
[32m++//                   <Text className={`text-sm ml-8 ${colorScheme === "dark" ? "text-gray-200" : "text-gray-800"}`}>[m
[32m++//                     {item.text}[m
[32m++//                   </Text>[m
[32m++//                   {/* N√∫t tr·∫£ l·ªùi v√† tr√≠ch d·∫´n */}[m
[32m++//                   <View className="flex-row ml-8 mt-1">[m
[32m++//                     <TouchableOpacity[m
[32m++//                       onPress={() =>[m
[32m++//                         onCommentLike(postId, item.id, false, null)[m
[32m++//                       }[m
[32m++//                       className="flex-row items-center space-x-1"[m
[32m++//                     >[m
[32m++//                       <Icon[m
[32m++//                         name={item.isLiked ? "heart" : "heart"}[m
[32m++//                         size={16}[m
[32m++//                         color={item.isLiked ? "#ef4444" : (colorScheme === "dark" ? "#9ca3af" : "#000000")}[m
[32m++//                       />[m
[32m++//                       <Text[m
[32m++//                         className={`text-xs ${item.isLiked ? "text-red-400" : (colorScheme === "dark" ? "text-gray-200" : "text-gray-800")}`}[m
[32m++//                       >[m
[32m++//                         {item.likeCount}[m
[32m++//                       </Text>[m
[32m++//                     </TouchableOpacity>[m
[32m++//                     <TouchableOpacity[m
[32m++//                       onPress={() => handleReply(item)}[m
[32m++//                       className="flex-row items-center px-2"[m
[32m++//                     >[m
[32m++//                       <Icon name="corner-up-left" size={16} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++//                       <Text className={`text-xs ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>Tr·∫£ l·ªùi</Text>[m
[32m++//                     </TouchableOpacity>[m
[32m++//                     <TouchableOpacity[m
[32m++//                       onPress={() => handleQuote(item)}[m
[32m++//                       className="flex-row items-center space-x-1"[m
[32m++//                     >[m
[32m++//                       <Icon name="repeat" size={16} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++//                       <Text className={`text-xs ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>Tr√≠ch d·∫´n</Text>[m
[32m++//                     </TouchableOpacity>[m
[32m++//                   </View>[m
[32m++//                   {/* Hi·ªÉn th·ªã replies */}[m
[32m++//                   {visibleReplies.map((reply) => ([m
[32m++//                     <View key={reply.id} className="ml-12 mt-2">[m
[32m++//                       <View className="flex-row items-center mb-1">[m
[32m++//                         <Image[m
[32m++//                           source={{[m
[32m++//                             uri: "https://randomuser.me/api/portraits/men/3.jpg",[m
[32m++//                           }}[m
[32m++//                           className="w-5 h-5 rounded-full mr-2"[m
[32m++//                         />[m
[32m++//                         <Text className={`font-bold text-xs ${colorScheme === "dark" ? "text-white" : "text-black"}`}>[m
[32m++//                           {reply.username}[m
[32m++//                         </Text>[m
[32m++//                         <Text className={`text-xs ml-2 ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>[m
[32m++//                           {reply.time}[m
[32m++//                         </Text>[m
[32m++//                       </View>[m
[32m++//                       <Text className={`text-sm ${colorScheme === "dark" ? "text-gray-200" : "text-gray-800"}`}>[m
[32m++//                         {reply.text}[m
[32m++//                       </Text>[m
[32m++//                       {/* N√∫t like v√† tr·∫£ l·ªùi cho reply */}[m
[32m++//                       <View className="flex-row mt-1">[m
[32m++//                         <TouchableOpacity[m
[32m++//                           onPress={() =>[m
[32m++//                             onCommentLike(postId, item.id, true, reply.id)[m
[32m++//                           }[m
[32m++//                           className="flex-row items-center space-x-1"[m
[32m++//                         >[m
[32m++//                           <Icon[m
[32m++//                             name={reply.isLiked ? "heart" : "heart"}[m
[32m++//                             size={14}[m
[32m++//                             color={reply.isLiked ? "#ef4444" : (colorScheme === "dark" ? "#9ca3af" : "#000000")}[m
[32m++//                           />[m
[32m++//                           <Text[m
[32m++//                             className={`text-xs ${reply.isLiked ? "text-red-400" : (colorScheme === "dark" ? "text-gray-400" : "text-gray-600")}`}[m
[32m++//                           >[m
[32m++//                             {reply.likeCount}[m
[32m++//                           </Text>[m
[32m++//                         </TouchableOpacity>[m
[32m++//                         <TouchableOpacity[m
[32m++//                           onPress={() => handleReply(reply)}[m
[32m++//                           className="flex-row items-center px-2"[m
[32m++//                         >[m
[32m++//                           <Icon[m
[32m++//                             name="corner-up-left"[m
[32m++//                             size={14}[m
[32m++//                             color={colorScheme === "dark" ? "#9ca3af" : "#000000"}[m
[32m++//                           />[m
[32m++//                           <Text className={`text-xs ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>Tr·∫£ l·ªùi</Text>[m
[32m++//                         </TouchableOpacity>[m
[32m++//                         <TouchableOpacity[m
[32m++//                           onPress={() => handleQuote(item)}[m
[32m++//                           className="flex-row items-end space-x-1"[m
[32m++//                         >[m
[32m++//                           <Icon name="repeat" size={16} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++//                           <Text className={`text-xs ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>[m
[32m++//                             Tr√≠ch d·∫´n[m
[32m++//                           </Text>[m
[32m++//                         </TouchableOpacity>[m
[32m++//                       </View>[m
[32m++//                     </View>[m
[32m++//                   ))}[m
[32m++//                   {/* N√∫t xem th√™m replies */}[m
[32m++//                   {item.replies.length > 3 && ([m
[32m++//                     <TouchableOpacity[m
[32m++//                       onPress={() => toggleExpandedReplies(item.id)}[m
[32m++//                       className="ml-12 mt-1"[m
[32m++//                     >[m
[32m++//                       <Text className="text-blue-400 text-xs">[m
[32m++//                         {isExpanded[m
[32m++//                           ? "·∫®n c√°c tr·∫£ l·ªùi"[m
[32m++//                           : `Xem ${item.replies.length - 3} tr·∫£ l·ªùi kh√°c`}[m
[32m++//                       </Text>[m
[32m++//                     </TouchableOpacity>[m
[32m++//                   )}[m
[32m++//                 </View>[m
[32m++//               );[m
[32m++//             }}[m
[32m++//             showsVerticalScrollIndicator={false}[m
[32m++//           />[m
[32m++//           {/* Hi·ªÉn th·ªã th√¥ng tin tr·∫£ l·ªùi ho·∫∑c tr√≠ch d·∫´n ·ªü tr√™n thanh nh·∫≠p */}[m
[32m++//           {(replyTo || quote) && ([m
[32m++//             <View className={`rounded p-2 mb-2 flex-row justify-between items-center ${colorScheme === "dark" ? "bg-gray-700" : "bg-gray-200"}`}>[m
[32m++//               <Text[m
[32m++//                 className={`italic text-sm flex-1 ${colorScheme === "dark" ? "text-gray-300" : "text-gray-700"}`}[m
[32m++//                 numberOfLines={1}[m
[32m++//               >[m
[32m++//                 {replyTo[m
[32m++//                   ? `Tr·∫£ l·ªùi: ${replyTo.text}`[m
[32m++//                   : `Tr√≠ch d·∫´n: ${quote.text}`}[m
[32m++//               </Text>[m
[32m++//               <TouchableOpacity onPress={cancelReplyOrQuote}>[m
[32m++//                 <Icon name="x" size={20} color="#ef4444" />[m
[32m++//               </TouchableOpacity>[m
[32m++//             </View>[m
[32m++//           )}[m
[32m++//           <View className={`flex-row items-center py-12 px-2 border-t ${colorScheme === "dark" ? "border-gray-700" : "border-gray-300"}`}>[m
[32m++//             <TextInput[m
[32m++//               placeholder="Vi·∫øt b√¨nh lu·∫≠n..."[m
[32m++//               placeholderTextColor={colorScheme === "dark" ? "#aaa" : "#777"}[m
[32m++//               value={newComment}[m
[32m++//               onChangeText={setNewComment}[m
[32m++//               className={`flex-1 border rounded-full px-4 py-2 text-base ${colorScheme === "dark" ? "border-gray-600 bg-[#0E0C1F] text-white" : "border-gray-700 bg-white text-black"}`}[m
[32m++//               multiline[m
[32m++//             />[m
[32m++//             <TouchableOpacity[m
[32m++//               onPress={handleAddComment}[m
[32m++//               className="ml-2 bg-green-600 px-4 py-2 rounded-full"[m
[32m++//             >[m
[32m++//               <Text className="text-white font-bold">G·ª≠i</Text>[m
[32m++//             </TouchableOpacity>[m
[32m++//           </View>[m
[32m++//         </View>[m
[32m++//       </KeyboardAvoidingView>[m
[32m++//     </Modal>[m
[32m++//   );[m
[32m++// };[m
[32m++[m
[32m++// const SocialScreen = () => {[m
[32m++//   const colorScheme = useColorScheme();[m
[32m++//   const [posts, setPosts] = useState([[m
[32m++//     {[m
[32m++//       id: "1",[m
[32m++//       avatarUrl: "https://randomuser.me/api/portraits/men/1.jpg",[m
[32m++//       username: "bancuanhalong",[m
[32m++//       groupName: "Cats of Threads",[m
[32m++//       time: "3 gi·ªù",[m
[32m++//       contentText:[m
[32m++//         "=))))))))))) ki·∫øp n·∫°n m√®o ·ªü ph√≤ng tr·ªç t·ª± m·∫Øc v√†o th√¨ t·ª± g·ª° nha",[m
[32m++//       images: ["https://i.imgur.com/1.jpg", "https://i.imgur.com/2.jpg"],[m
[32m++//       musicLink: "",[m
[32m++//       likeCount: 202,[m
[32m++//       commentCount: 2,[m
[32m++//       shareCount: 16,[m
[32m++//       isOnline: true,[m
[32m++//       comments: [[m
[32m++//         {[m
[32m++//           id: "c1",[m
[32m++//           username: "user1",[m
[32m++//           text: "Haha cute!",[m
[32m++//           time: "2 gi·ªù",[m
[32m++//           replies: [],[m
[32m++//           likeCount: 5,[m
[32m++//           isLiked: false,[m
[32m++//         },[m
[32m++//         {[m
[32m++//           id: "c2",[m
[32m++//           username: "user2",[m
[32m++//           text: "Poor cat!",[m
[32m++//           time: "1 gi·ªù",[m
[32m++//           replies: [],[m
[32m++//           likeCount: 3,[m
[32m++//           isLiked: false,[m
[32m++//         },[m
[32m++//       ],[m
[32m++//     },[m
[32m++//     {[m
[32m++//       id: "2",[m
[32m++//       avatarUrl: "https://randomuser.me/api/portraits/men/2.jpg",[m
[32m++//       username: "eduardosotoj862",[m
[32m++//       groupName: "#design",[m
[32m++//       time: "7 gi·ªù",[m
[32m++//       contentText:[m
[32m++//         "B·∫£ng m√†u thi√™n nhi√™n c√°c designer tham kh·∫£o nha\nCre: Designer Vietnam",[m
[32m++//       images: ["https://i.imgur.com/3.jpg", "https://i.imgur.com/4.jpg"],[m
[32m++//       musicLink: "",[m
[32m++//       likeCount: 150,[m
[32m++//       commentCount: 10,[m
[32m++//       shareCount: 5,[m
[32m++//       isOnline: false,[m
[32m++//       comments: [[m
[32m++//         {[m
[32m++//           id: "c3",[m
[32m++//           username: "designer1",[m
[32m++//           text: "Great colors!",[m
[32m++//           time: "6 gi·ªù",[m
[32m++//           likeCount: 12,[m
[32m++//           isLiked: false,[m
[32m++//           replies: [[m
[32m++//             {[m
[32m++//               id: "c3r1",[m
[32m++//               username: "userA",[m
[32m++//               text: "Agree!",[m
[32m++//               time: "5 gi·ªù",[m
[32m++//               likeCount: 2,[m
[32m++//               isLiked: false,[m
[32m++//             },[m
[32m++//             {[m
[32m++//               id: "c3r2",[m
[32m++//               username: "userB",[m
[32m++//               text: "Nice palette",[m
[32m++//               time: "4 gi·ªù",[m
[32m++//               likeCount: 1,[m
[32m++//               isLiked: false,[m
[32m++//             },[m
[32m++//             {[m
[32m++//               id: "c3r3",[m
[32m++//               username: "userC",[m
[32m++//               text: "Love it",[m
[32m++//               time: "3 gi·ªù",[m
[32m++//               likeCount: 0,[m
[32m++//               isLiked: false,[m
[32m++//             },[m
[32m++//             {[m
[32m++//               id: "c3r4",[m
[32m++//               username: "userD",[m
[32m++//               text: "Thanks for sharing",[m
[32m++//               time: "2 gi·ªù",[m
[32m++//               likeCount: 3,[m
[32m++//               isLiked: false,[m
[32m++//             },[m
[32m++//           ],[m
[32m++//         },[m
[32m++//         {[m
[32m++//           id: "c4",[m
[32m++//           username: "designer2",[m
[32m++//           text: "Thanks for sharing",[m
[32m++//           time: "5 gi·ªù",[m
[32m++//           likeCount: 8,[m
[32m++//           isLiked: false,[m
[32m++//           replies: [],[m
[32m++//         },[m
[32m++//         {[m
[32m++//           id: "c5",[m
[32m++//           username: "designer3",[m
[32m++//           text: "Very useful",[m
[32m++//           time: "4 gi·ªù",[m
[32m++//           likeCount: 4,[m
[32m++//           isLiked: false,[m
[32m++//           replies: [],[m
[32m++//         },[m
[32m++//       ],[m
[32m++//     },[m
[32m++//   ]);[m
[32m++[m
[32m++//   const [newPostText, setNewPostText] = useState("");[m
[32m++//   const [newPostMusicLink, setNewPostMusicLink] = useState("");[m
[32m++//   const [commentModalVisible, setCommentModalVisible] = useState(false);[m
[32m++//   const [selectedPostId, setSelectedPostId] = useState(null);[m
[32m++[m
[32m++//   const addPost = () => {[m
[32m++//     if (newPostText.trim() === "" && newPostMusicLink.trim() === "") return;[m
[32m++//     const newPost = {[m
[32m++//       id: Date.now().toString(),[m
[32m++//       avatarUrl: "https://randomuser.me/api/portraits/men/3.jpg",[m
[32m++//       username: "duytuan.24",[m
[32m++//       groupName: "",[m
[32m++//       time: "V·ª´a xong",[m
[32m++//       contentText: newPostText,[m
[32m++//       images: [],[m
[32m++//       musicLink: newPostMusicLink,[m
[32m++//       likeCount: 0,[m
[32m++//       commentCount: 0,[m
[32m++//       shareCount: 0,[m
[32m++//       isOnline: true,[m
[32m++//       comments: [],[m
[32m++//     };[m
[32m++//     setPosts([newPost, ...posts]);[m
[32m++//     setNewPostText("");[m
[32m++//     setNewPostMusicLink("");[m
[32m++//   };[m
[32m++[m
[32m++//   // H√ÄM C·∫¨P NH·∫¨T POSTS: ƒê∆∞·ª£c g·ªçi t·ª´ PostItem[m
[32m++//   const updatePost = (id, type, value) => {[m
[32m++//     setPosts((prevPosts) =>[m
[32m++//       prevPosts.map((post) => {[m
[32m++//         if (post.id === id) {[m
[32m++//           if (type === "like") {[m
[32m++//             // Logic c·∫≠p nh·∫≠t like count trong state g·ªëc[m
[32m++//             return { ...post, likeCount: post.likeCount + value };[m
[32m++//           } else if (type === "comment") {[m
[32m++//             return { ...post, commentCount: post.commentCount + value };[m
[32m++//           } else if (type === "share") {[m
[32m++//             return { ...post, shareCount: post.shareCount + value };[m
[32m++//           }[m
[32m++//         }[m
[32m++//         return post;[m
[32m++//       })[m
[32m++//     );[m
[32m++//   };[m
[32m++[m
[32m++//   const openCommentModal = (postId) => {[m
[32m++//     setSelectedPostId(postId);[m
[32m++//     setCommentModalVisible(true);[m
[32m++//   };[m
[32m++[m
[32m++//   const closeCommentModal = () => {[m
[32m++//     setCommentModalVisible(false);[m
[32m++//     setSelectedPostId(null);[m
[32m++//   };[m
[32m++[m
[32m++//   const addComment = (text) => {[m
[32m++//     if (selectedPostId) {[m
[32m++//       const newComment = {[m
[32m++//         id: Date.now().toString(),[m
[32m++//         username: "duytuan.24",[m
[32m++//         text,[m
[32m++//         time: "V·ª´a xong",[m
[32m++//         replies: [],[m
[32m++//         likeCount: 0,[m
[32m++//         isLiked: false,[m
[32m++//       };[m
[32m++//       setPosts((prevPosts) =>[m
[32m++//         prevPosts.map((post) =>[m
[32m++//           post.id === selectedPostId[m
[32m++//             ? { ...post, comments: [...post.comments, newComment] }[m
[32m++//             : post[m
[32m++//         )[m
[32m++//       );[m
[32m++//     }[m
[32m++//   };[m
[32m++[m
[32m++//   const updateCommentLike = (postId, commentId, isReply, replyId) => {[m
[32m++//     setPosts((prevPosts) =>[m
[32m++//       prevPosts.map((post) => {[m
[32m++//         if (post.id === postId) {[m
[32m++//           return {[m
[32m++//             ...post,[m
[32m++//             comments: post.comments.map((comment) => {[m
[32m++//               if (comment.id === commentId) {[m
[32m++//                 if (isReply) {[m
[32m++//                   return {[m
[32m++//                     ...comment,[m
[32m++//                     replies: comment.replies.map((reply) => {[m
[32m++//                       if (reply.id === replyId) {[m
[32m++//                         const newLiked = !reply.isLiked;[m
[32m++//                         return {[m
[32m++//                           ...reply,[m
[32m++//                           isLiked: newLiked,[m
[32m++//                           likeCount: reply.likeCount + (newLiked ? 1 : -1),[m
[32m++//                         };[m
[32m++//                       }[m
[32m++//                       return reply;[m
[32m++//                     }),[m
[32m++//                   };[m
[32m++//                 } else {[m
[32m++//                   const newLiked = !comment.isLiked;[m
[32m++//                   return {[m
[32m++//                     ...comment,[m
[32m++//                     isLiked: newLiked,[m
[32m++//                     likeCount: comment.likeCount + (newLiked ? 1 : -1),[m
[32m++//                   };[m
[32m++//                 }[m
[32m++//               }[m
[32m++//               return comment;[m
[32m++//             }),[m
[32m++//           };[m
[32m++//         }[m
[32m++//         return post;[m
[32m++//       })[m
[32m++//     );[m
[32m++//   };[m
[32m++[m
[32m++//   const handleShare = () => {[m
[32m++//     Alert.alert("Chia s·∫ª", "Ch·ª©c nƒÉng chia s·∫ª s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai sau.");[m
[32m++//   };[m
[32m++[m
[32m++//   return ([m
[32m++//     <View className="flex-1 bg-gray-100 dark:bg-[#0E0C1F] px-3 pt-10">[m
[32m++//       {/* Input ƒëƒÉng b√†i m·ªõi */}[m
[32m++//       <View className="flex-row items-center mb-2">[m
[32m++//         <Image[m
[32m++//           source={{ uri: "https://randomuser.me/api/portraits/men/3.jpg" }}[m
[32m++//           className="w-10 h-10 rounded-full mr-2"[m
[32m++//         />[m
[32m++//         <TextInput[m
[32m++//           placeholder="C√≥ g√¨ m·ªõi?"[m
[32m++//           placeholderTextColor={colorScheme === "dark" ? "#aaa" : "#777"}[m
[32m++//           value={newPostText}[m
[32m++//           onChangeText={setNewPostText}[m
[32m++//           className={`flex-1 border rounded-full px-4 py-2 text-base ${[m
[32m++//             colorScheme === "dark"[m
[32m++//               ? "border-gray-600 bg-[#171431] text-white"[m
[32m++//               : "border-gray-700 bg-white text-black"[m
[32m++//           }`}[m
[32m++//           multiline[m
[32m++//         />[m
[32m++//         <TouchableOpacity[m
[32m++//           onPress={addPost}[m
[32m++//           className="ml-2 bg-green-600 px-4 py-2 rounded-full"[m
[32m++//         >[m
[32m++//           <Text className={`${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>ƒêƒÉng</Text>[m
[32m++//         </TouchableOpacity>[m
[32m++//       </View>[m
[32m++[m
[32m++//       {/* Icons th√™m ·∫£nh, GIF, vƒÉn b·∫£n, ... */}[m
[32m++//       <View className="flex-row justify-start mb-3 pl-12">[m
[32m++//         <TouchableOpacity className="mr-4">[m
[32m++//           <Icon name="image" size={24} color={colorScheme === 'dark' ? '#a1a1aa' : '#000000'} />[m
[32m++//         </TouchableOpacity>[m
[32m++//         <TouchableOpacity className="mr-4">[m
[32m++//           <Icon name="file-text" size={24} color={colorScheme === 'dark' ? '#a1a1aa' : '#000000'} />[m
[32m++//         </TouchableOpacity>[m
[32m++//         <TouchableOpacity className="mr-4">[m
[32m++//           <Icon name="more-horizontal" size={24} color={colorScheme === 'dark' ? '#a1a1aa' : '#000000'} />[m
[32m++//         </TouchableOpacity>[m
[32m++//       </View>[m
[32m++[m
[32m++//       {/* Danh s√°ch b√†i ƒëƒÉng */}[m
[32m++//       <FlatList[m
[32m++//         data={posts}[m
[32m++//         keyExtractor={(item) => item.id}[m
[32m++//         renderItem={({ item }) => ([m
[32m++//           <PostItem[m
[32m++//             {...item}[m
[32m++//             // TRUY·ªÄN H√ÄM C·∫¨P NH·∫¨T[m
[32m++//             onPostUpdate={(type, value) => updatePost(item.id, type, value)}[m
[32m++//             onCommentPress={() => openCommentModal(item.id)}[m
[32m++//             onSharePress={handleShare}[m
[32m++//           />[m
[32m++//         )}[m
[32m++//         showsVerticalScrollIndicator={false}[m
[32m++//       />[m
[32m++[m
[32m++//       {/* Comment Modal */}[m
[32m++//       <CommentModal[m
[32m++//         visible={commentModalVisible}[m
[32m++//         onClose={closeCommentModal}[m
[32m++//         comments={[m
[32m++//           posts.find((post) => post.id === selectedPostId)?.comments || [][m
[32m++//         }[m
[32m++//         onAddComment={addComment}[m
[32m++//         onCommentLike={updateCommentLike}[m
[32m++//         postId={selectedPostId}[m
[32m++//       />[m
[32m++//     </View>[m
[32m++//   );[m
[32m++// };[m
[32m++[m
[32m++// export default SocialScreen;[m
[32m++// mobile/src/SocialScreen.tsx[m
[32m++[m
[32m++import React, { useEffect, useState, useCallback, useMemo } from "react"; [m
[32m++import {[m
[32m++  Alert,[m
[32m++  FlatList,[m
[32m++  Image,[m
[32m++  Keyboard,[m
[32m++  KeyboardAvoidingView,[m
[32m++  Modal,[m
[32m++  Platform,[m
[32m++  Text,[m
[32m++  TextInput,[m
[32m++  TouchableOpacity,[m
[32m++  View,[m
[32m++  useColorScheme,[m
[32m++  ActivityIndicator, // Th√™m ActivityIndicator cho tr·∫°ng th√°i Loading[m
[32m++} from "react-native";[m
[32m++import Icon from "react-native-vector-icons/Feather";[m
[32m++// Import c√°c h√†m API v√† Interface ƒë√£ t·∫°o[m
[32m++import {[m
[32m++  fetchPosts,[m
[32m++  createNewPost,[m
[32m++  togglePostLike,[m
[32m++  fetchCommentsByPostId,[m
[32m++  createNewComment,[m
[32m++  Post, [m
[32m++  Comment,[m
[32m++} from "@/services/socialApi"; // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng[m
[32m++[m
[32m++// --- GIAO DI·ªÜN M·∫™U: C·∫ßn ƒë·∫£m b·∫£o PostItem nh·∫≠n ƒë√∫ng Props m·ªõi t·ª´ API ---[m
[32m++const PostItem = ({[m
[32m++  // D·ªØ li·ªáu t·ª´ API[m
[32m++  id,[m
[32m++  User, // Th√¥ng tin ng∆∞·ªùi d√πng (t·ª´ Eager Loading)[m
[32m++  content: contentText, // ƒê·ªïi t√™n content th√†nh contentText[m
[32m++  fileUrl: musicLink, // ƒê·ªïi t√™n fileUrl th√†nh musicLink[m
[32m++  heartCount: likeCount, // ƒê·ªïi t√™n heartCount th√†nh likeCount[m
[32m++  shareCount,[m
[32m++  uploadedAt: time, // ƒê·ªïi t√™n uploadedAt th√†nh time[m
[32m++  // D·ªØ li·ªáu b·ªï sung[m
[32m++  commentCount: initialCommentCount,[m
[32m++  onPostUpdate, [m
[32m++  onCommentPress, [m
[32m++  onSharePress, [m
[32m++}) => {[m
[32m++  const colorScheme = useColorScheme();[m
[32m++  const [isLiked, setIsLiked] = useState(false); // TODO: L·∫•y tr·∫°ng th√°i liked c·ªßa user hi·ªán t·∫°i[m
[32m++  const [currentLikeCount, setCurrentLikeCount] = useState(likeCount);[m
[32m++  const [currentCommentCount, setCurrentCommentCount] = useState(initialCommentCount);[m
[32m++[m
[32m++[m
[32m++  // X·ª≠ l√Ω n√∫t Tim (T√≠ch h·ª£p API)[m
[32m++  const handleLike = async () => {[m
[32m++    try {[m
[32m++        await togglePostLike(id); // G·ªçi API like[m
[32m++        const newLikedStatus = !isLiked;[m
[32m++        const likeChange = newLikedStatus ? 1 : -1;[m
[32m++        [m
[32m++        setIsLiked(newLikedStatus);[m
[32m++        setCurrentLikeCount(prev => prev + likeChange);[m
[32m++[m
[32m++        // B√°o cho m√†n h√¨nh cha bi·∫øt ƒë√£ c·∫≠p nh·∫≠t (c√≥ th·ªÉ kh√¥ng c·∫ßn n·∫øu UI t·ª± c·∫≠p nh·∫≠t)[m
[32m++        onPostUpdate("like", likeChange); [m
[32m++    } catch (error) {[m
[32m++        Alert.alert("L·ªói", "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i th√≠ch.");[m
[32m++    }[m
[32m++  };[m
[32m++[m
[32m++  // H√†m m·ªü comment modal[m
[32m++  const handleCommentPress = () => {[m
[32m++    onCommentPress(); // G·ªçi h√†m t·ª´ SocialScreen ƒë·ªÉ m·ªü modal[m
[32m++  };[m
  [m
[31m--const SocialScreen = () => {[m
[31m--  const user = useAuthStore(state => state.user);[m
[31m--  console.log(user)[m
    return ([m
[31m--    <SafeAreaView>[m
[31m--      <Text>SocialScreen</Text>[m
[31m--      <Text>{user?.username}</Text>[m
[31m--      <Button title="Get me" onPress={async () => {[m
[31m--        const response = await GetMe();[m
[31m--        console.log(response);[m
[31m--      }} />[m
[31m--      <Button title='None' onPress={() => {[m
[31m--        console.log(user)[m
[31m--      }} />[m
[31m--    </SafeAreaView>[m
[31m--  )[m
[32m++    <View className="bg-white dark:bg-[#171431] p-4 rounded-xl mb-4 shadow-md">[m
[32m++      {/* Header (Th√¥ng tin User) */}[m
[32m++      <View className="flex-row justify-between items-center mb-3">[m
[32m++        <View className="flex-row items-center">[m
[32m++          <Image[m
[32m++            source={{ uri: User.avatarUrl || 'https://default-avatar.com/default.jpg' }}[m
[32m++            className="w-10 h-10 rounded-full mr-3"[m
[32m++          />[m
[32m++          <View>[m
[32m++            <Text className={`font-bold ${colorScheme === "dark" ? "text-white" : "text-black"}`}>[m
[32m++              {User.username}[m
[32m++            </Text>[m
[32m++            <Text className={`text-xs ${colorScheme === "dark" ? "text-gray-400" : "text-gray-500"}`}>[m
[32m++              {new Date(time).toLocaleTimeString()}[m
[32m++            </Text>[m
[32m++          </View>[m
[32m++        </View>[m
[32m++        <Icon name="more-horizontal" size={20} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++      </View>[m
[32m++[m
[32m++      {/* Content */}[m
[32m++      {contentText && ([m
[32m++        <Text className={`text-base mb-3 ${colorScheme === "dark" ? "text-gray-200" : "text-gray-800"}`}>[m
[32m++          {contentText}[m
[32m++        </Text>[m
[32m++      )}[m
[32m++      {/* TODO: X·ª≠ l√Ω hi·ªÉn th·ªã nh·∫°c/·∫£nh d·ª±a tr√™n musicLink (fileUrl) */}[m
[32m++      {musicLink && ([m
[32m++          <View className="mb-3 p-3 bg-gray-100 dark:bg-gray-700 rounded-lg">[m
[32m++              <Text className="text-sm font-semibold text-blue-500">Music Link:</Text>[m
[32m++              <Text className="text-xs dark:text-gray-300" numberOfLines={1}>{musicLink}</Text>[m
[32m++          </View>[m
[32m++      )}[m
[32m++[m
[32m++      {/* Actions (Like, Comment, Share) */}[m
[32m++      <View className="flex-row justify-around items-center border-t border-b border-gray-200 dark:border-gray-700 pt-3 mt-2">[m
[32m++        {/* Like */}[m
[32m++        <TouchableOpacity onPress={handleLike} className="flex-row items-center p-2">[m
[32m++          <Icon name="heart" size={20} color={isLiked ? "#ef4444" : (colorScheme === "dark" ? "#9ca3af" : "#000000")} />[m
[32m++          <Text className={`ml-1 text-sm ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>[m
[32m++            {currentLikeCount} Th√≠ch[m
[32m++          </Text>[m
[32m++        </TouchableOpacity>[m
[32m++[m
[32m++        {/* Comment */}[m
[32m++        <TouchableOpacity onPress={handleCommentPress} className="flex-row items-center p-2">[m
[32m++          <Icon name="message-circle" size={20} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++          <Text className={`ml-1 text-sm ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>[m
[32m++            {currentCommentCount} B√¨nh lu·∫≠n[m
[32m++          </Text>[m
[32m++        </TouchableOpacity>[m
[32m++[m
[32m++        {/* Share */}[m
[32m++        <TouchableOpacity onPress={onSharePress} className="flex-row items-center p-2">[m
[32m++          <Icon name="share-2" size={20} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++          <Text className={`ml-1 text-sm ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>[m
[32m++            {shareCount} Chia s·∫ª[m
[32m++          </Text>[m
[32m++        </TouchableOpacity>[m
[32m++      </View>[m
[32m++    </View>[m
[32m++  );[m
[32m++};[m
[32m++[m
[32m++// --- COMMENT MODAL COMPONENT (ƒê√£ t√≠ch h·ª£p API) ---[m
[32m++[m
[32m++const CommentItem = ({ comment, onReply, onQuote, onLike }) => {[m
[32m++    const colorScheme = useColorScheme();[m
[32m++    const [isLiked, setIsLiked] = useState(false); // T·∫°m th·ªùi[m
[32m++    const [likeCount, setLikeCount] = useState(0); // T·∫°m th·ªùi[m
[32m++[m
[32m++    // Logic ƒë·ªÉ render comment, reply, quote, ...[m
[32m++    return ([m
[32m++        <View className="mb-3">[m
[32m++            {/* Comment cha */}[m
[32m++            <View className="flex-row items-center mb-1">[m
[32m++                <Image[m
[32m++                    source={{ uri: comment.User.avatarUrl || 'https://default-avatar.com/default.jpg' }}[m
[32m++                    className="w-6 h-6 rounded-full mr-2"[m
[32m++                />[m
[32m++                <Text className={`font-bold text-sm ${colorScheme === "dark" ? "text-white" : "text-black"}`}>[m
[32m++                    {comment.User.username}[m
[32m++                </Text>[m
[32m++                <Text className={`text-xs ml-2 ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>[m
[32m++                    {new Date(comment.commentedAt).toLocaleTimeString()}[m
[32m++                </Text>[m
[32m++            </View>[m
[32m++            <Text className={`text-sm ml-8 ${colorScheme === "dark" ? "text-gray-200" : "text-gray-800"}`}>[m
[32m++                {comment.content}[m
[32m++            </Text>[m
[32m++            {/* N√∫t tr·∫£ l·ªùi v√† like */}[m
[32m++            <View className="flex-row ml-8 mt-1">[m
[32m++                <TouchableOpacity[m
[32m++                    onPress={() => onLike(comment.id)} // TODO: G·ªåI API LIKE COMMENT[m
[32m++                    className="flex-row items-center space-x-1"[m
[32m++                >[m
[32m++                    <Icon[m
[32m++                        name={isLiked ? "heart" : "heart"}[m
[32m++                        size={16}[m
[32m++                        color={isLiked ? "#ef4444" : (colorScheme === "dark" ? "#9ca3af" : "#000000")}[m
[32m++                    />[m
[32m++                    <Text[m
[32m++                        className={`text-xs ${isLiked ? "text-red-400" : (colorScheme === "dark" ? "text-gray-200" : "text-gray-800")}`}[m
[32m++                    >[m
[32m++                        {likeCount}[m
[32m++                    </Text>[m
[32m++                </TouchableOpacity>[m
[32m++                <TouchableOpacity[m
[32m++                    onPress={() => onReply(comment)}[m
[32m++                    className="flex-row items-center px-2"[m
[32m++                >[m
[32m++                    <Icon name="corner-up-left" size={16} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++                    <Text className={`text-xs ${colorScheme === "dark" ? "text-gray-400" : "text-black"}`}>Tr·∫£ l·ªùi</Text>[m
[32m++                </TouchableOpacity>[m
[32m++            </View>[m
[32m++            {/* TODO: Logic hi·ªÉn th·ªã Replies n·∫øu c√≥ */}[m
[32m++        </View>[m
[32m++    );[m
  }[m
  [m
[32m++const CommentModal = ({[m
[32m++  visible,[m
[32m++  onClose,[m
[32m++  onAddComment,[m
[32m++  postId,[m
[32m++}) => {[m
[32m++  const colorScheme = useColorScheme();[m
[32m++  const [newComment, setNewComment] = useState("");[m
[32m++  const [replyTo, setReplyTo] = useState<Comment | null>(null);[m
[32m++  const [isKeyboardVisible, setKeyboardVisible] = useState(false);[m
[32m++  const [comments, setComments] = useState<Comment[]>([]);[m
[32m++  const [isLoadingComments, setIsLoadingComments] = useState(false);[m
[32m++[m
[32m++  // H√ÄM FETCH B√åNH LU·∫¨N[m
[32m++  const loadComments = useCallback(async () => {[m
[32m++    if (!postId) return;[m
[32m++    setIsLoadingComments(true);[m
[32m++    try {[m
[32m++      const data = await fetchCommentsByPostId(postId);[m
[32m++      setComments(data); [m
[32m++    } catch (error) {[m
[32m++      setComments([]);[m
[32m++    } finally {[m
[32m++      setIsLoadingComments(false);[m
[32m++    }[m
[32m++  }, [postId]);[m
[32m++[m
[32m++  useEffect(() => {[m
[32m++    if (visible && postId) {[m
[32m++      loadComments();[m
[32m++    }[m
[32m++  }, [visible, postId, loadComments]);[m
[32m++[m
[32m++[m
[32m++  // H√ÄM TH√äM COMMENT M·ªöI (G·ªåI API)[m
[32m++  const handleAddComment = async () => {[m
[32m++    if (newComment.trim() && postId) {[m
[32m++      try {[m
[32m++        const parentId = replyTo ? replyTo.id : null;[m
[32m++        [m
[32m++        // G·ªåI API T·∫†O COMMENT[m
[32m++        const createdComment = await createNewComment(postId, newComment.trim(), parentId);[m
[32m++        [m
[32m++        // C·∫≠p nh·∫≠t state UI[m
[32m++        setComments((prev) => [...prev, createdComment]);[m
[32m++[m
[32m++        // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng comment trong Post (g·ªçi callback t·ª´ SocialScreen)[m
[32m++        if (onAddComment) {[m
[32m++          onAddComment(createdComment); [m
[32m++        }[m
[32m++[m
[32m++        setNewComment("");[m
[32m++        setReplyTo(null);[m
[32m++        Keyboard.dismiss();[m
[32m++[m
[32m++      } catch (error) {[m
[32m++        // L·ªói ƒë√£ ƒë∆∞·ª£c Alert b√™n trong socialApi.ts[m
[32m++      }[m
[32m++    }[m
[32m++  };[m
[32m++  [m
[32m++  // X·ª≠ l√Ω reply[m
[32m++  const handleReply = (comment: Comment) => {[m
[32m++    setReplyTo(comment);[m
[32m++  };[m
[32m++  const cancelReply = () => {[m
[32m++    setReplyTo(null);[m
[32m++  };[m
[32m++[m
[32m++  // TODO: X·ª≠ l√Ω Like Comment[m
[32m++  const handleLikeComment = (commentId: string) => {[m
[32m++      Alert.alert("T√≠nh nƒÉng", `Th√≠ch b√¨nh lu·∫≠n ${commentId}. C·∫ßn tri·ªÉn khai API.`);[m
[32m++  }[m
[32m++[m
[32m++  // ... (Gi·ªØ nguy√™n Keyboard listeners)[m
[32m++  useEffect(() => {[m
[32m++    const keyboardDidShowListener = Keyboard.addListener("keyboardDidShow", () => setKeyboardVisible(true));[m
[32m++    const keyboardDidHideListener = Keyboard.addListener("keyboardDidHide", () => setKeyboardVisible(false));[m
[32m++    return () => {[m
[32m++      keyboardDidShowListener.remove();[m
[32m++      keyboardDidHideListener.remove();[m
[32m++    };[m
[32m++  }, []);[m
[32m++  // ... (K·∫øt th√∫c gi·ªØ nguy√™n)[m
[32m++[m
[32m++[m
[32m++  return ([m
[32m++    <Modal visible={visible} animationType="slide" transparent onRequestClose={onClose}>[m
[32m++      <KeyboardAvoidingView[m
[32m++        style={{[m
[32m++          flex: 1,[m
[32m++          justifyContent: "flex-end",[m
[32m++          backgroundColor: "rgba(0,0,0,0.5)",[m
[32m++        }}[m
[32m++        behavior={Platform.OS === "ios" ? "padding" : "height"}[m
[32m++        keyboardVerticalOffset={Platform.OS === "ios" ? 60 : 0}[m
[32m++      >[m
[32m++        <View[m
[32m++          className={`rounded-t-xl p-4 ${isKeyboardVisible ? "h-1/2" : "h-3/4"} ${colorScheme === "dark" ? "bg-[#171431]" : "bg-white"}`}[m
[32m++        >[m
[32m++          {/* Header */}[m
[32m++          <View className="flex-row justify-between items-center mb-4">[m
[32m++            <Text className={`text-lg font-bold ${colorScheme === "dark" ? "text-white" : "text-black"}`}>B√¨nh lu·∫≠n</Text>[m
[32m++            <TouchableOpacity onPress={onClose}>[m
[32m++              <Icon name="x" size={24} color={colorScheme === "dark" ? "#9ca3af" : "#000000"} />[m
[32m++            </TouchableOpacity>[m
[32m++          </View>[m
[32m++          [m
[32m++          {/* LIST COMMENTS */}[m
[32m++          {isLoadingComments ? ([m
[32m++            <ActivityIndicator size="large" color={colorScheme === "dark" ? "#fff" : "#000"} className="mt-10" />[m
[32m++          ) : ([m
[32m++            <FlatList[m
[32m++                data={comments} [m
[32m++                keyExtractor={(item) => item.id.toString()}[m
[32m++                renderItem={({ item }) => ([m
[32m++                    <CommentItem [m
[32m++                        comment={item} [m
[32m++                        onReply={handleReply} [m
[32m++                        onQuote={() => {}} [m
[32m++                        onLike={handleLikeComment} [m
[32m++                    />[m
[32m++                )}[m
[32m++                showsVerticalScrollIndicator={false}[m
[32m++            />[m
[32m++          )}[m
[32m++[m
[32m++          {/* INPUT AREA */}[m
[32m++          {replyTo && ([m
[32m++            <View className={`rounded p-2 mb-2 flex-row justify-between items-center ${colorScheme === "dark" ? "bg-gray-700" : "bg-gray-200"}`}>[m
[32m++              <Text[m
[32m++                className={`italic text-sm flex-1 ${colorScheme === "dark" ? "text-gray-300" : "text-gray-700"}`}[m
[32m++                numberOfLines={1}[m
[32m++              >[m
[32m++                {`Tr·∫£ l·ªùi: ${replyTo.content}`} [m
[32m++              </Text>[m
[32m++              <TouchableOpacity onPress={cancelReply}>[m
[32m++                <Icon name="x" size={20} color="#ef4444" />[m
[32m++              </TouchableOpacity>[m
[32m++            </View>[m
[32m++          )}[m
[32m++          <View className={`flex-row items-center py-2 px-2 border-t ${colorScheme === "dark" ? "border-gray-700" : "border-gray-300"}`}>[m
[32m++            <TextInput[m
[32m++              placeholder="Vi·∫øt b√¨nh lu·∫≠n..."[m
[32m++              placeholderTextColor={colorScheme === "dark" ? "#aaa" : "#777"}[m
[32m++              value={newComment}[m
[32m++              onChangeText={setNewComment}[m
[32m++              className={`flex-1 border rounded-full px-4 py-2 text-base ${colorScheme === "dark" ? "border-gray-600 bg-[#0E0C1F] text-white" : "border-gray-700 bg-white text-black"}`}[m
[32m++              multiline[m
[32m++            />[m
[32m++            <TouchableOpacity[m
[32m++              onPress={handleAddComment}[m
[32m++              disabled={newComment.trim() === ""}[m
[32m++              className={`ml-2 px-4 py-2 rounded-full ${newComment.trim() ? "bg-green-600" : "bg-gray-500"}`}[m
[32m++            >[m
[32m++              <Text className="text-white font-bold">G·ª≠i</Text>[m
[32m++            </TouchableOpacity>[m
[32m++          </View>[m
[32m++        </View>[m
[32m++      </KeyboardAvoidingView>[m
[32m++    </Modal>[m
[32m++  );[m
[32m++};[m
[32m++[m
[32m++[m
[32m++const SocialScreen = () => {[m
[32m++  const colorScheme = useColorScheme();[m
[32m++  const [posts, setPosts] = useState<Post[]>([]); [m
[32m++  const [isLoading, setIsLoading] = useState(true); [m
[32m++  const [newPostText, setNewPostText] = useState("");[m
[32m++  const [newPostMusicLink, setNewPostMusicLink] = useState("");[m
[32m++  const [commentModalVisible, setCommentModalVisible] = useState(false);[m
[32m++  const [selectedPostId, setSelectedPostId] = useState<string | null>(null);[m
[32m++[m
[32m++  // H√ÄM T·∫¢I B√ÄI ƒêƒÇNG (FEED)[m
[32m++  const loadPosts = useCallback(async () => {[m
[32m++    setIsLoading(true);[m
[32m++    try {[m
[32m++      const data = await fetchPosts();[m
[32m++      setPosts(data);[m
[32m++    } catch (error) {[m
[32m++      setPosts([]); [m
[32m++    } finally {[m
[32m++      setIsLoading(false);[m
[32m++    }[m
[32m++  }, []);[m
[32m++[m
[32m++  useEffect(() => {[m
[32m++    loadPosts();[m
[32m++  }, [loadPosts]);[m
[32m++[m
[32m++  // H√ÄM T·∫†O B√ÄI ƒêƒÇNG M·ªöI (G·ªåI API)[m
[32m++  const addPost = async () => {[m
[32m++    if (newPostText.trim() === "" && newPostMusicLink.trim() === "") return;[m
[32m++    [m
[32m++    try {[m
[32m++      const newPost = await createNewPost(newPostText.trim(), newPostMusicLink.trim());[m
[32m++[m
[32m++      setPosts([newPost, ...posts]);[m
[32m++      setNewPostText("");[m
[32m++      setNewPostMusicLink("");[m
[32m++      Keyboard.dismiss();[m
[32m++      [m
[32m++    } catch (error) {[m
[32m++       // L·ªói ƒë√£ ƒë∆∞·ª£c Alert b√™n trong socialApi.ts[m
[32m++    }[m
[32m++  };[m
[32m++[m
[32m++  // H√ÄM C·∫¨P NH·∫¨T POSTS: C·∫≠p nh·∫≠t count sau khi Like/Share th√†nh c√¥ng[m
[32m++  const updatePost = (id: string, type: 'like' | 'comment' | 'share', value: number) => {[m
[32m++    setPosts((prevPosts) =>[m
[32m++        prevPosts.map((post) => {[m
[32m++          if (post.id === id) {[m
[32m++            if (type === 'like') return { ...post, heartCount: post.heartCount + value };[m
[32m++            if (type === 'comment') return { ...post, commentCount: post.commentCount + value };[m
[32m++            if (type === 'share') return { ...post, shareCount: post.shareCount + value };[m
[32m++          }[m
[32m++          return post;[m
[32m++        })[m
[32m++    );[m
[32m++  };[m
[32m++  [m
[32m++  // H√ÄM X·ª¨ L√ù KHI C√ì COMMENT M·ªöI T·ª™ MODAL (ƒê√£ g·ªçi API v√† th√†nh c√¥ng)[m
[32m++  const handleCommentAdded = (newComment: Comment) => {[m
[32m++    // TƒÉng commentCount c·ªßa Post t∆∞∆°ng ·ª©ng[m
[32m++    if (selectedPostId) {[m
[32m++        updatePost(selectedPostId, 'comment', 1);[m
[32m++    }[m
[32m++  }[m
[32m++[m
[32m++  const openCommentModal = (postId: string) => {[m
[32m++    setSelectedPostId(postId);[m
[32m++    setCommentModalVisible(true);[m
[32m++  };[m
[32m++[m
[32m++  const closeCommentModal = () => {[m
[32m++    setCommentModalVisible(false);[m
[32m++    setSelectedPostId(null);[m
[32m++  };[m
[32m++[m
[32m++  const handleShare = () => {[m
[32m++    Alert.alert("Chia s·∫ª", "Ch·ª©c nƒÉng chia s·∫ª s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai sau.");[m
[32m++  };[m
[32m++[m
[32m++  return ([m
[32m++    <View className="flex-1 bg-gray-100 dark:bg-[#0E0C1F] px-3 pt-10">[m
[32m++      {/* Input ƒëƒÉng b√†i m·ªõi */}[m
[32m++      <View className="flex-row items-center mb-2">[m
[32m++        <Image[m
[32m++          source={{ uri: "https://randomuser.me/api/portraits/men/3.jpg" }} // Thay b·∫±ng Avatar ng∆∞·ªùi d√πng hi·ªán t·∫°i[m
[32m++          className="w-10 h-10 rounded-full mr-2"[m
[32m++        />[m
[32m++        <TextInput[m
[32m++          placeholder="C√≥ g√¨ m·ªõi?"[m
[32m++          placeholderTextColor={colorScheme === "dark" ? "#aaa" : "#777"}[m
[32m++          value={newPostText}[m
[32m++          onChangeText={setNewPostText}[m
[32m++          className={`flex-1 border rounded-full px-4 py-2 text-base ${[m
[32m++            colorScheme === "dark"[m
[32m++              ? "border-gray-600 bg-[#171431] text-white"[m
[32m++              : "border-gray-700 bg-white text-black"[m
[32m++          }`}[m
[32m++          multiline[m
[32m++        />[m
[32m++        <TouchableOpacity[m
[32m++          onPress={addPost} [m
[32m++          disabled={newPostText.trim() === "" && newPostMusicLink.trim() === ""}[m
[32m++          className={`ml-2 px-4 py-2 rounded-full ${newPostText.trim() || newPostMusicLink.trim() ? "bg-green-600" : "bg-gray-500"}`}[m
[32m++        >[m
[32m++          <Text className="text-white font-bold">ƒêƒÉng</Text>[m
[32m++        </TouchableOpacity>[m
[32m++      </View>[m
[32m++[m
[32m++      {/* Icons th√™m ·∫£nh, GIF, vƒÉn b·∫£n, ... (C·∫ßn th√™m logic ƒë·ªÉ g√°n v√†o newPostMusicLink/newPostText) */}[m
[32m++      <View className="flex-row justify-start mb-3 pl-12">[m
[32m++        <TouchableOpacity className="mr-4">[m
[32m++          <Icon name="image" size={24} color={colorScheme === 'dark' ? '#a1a1aa' : '#000000'} />[m
[32m++        </TouchableOpacity>[m
[32m++        <TouchableOpacity className="mr-4">[m
[32m++          <Icon name="file-text" size={24} color={colorScheme === 'dark' ? '#a1a1aa' : '#000000'} />[m
[32m++        </TouchableOpacity>[m
[32m++        <TouchableOpacity className="mr-4">[m
[32m++          <Icon name="more-horizontal" size={24} color={colorScheme === 'dark' ? '#a1a1aa' : '#000000'} />[m
[32m++        </TouchableOpacity>[m
[32m++      </View>[m
[32m++[m
[32m++      {/* Danh s√°ch b√†i ƒëƒÉng */}[m
[32m++      {isLoading ? ([m
[32m++        <ActivityIndicator size="large" color={colorScheme === "dark" ? "#fff" : "#000"} className="mt-10" />[m
[32m++      ) : ([m
[32m++        <FlatList[m
[32m++          data={posts} [m
[32m++          keyExtractor={(item) => item.id.toString()}[m
[32m++          renderItem={({ item }) => ([m
[32m++            <PostItem[m
[32m++              {...item}[m
[32m++              onPostUpdate={(type, value) => updatePost(item.id, type, value)}[m
[32m++              onCommentPress={() => openCommentModal(item.id.toString())}[m
[32m++              onSharePress={handleShare}[m
[32m++            />[m
[32m++          )}[m
[32m++          showsVerticalScrollIndicator={false}[m
[32m++          onRefresh={loadPosts}[m
[32m++          refreshing={isLoading}[m
[32m++        />[m
[32m++      )}[m
[32m++      [m
[32m++      {/* Comment Modal */}[m
[32m++      <CommentModal[m
[32m++        visible={commentModalVisible}[m
[32m++        onClose={closeCommentModal}[m
[32m++        onAddComment={handleCommentAdded}[m
[32m++        postId={selectedPostId}[m
[32m++      />[m
[32m++    </View>[m
[32m++  );[m
[32m++};[m
[32m++[m
  export default SocialScreen;[m
[1mdiff --cc mobile/app/(tabs)/YourLibraryScreen.tsx[m
[1mindex 14fce14,14fce14..6c72e01[m
[1m--- a/mobile/app/(tabs)/YourLibraryScreen.tsx[m
[1m+++ b/mobile/app/(tabs)/YourLibraryScreen.tsx[m
[36m@@@ -20,7 -20,7 +20,7 @@@[m [mconst libraryItems = [m
      title: 'Artists',[m
      icon: 'person',[m
      screen: 'ArtistsFollowingScreen',[m
[31m--    color: '#fff999',[m
[32m++    color: '#FFA500',[m
    },[m
    {[m
      id: '3',[m
[36m@@@ -257,8 -257,8 +257,8 @@@[m [mexport default function YourLibraryScre[m
    );[m
  [m
    return ([m
[31m--    <SafeAreaView className="flex-1 bg-black px-4 pt-4">[m
[31m--      <Text className="text-white text-2xl font-semibold mb-4">[m
[32m++    <SafeAreaView className="flex-1 bg-white dark:bg-black px-4 pt-4">[m
[32m++      <Text className="text-black dark:text-white text-2xl font-semibold mb-4">[m
          Your Library[m
        </Text>[m
        <FlatList[m
[36m@@@ -270,11 -270,11 +270,11 @@@[m
          className="mb-6"[m
        />[m
        <View className="flex-row justify-between items-center mb-2">[m
[31m--        <Text className="text-white text-lg font-semibold">[m
[32m++        <Text className="text-black dark:text-white text-lg font-semibold">[m
            Recently Played[m
          </Text>[m
          <TouchableOpacity>[m
[31m--          <Text className="text-gray-400">See more</Text>[m
[32m++          <Text className="text-gray-400 dark:text-gray-300">See more</Text>[m
          </TouchableOpacity>[m
        </View>[m
        <FlatList[m
[1mdiff --cc mobile/app/(tabs)/_layout.tsx[m
[1mindex 3eddfc9,3eddfc9..7fb56a1[m
[1m--- a/mobile/app/(tabs)/_layout.tsx[m
[1m+++ b/mobile/app/(tabs)/_layout.tsx[m
[36m@@@ -1,118 -1,118 +1,14 @@@[m
[31m--// import { createBottomTabNavigator } from "@react-navigation/bottom-tabs";[m
[31m--// import React from "react";[m
[31m--// import { Text, TouchableOpacity, View } from "react-native";[m
[31m--// import Icon from "react-native-vector-icons/Ionicons";[m
[32m++import { Redirect, Tabs } from "expo-router";[m
[32m++import React from "react";[m
  [m
[31m--// import HomeScreen from "@/app/(tabs)/HomeScreen";[m
[31m--// import ProfileStackNavigator from "@/app/(tabs)/ProfileStackNavigator";[m
[31m--// import SearchScreen from "@/app/(tabs)/SearchScreen";[m
[31m--// import YourLibraryStackNavigator from "@/app/(tabs)/YourLibraryStackNavigator";[m
[31m--// import { SafeAreaView } from "react-native-safe-area-context";[m
[31m--[m
[31m--// const Tab = createBottomTabNavigator();[m
[31m--[m
[31m--// function CustomTabBar({ state, descriptors, navigation }: any) {[m
[31m--//   return ([m
[31m--//     <SafeAreaView[m
[31m--//       edges={["bottom"]}[m
[31m--//       className="absolute bottom-5 left-5 right-5 bg-transparent items-center justify-center"[m
[31m--//     >[m
[31m--//       <View className="flex-row bg-[#333333] rounded-3xl py-2.5 px-4 shadow-2xl border-2 border-gray-300">[m
[31m--//         {state.routes.map((route: any, index: number) => {[m
[31m--//           const { options } = descriptors[route.key];[m
[31m--//           const label =[m
[31m--//             options.tabBarLabel !== undefined[m
[31m--//               ? options.tabBarLabel[m
[31m--//               : options.title !== undefined[m
[31m--//                 ? options.title[m
[31m--//                 : route.name;[m
[31m--[m
[31m--//           const isFocused = state.index === index;[m
[31m--[m
[31m--//           const onPress = () => {[m
[31m--//             const event = navigation.emit({[m
[31m--//               type: "tabPress",[m
[31m--//               target: route.key,[m
[31m--//               canPreventDefault: true,[m
[31m--//             });[m
[31m--[m
[31m--//             if (!isFocused && !event.defaultPrevented) {[m
[31m--//               navigation.navigate(route.name);[m
[31m--//             }[m
[31m--//           };[m
[31m--[m
[31m--//           let iconName = "ellipse";[m
[31m--//           if (label === "Home") {[m
[31m--//             iconName = isFocused ? "home" : "home-outline";[m
[31m--//           } else if (label === "Search") {[m
[31m--//             iconName = isFocused ? "search" : "search-outline";[m
[31m--//           } else if (label === "Library") {[m
[31m--//             iconName = isFocused ? "library" : "library-outline";[m
[31m--//           } else if (label === "Profile") {[m
[31m--//             iconName = isFocused ? "person" : "person-outline";[m
[31m--//           }[m
[31m--[m
[31m--//           return ([m
[31m--//             <TouchableOpacity[m
[31m--//               accessibilityRole="button"[m
[31m--//               accessibilityState={isFocused ? { selected: true } : {}}[m
[31m--//               accessibilityLabel={options.tabBarAccessibilityLabel}[m
[31m--//               onPress={onPress}[m
[31m--//               key={label}[m
[31m--//               className="flex-1 items-center justify-center p-1.5 mx-1.5 relative h-12"[m
[31m--//               activeOpacity={0.7}[m
[31m--//             >[m
[31m--//               <View className="w-12 h-12 items-center justify-center">[m
[31m--//                 {isFocused && ([m
[31m--//                   <View className="absolute w-12 h-12 rounded-full bg-green-500 -top-2 z-0" />[m
[31m--//                 )}[m
[31m--//                 <Icon[m
[31m--//                   name={iconName}[m
[31m--//                   size={24}[m
[31m--//                   color={isFocused ? "white" : "white"}[m
[31m--//                 />[m
[31m--//               </View>[m
[31m--//               {isFocused && ([m
[31m--//                 <Text className="text-xs mt-1 text-white font-bold">[m
[31m--//                   {label}[m
[31m--//                 </Text>[m
[31m--//               )}[m
[31m--//             </TouchableOpacity>[m
[31m--//           );[m
[31m--//         })}[m
[31m--//       </View>[m
[31m--//     </SafeAreaView>[m
[31m--//   );[m
[31m--// }[m
[31m--[m
[31m--// export default function TabNavigator() {[m
[31m--//   return ([m
[31m--//     <Tab.Navigator[m
[31m--//       id={undefined}[m
[31m--//       tabBar={(props) => <CustomTabBar {...props} />}[m
[31m--//       screenOptions={{[m
[31m--//         headerShown: false,[m
[31m--//       }}[m
[31m--//     >[m
[31m--//       <Tab.Screen name="Home" component={HomeScreen} />[m
[31m--//       <Tab.Screen name="Search" component={SearchScreen} />[m
[31m--//       <Tab.Screen name="Library" component={YourLibraryStackNavigator} />[m
[31m--//       <Tab.Screen name="Profile" component={ProfileStackNavigator} />[m
[31m--//     </Tab.Navigator>[m
[31m--//   );[m
[31m--// }[m
[31m--[m
[31m--import React from 'react';[m
[31m--import { Redirect, Tabs } from 'expo-router';[m
[31m--[m
[31m--import Colors from '@/constants/colors';[m
[31m--import { useColorScheme } from '@/components/useColorScheme';[m
[31m--import TabBar from '@/components/tabBar/TabBar';[m
[31m--import useAuthStore from '@/store/authStore';[m
[32m++import TabBar from "@/components/tabBar/TabBar";[m
[32m++import { useColorScheme } from "@/components/useColorScheme";[m
[32m++import Colors from "@/constants/colors";[m
[32m++import useAuthStore from "@/store/authStore";[m
  [m
  export default function TabLayout() {[m
    const colorScheme = useColorScheme();[m
[31m--  const isLoggedIn = useAuthStore(state => state.isLoggedIn);[m
[32m++  const isLoggedIn = useAuthStore((state) => state.isLoggedIn);[m
  [m
    if (!isLoggedIn) {[m
      return <Redirect href="/(auth)" />;[m
[36m@@@ -121,7 -121,7 +17,7 @@@[m
    return ([m
      <Tabs[m
        screenOptions={{[m
[31m--        tabBarActiveTintColor: Colors[colorScheme ?? 'light'].tint,[m
[32m++        tabBarActiveTintColor: Colors[colorScheme ?? "light"].tint,[m
          headerShown: false,[m
        }}[m
        tabBar={(props) => <TabBar {...props} />}[m
[36m@@@ -129,33 -129,33 +25,33 @@@[m
        <Tabs.Screen[m
          name="HomeScreen"[m
          options={{[m
[31m--          title: 'Home'[m
[32m++          title: "Home",[m
          }}[m
        />[m
        <Tabs.Screen[m
          name="SearchScreen"[m
          options={{[m
[31m--          title: 'Search'[m
[32m++          title: "Search",[m
          }}[m
        />[m
        <Tabs.Screen[m
          name="SocialScreen"[m
          options={{[m
[31m--          title: 'Social'[m
[32m++          title: "Social",[m
          }}[m
        />[m
        <Tabs.Screen[m
          name="YourLibraryScreen"[m
          options={{[m
[31m--          title: 'Your Library'[m
[32m++          title: "Your Library",[m
          }}[m
        />[m
        <Tabs.Screen[m
          name="ProfileScreen"[m
          options={{[m
[31m--          title: 'Profile'[m
[32m++          title: "Profile",[m
          }}[m
        />[m
      </Tabs>[m
    );[m
[31m--}[m
[32m++}[m
[1mdiff --cc mobile/app/_layout.tsx[m
[1mindex 5f13894,5f13894..8541ea7[m
[1m--- a/mobile/app/_layout.tsx[m
[1m+++ b/mobile/app/_layout.tsx[m
[36m@@@ -1,37 -1,37 +1,33 @@@[m
[31m--import FontAwesome from '@expo/vector-icons/FontAwesome';[m
[31m--import { DarkTheme, DefaultTheme, ThemeProvider } from '@react-navigation/native';[m
[31m--import { useFonts } from 'expo-font';[m
[31m--import { Stack } from 'expo-router';[m
[31m--import * as SplashScreen from 'expo-splash-screen';[m
[31m--import { useEffect } from 'react';[m
[31m--import 'react-native-reanimated';[m
[31m--import '@/global.css';[m
[32m++import "@/global.css";[m
[32m++import FontAwesome from "@expo/vector-icons/FontAwesome";[m
[32m++import {[m
[32m++  DarkTheme,[m
[32m++  DefaultTheme,[m
[32m++  ThemeProvider as NavigationThemeProvider,[m
[32m++} from "@react-navigation/native";[m
[32m++import { useFonts } from "expo-font";[m
[32m++import { Stack } from "expo-router";[m
[32m++import * as SplashScreen from "expo-splash-screen";[m
[32m++import { useEffect } from "react";[m
[32m++// ƒê·∫£m b·∫£o ƒë√£ import View[m
[32m++import { View } from "react-native"; [m
[32m++import "react-native-reanimated";[m
  [m
[31m--import { useColorScheme } from '@/components/useColorScheme';[m
[31m--import { SafeAreaProvider } from 'react-native-safe-area-context';[m
[31m--import { AlertProvider } from '@/context/AlertContext';[m
[31m--import useAuthStore from '@/store/authStore';[m
[32m++import { ThemeProvider, useTheme } from "@/components/ThemeContext";[m
[32m++import { AlertProvider } from "@/context/AlertContext";[m
[32m++// ƒê√£ import SafeAreaProvider, ƒë√¢y l√† c·∫•u tr√∫c ƒë√∫ng[m
[32m++import { SafeAreaProvider } from "react-native-safe-area-context";[m
  [m
[31m--export {[m
[31m--  // Catch any errors thrown by the Layout component.[m
[31m--  ErrorBoundary,[m
[31m--} from 'expo-router';[m
[32m++export { ErrorBoundary } from "expo-router";[m
  [m
[31m--// export const unstable_settings = {[m
[31m--//   // Ensure that reloading on `/modal` keeps a back button present.[m
[31m--//   initialRouteName: isLoggedIn ? "(tabs)" : "(auth)",[m
[31m--// };[m
[31m--[m
[31m--// Prevent the splash screen from auto-hiding before asset loading is complete.[m
  SplashScreen.preventAutoHideAsync();[m
  [m
  export default function RootLayout() {[m
    const [loaded, error] = useFonts({[m
[31m--    SpaceMono: require('../assets/fonts/SpaceMono-Regular.ttf'),[m
[32m++    SpaceMono: require("../assets/fonts/SpaceMono-Regular.ttf"),[m
      ...FontAwesome.font,[m
    });[m
  [m
[31m--  // Expo Router uses Error Boundaries to catch errors in the navigation tree.[m
    useEffect(() => {[m
      if (error) throw error;[m
    }, [error]);[m
[36m@@@ -43,26 -43,26 +39,43 @@@[m
    }, [loaded]);[m
  [m
    if (!loaded) {[m
[31m--    return null;[m
[32m++    // ‚úÖ S·ª¨A L·ªñI: Thay return null; b·∫±ng return <View />;[m
[32m++    return <View />; [m
    }[m
  [m
[31m--  return <RootLayoutNav />;[m
[32m++  // C·∫•u tr√∫c Providers ·ªü c·∫•p ƒë·ªô cao nh·∫•t[m
[32m++  return ([m
[32m++    <ThemeProvider>[m
[32m++      <RootLayoutNav />[m
[32m++    </ThemeProvider>[m
[32m++  );[m
  }[m
  [m
  function RootLayoutNav() {[m
[31m--  const colorScheme = useColorScheme();[m
[32m++  const { theme: colorScheme, isThemeLoaded } = useTheme();[m
[32m++  [m
[32m++  if (!isThemeLoaded) {[m
[32m++    // ‚úÖ S·ª¨A L·ªñI: Thay return null; b·∫±ng return <View />;[m
[32m++    return <View />;[m
[32m++  }[m
  [m
    return ([m
[31m--    <ThemeProvider value={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>[m
[31m--      <SafeAreaProvider>[m
[31m--        <AlertProvider>[m
[31m--          <Stack>[m
[31m--            <Stack.Screen name="(tabs)" options={{ headerShown: false }} />[m
[31m--            <Stack.Screen name="(auth)" options={{ headerShown: false }} />[m
[31m--            <Stack.Screen name="(screens)" options={{ headerShown: false }} />[m
[31m--          </Stack>[m
[31m--        </AlertProvider>[m
[31m--      </SafeAreaProvider>[m
[31m--    </ThemeProvider>[m
[32m++    <NavigationThemeProvider[m
[32m++      value={colorScheme === "dark" ? DarkTheme : DefaultTheme}[m
[32m++    >[m
[32m++      {/* N·ªÅn Light Mode l√† tr·∫Øng, Dark Mode l√† ƒëen/x√°m ƒë·∫≠m */}[m
[32m++      <View className="flex-1 bg-white dark:bg-black"> [m
[32m++        <SafeAreaProvider>[m
[32m++          {/* AlertProvider b·ªçc to√†n b·ªô ƒë·ªãnh tuy·∫øn */}[m
[32m++          <AlertProvider>[m
[32m++            <Stack>[m
[32m++              <Stack.Screen name="(tabs)" options={{ headerShown: false }} />[m
[32m++              <Stack.Screen name="(auth)" options={{ headerShown: false }} />[m
[32m++              <Stack.Screen name="(screens)" options={{ headerShown: false }} />[m
[32m++            </Stack>[m
[32m++          </AlertProvider>[m
[32m++        </SafeAreaProvider>[m
[32m++      </View>[m
[32m++    </NavigationThemeProvider>[m
    );[m
[31m--}[m
[32m++}[m
[1mdiff --cc mobile/components/Themed.tsx[m
[1mindex 04018d1,04018d1..0c107c7[m
[1m--- a/mobile/components/Themed.tsx[m
[1m+++ b/mobile/components/Themed.tsx[m
[36m@@@ -3,24 -3,24 +3,24 @@@[m
   * https://docs.expo.io/guides/color-schemes/[m
   */[m
  [m
[31m--import { Text as DefaultText, View as DefaultView } from 'react-native';[m
[32m++import { Text as DefaultText, View as DefaultView } from "react-native";[m
  [m
[31m--import Colors from '@/constants/colors';[m
[31m--import { useColorScheme } from './useColorScheme';[m
[32m++import Colors from "@/constants/colors";[m
[32m++import { useColorScheme } from "./useColorScheme";[m
  [m
  type ThemeProps = {[m
    lightColor?: string;[m
    darkColor?: string;[m
  };[m
  [m
[31m--export type TextProps = ThemeProps & DefaultText['props'];[m
[31m--export type ViewProps = ThemeProps & DefaultView['props'];[m
[32m++export type TextProps = ThemeProps & DefaultText["props"];[m
[32m++export type ViewProps = ThemeProps & DefaultView["props"];[m
  [m
  export function useThemeColor([m
    props: { light?: string; dark?: string },[m
    colorName: keyof typeof Colors.light & keyof typeof Colors.dark[m
  ) {[m
[31m--  const theme = useColorScheme() ?? 'light';[m
[32m++  const theme = useColorScheme() ?? "light";[m
    const colorFromProps = props[theme];[m
  [m
    if (colorFromProps) {[m
[36m@@@ -32,14 -32,14 +32,17 @@@[m
  [m
  export function Text(props: TextProps) {[m
    const { style, lightColor, darkColor, ...otherProps } = props;[m
[31m--  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');[m
[32m++  const color = useThemeColor({ light: lightColor, dark: darkColor }, "text");[m
  [m
    return <DefaultText style={[{ color }, style]} {...otherProps} />;[m
  }[m
  [m
  export function View(props: ViewProps) {[m
    const { style, lightColor, darkColor, ...otherProps } = props;[m
[31m--  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');[m
[32m++  const backgroundColor = useThemeColor([m
[32m++    { light: lightColor, dark: darkColor },[m
[32m++    "background"[m
[32m++  );[m
  [m
    return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;[m
  }[m
[1mdiff --cc mobile/components/button/LibraryItemButton.tsx[m
[1mindex 7a88e2d,7a88e2d..3ee5ccf[m
[1m--- a/mobile/components/button/LibraryItemButton.tsx[m
[1m+++ b/mobile/components/button/LibraryItemButton.tsx[m
[36m@@@ -34,7 -34,7 +34,7 @@@[m [mexport default function LibraryItemButt[m
          <Icon name={icon} size={24} color="#000" />[m
        </View>[m
        {/* Ti√™u ƒë·ªÅ */}[m
[31m--      <Text className="text-black text-base font-semibold">{title}</Text>[m
[32m++      <Text className="text-black dark:text-white text-base font-semibold">{title}</Text>[m
      </TouchableOpacity>[m
    );[m
  }[m
[1mdiff --cc mobile/components/custom/CustomAlert.tsx[m
[1mindex bbf714f,bbf714f..2b54094[m
[1m--- a/mobile/components/custom/CustomAlert.tsx[m
[1m+++ b/mobile/components/custom/CustomAlert.tsx[m
[36m@@@ -1,28 -1,28 +1,31 @@@[m
[31m--import React, { useEffect, useRef } from 'react';[m
[32m++import { useColorScheme } from "@/components/useColorScheme";[m
[32m++import {[m
[32m++  ALERT_ANIMATIONS,[m
[32m++  DEFAULT_ALERT_BUTTONS,[m
[32m++} from "@/constants/AlerConfig";[m
[32m++import { AlertButton, AlertConfig } from "@/types/alert";[m
[32m++import { Ionicons } from "@expo/vector-icons";[m
[32m++import React, { useEffect, useRef } from "react";[m
  import {[m
[31m--  View,[m
[31m--  Text,[m
[31m--  Modal,[m
[31m--  TouchableOpacity,[m
    Animated,[m
    Dimensions,[m
[32m++  Modal,[m
[32m++  Text,[m
[32m++  TouchableOpacity,[m
    TouchableWithoutFeedback,[m
[31m--} from 'react-native';[m
[31m--import { useColorScheme } from '@/components/useColorScheme';[m
[31m--import { Ionicons } from '@expo/vector-icons';[m
[31m--import { AlertConfig, AlertButton } from '@/types/alert';[m
[31m--import { DEFAULT_ALERT_BUTTONS, ALERT_ANIMATIONS } from '@/constants/AlerConfig';[m
[32m++  View,[m
[32m++} from "react-native";[m
  [m
  interface CustomAlertProps {[m
    config: AlertConfig;[m
    onHide: () => void;[m
  }[m
  [m
[31m--const { width: screenWidth } = Dimensions.get('window');[m
[32m++const { width: screenWidth } = Dimensions.get("window");[m
  [m
  const CustomAlert: React.FC<CustomAlertProps> = ({ config, onHide }) => {[m
    const colorScheme = useColorScheme();[m
[31m--  const isDark = 'dark';[m
[32m++  const isDark = "dark";[m
    const scaleAnim = useRef(new Animated.Value(0)).current;[m
    const opacityAnim = useRef(new Animated.Value(0)).current;[m
  [m
[36m@@@ -74,25 -74,25 +77,26 @@@[m
  [m
    const getIconByType = () => {[m
      switch (config.type) {[m
[31m--      case 'success':[m
[31m--        return 'checkmark-circle';[m
[31m--      case 'warning':[m
[31m--        return 'warning';[m
[31m--      case 'error':[m
[31m--        return 'close-circle';[m
[32m++      case "success":[m
[32m++        return "checkmark-circle";[m
[32m++      case "warning":[m
[32m++        return "warning";[m
[32m++      case "error":[m
[32m++        return "close-circle";[m
        default:[m
[31m--        return 'information-circle';[m
[32m++        return "information-circle";[m
      }[m
    };[m
  [m
    const getIconContainerClass = () => {[m
[31m--    const baseClass = 'self-center w-16 h-16 rounded-full justify-center items-center mt-6 mb-4';[m
[32m++    const baseClass =[m
[32m++      "self-center w-16 h-16 rounded-full justify-center items-center mt-6 mb-4";[m
      switch (config.type) {[m
[31m--      case 'success':[m
[32m++      case "success":[m
          return `${baseClass} bg-green-100 dark:bg-green-900/30`;[m
[31m--      case 'warning':[m
[32m++      case "warning":[m
          return `${baseClass} bg-amber-100 dark:bg-amber-900/30`;[m
[31m--      case 'error':[m
[32m++      case "error":[m
          return `${baseClass} bg-red-100 dark:bg-red-900/30`;[m
        default:[m
          return `${baseClass} bg-blue-100 dark:bg-blue-900/30`;[m
[36m@@@ -101,34 -101,34 +105,38 @@@[m
  [m
    const getIconColor = () => {[m
      switch (config.type) {[m
[31m--      case 'success':[m
[31m--        return '#10B981';[m
[31m--      case 'warning':[m
[31m--        return '#F59E0B';[m
[31m--      case 'error':[m
[31m--        return '#EF4444';[m
[32m++      case "success":[m
[32m++        return "#10B981";[m
[32m++      case "warning":[m
[32m++        return "#F59E0B";[m
[32m++      case "error":[m
[32m++        return "#EF4444";[m
        default:[m
[31m--        return '#3B82F6';[m
[32m++        return "#3B82F6";[m
      }[m
    };[m
  [m
[31m--  const getButtonStyle = (button: AlertButton, index: number, totalButtons: number) => {[m
[31m--    let baseClass = 'flex-1 py-4 justify-center items-center';[m
[31m--    [m
[32m++  const getButtonStyle = ([m
[32m++    button: AlertButton,[m
[32m++    index: number,[m
[32m++    totalButtons: number[m
[32m++  ) => {[m
[32m++    let baseClass = "flex-1 py-4 justify-center items-center";[m
[32m++[m
      // Background colors based on theme[m
[31m--    const bgWhite = isDark ? 'bg-gray-800' : 'bg-gray-200';[m
[31m--    const bgGray = isDark ? 'bg-gray-700' : 'bg-gray-50';[m
[31m--    const bgRed = isDark ? 'bg-red-900/20' : 'bg-red-50';[m
[31m--    [m
[32m++    const bgWhite = isDark ? "bg-gray-800" : "bg-gray-200";[m
[32m++    const bgGray = isDark ? "bg-gray-700" : "bg-gray-50";[m
[32m++    const bgRed = isDark ? "bg-red-900/20" : "bg-red-50";[m
[32m++[m
      baseClass += ` ${bgWhite}`;[m
[31m--    [m
[32m++[m
      // Single button[m
      if (totalButtons === 1) {[m
[31m--      baseClass += ' rounded-bl-xl rounded-br-xl';[m
[32m++      baseClass += " rounded-bl-xl rounded-br-xl";[m
      }[m
      // Multiple buttons[m
      else {[m
[31m--      const borderColor = isDark ? 'border-gray-600' : 'border-gray-200';[m
[32m++      const borderColor = isDark ? "border-gray-600" : "border-gray-200";[m
        if (index === 0) {[m
          baseClass += ` rounded-bl-xl border-r ${borderColor}`;[m
        } else if (index === totalButtons - 1) {[m
[36m@@@ -139,9 -139,9 +147,9 @@@[m
      }[m
  [m
      // Button specific styles[m
[31m--    if (button.style === 'cancel') {[m
[32m++    if (button.style === "cancel") {[m
        baseClass = baseClass.replace(bgWhite, bgGray);[m
[31m--    } else if (button.style === 'destructive') {[m
[32m++    } else if (button.style === "destructive") {[m
        baseClass = baseClass.replace(bgWhite, bgRed);[m
      }[m
  [m
[36m@@@ -149,37 -149,37 +157,36 @@@[m
    };[m
  [m
    const getButtonTextStyle = (button: AlertButton) => {[m
[31m--    let textClass = 'text-base font-semibold';[m
[31m--    [m
[32m++    let textClass = "text-base font-semibold";[m
[32m++[m
      switch (button.style) {[m
[31m--      case 'cancel':[m
[31m--        return textClass + (isDark ? ' text-gray-400' : ' text-gray-500');[m
[31m--      case 'destructive':[m
[31m--        return textClass + ' text-gray-500';[m
[32m++      case "cancel":[m
[32m++        return textClass + (isDark ? " text-gray-400" : " text-gray-500");[m
[32m++      case "destructive":[m
[32m++        return textClass + " text-gray-500";[m
        default:[m
[31m--        return textClass + ' text-gray-500';[m
[32m++        return textClass + " text-gray-500";[m
      }[m
    };[m
  [m
    const buttons = config.buttons || DEFAULT_ALERT_BUTTONS;[m
[31m--  const containerBg = isDark ? 'bg-gray-800' : 'bg-gray-100';[m
[31m--  const titleColor = isDark ? 'text-white' : 'text-gray-900';[m
[31m--  const messageColor = isDark ? 'text-gray-300' : 'text-gray-600';[m
[31m--  const borderColor = isDark ? 'border-gray-600' : 'border-gray-200';[m
[32m++  const containerBg = isDark ? "bg-gray-800" : "bg-gray-100";[m
[32m++  const titleColor = isDark ? "text-white" : "text-gray-900";[m
[32m++  const messageColor = isDark ? "text-gray-300" : "text-gray-600";[m
[32m++  const borderColor = isDark ? "border-gray-600" : "border-gray-200";[m
  [m
    return ([m
[31m--    <Modal[m
[31m--      transparent[m
[31m--      visible={true}[m
[31m--      animationType="none"[m
[31m--      statusBarTranslucent[m
[31m--    >[m
[32m++    <Modal transparent visible={true} animationType="none" statusBarTranslucent>[m
        <TouchableWithoutFeedback onPress={handleBackdropPress}>[m
[31m--        <Animated.View [m
[32m++        <Animated.View[m
            className="flex-1 justify-center items-center px-6"[m
            style={[[m
[31m--            { backgroundColor: isDark ? 'rgba(0, 0, 0, 0.7)' : 'rgba(0, 0, 0, 0.5)' },[m
[31m--            { opacity: opacityAnim }[m
[32m++            {[m
[32m++              backgroundColor: isDark[m
[32m++                ? "rgba(0, 0, 0, 0.7)"[m
[32m++                : "rgba(0, 0, 0, 0.5)",[m
[32m++            },[m
[32m++            { opacity: opacityAnim },[m
            ]}[m
          >[m
            <TouchableWithoutFeedback>[m
[36m@@@ -193,21 -193,21 +200,25 @@@[m
                {/* Icon */}[m
                {config.type && ([m
                  <View className={getIconContainerClass()}>[m
[31m--                  <Ionicons [m
[31m--                    name={getIconByType() as any} [m
[31m--                    size={28} [m
[31m--                    color={getIconColor()} [m
[32m++                  <Ionicons[m
[32m++                    name={getIconByType() as any}[m
[32m++                    size={28}[m
[32m++                    color={getIconColor()}[m
                    />[m
                  </View>[m
                )}[m
  [m
                {/* Content */}[m
                <View className="px-6 pb-6 items-center">[m
[31m--                <Text className={`text-xl font-bold ${titleColor} text-center mb-3`}>[m
[32m++                <Text[m
[32m++                  className={`text-xl font-bold ${titleColor} text-center mb-3`}[m
[32m++                >[m
                    {config.title}[m
                  </Text>[m
                  {config.message && ([m
[31m--                  <Text className={`text-base ${messageColor} text-center leading-6`}>[m
[32m++                  <Text[m
[32m++                    className={`text-base ${messageColor} text-center leading-6`}[m
[32m++                  >[m
                      {config.message}[m
                    </Text>[m
                  )}[m
[36m@@@ -236,4 -236,4 +247,4 @@@[m
    );[m
  };[m
  [m
[31m--export default CustomAlert;[m
[32m++export default CustomAlert;[m
[1mdiff --cc mobile/components/custom/CustomButton.tsx[m
[1mindex c939d3e,c939d3e..a13a775[m
[1m--- a/mobile/components/custom/CustomButton.tsx[m
[1m+++ b/mobile/components/custom/CustomButton.tsx[m
[36m@@@ -1,75 -1,75 +1,77 @@@[m
  import React from 'react';[m
[31m--import { TouchableOpacity, Text } from 'react-native';[m
[31m--import Icon from 'react-native-vector-icons/Ionicons';[m
[32m++import { Text, Pressable, View, useColorScheme } from 'react-native';[m
[32m++import { Ionicons as Icon } from '@expo/vector-icons';[m
  [m
  interface CustomButtonProps {[m
[31m--  title: string;[m
[31m--  onPress: () => void;[m
[31m--  iconName?: string;[m
[31m--  variant?: 'primary' | 'secondary' | 'outline';[m
[31m--  size?: 'small' | 'medium' | 'large';[m
[31m--  className?: string;[m
[32m++¬† title: string;[m
[32m++¬† onPress: () => void;[m
[32m++¬† iconName?: string;[m
[32m++¬† variant?: 'primary' | 'secondary' | 'outline';[m
[32m++¬† size?: 'small' | 'medium' | 'large';[m
[32m++¬† className?: string;[m
  }[m
  [m
  export default function CustomButton({[m
[31m--  title,[m
[31m--  onPress,[m
[31m--  iconName,[m
[31m--  variant = 'primary',[m
[31m--  size = 'medium',[m
[31m--  className = '',[m
[32m++¬† title,[m
[32m++¬† onPress,[m
[32m++¬† iconName,[m
[32m++¬† variant = 'primary',[m
[32m++¬† size = 'medium',[m
[32m++¬† className = '',[m
  }: CustomButtonProps) {[m
[31m--  const getButtonStyles = () => {[m
[31m--    let baseStyles = 'rounded-full flex-row items-center justify-center';[m
[31m--    let textStyles = 'font-semibold';[m
[32m++¬† const colorScheme = useColorScheme();[m
[32m++¬† const getButtonStyles = () => {[m
[32m++¬† ¬† let baseStyles = 'rounded-full flex-row items-center justify-center';[m
[32m++¬† ¬† let textStyles = 'font-semibold';[m
  [m
[31m--    switch (variant) {[m
[31m--      case 'primary':[m
[31m--        baseStyles += ' bg-green-600';[m
[31m--        textStyles += ' text-white';[m
[31m--        break;[m
[31m--      case 'secondary':[m
[31m--        baseStyles += ' bg-gray-800';[m
[31m--        textStyles += ' text-white';[m
[31m--        break;[m
[31m--      case 'outline':[m
[31m--        baseStyles += ' border border-gray-600';[m
[31m--        textStyles += ' text-gray-400';[m
[31m--        break;[m
[31m--    }[m
[32m++¬† ¬† switch (variant) {[m
[32m++¬† ¬† ¬† case 'primary':[m
[32m++¬† ¬† ¬† ¬† baseStyles += ' bg-green-600';[m
[32m++¬† ¬† ¬† ¬† textStyles += colorScheme === "dark" ? ' text-white' : ' text-black';[m
[32m++¬† ¬† ¬† ¬† break;[m
[32m++¬† ¬† ¬† case 'secondary':[m
[32m++¬† ¬† ¬† ¬† baseStyles += ' bg-gray-800';[m
[32m++¬† ¬† ¬† ¬† textStyles += ' text-white';[m
[32m++¬† ¬† ¬† ¬† break;[m
[32m++¬† ¬† ¬† case 'outline':[m
[32m++¬† ¬† ¬† ¬† baseStyles += ' border border-gray-600';[m
[32m++¬† ¬† ¬† ¬† textStyles += colorScheme === "dark" ? ' text-gray-400' : ' text-black';[m
[32m++¬† ¬† ¬† ¬† break;[m
[32m++¬† ¬† }[m
  [m
[31m--    switch (size) {[m
[31m--      case 'small':[m
[31m--        baseStyles += ' px-3 py-1';[m
[31m--        textStyles += ' text-sm';[m
[31m--        break;[m
[31m--      case 'large':[m
[31m--        baseStyles += ' px-6 py-3';[m
[31m--        textStyles += ' text-lg';[m
[31m--        break;[m
[31m--    } // Th√™m className t√πy ch·ªânh t·ª´ props[m
[32m++¬† ¬† switch (size) {[m
[32m++¬† ¬† ¬† case 'small':[m
[32m++¬† ¬† ¬† ¬† baseStyles += ' px-3 py-1';[m
[32m++¬† ¬† ¬† ¬† textStyles += ' text-sm';[m
[32m++¬† ¬† ¬† ¬† break;[m
[32m++¬† ¬† ¬† case 'large':[m
[32m++¬† ¬† ¬† ¬† baseStyles += ' px-6 py-3';[m
[32m++¬† ¬† ¬† ¬† textStyles += ' text-lg';[m
[32m++¬† ¬† ¬† ¬† break;[m
[32m++¬† ¬† } [m
  [m
[31m--    baseStyles += ` ${className}`; // X√°c ƒë·ªãnh m√†u icon[m
[32m++¬† ¬† baseStyles += ` ${className}`; [m
  [m
[31m--    const iconColor = variant === 'outline' ? '#9CA3AF' : 'white'; // Th√™m margin cho icon n·∫øu c√≥ title[m
[31m--    const iconMargin = title ? 'mr-2' : '';[m
[32m++¬† ¬† const iconColor = variant === 'primary' ? (colorScheme === "dark" ? 'white' : '#000000') : variant === 'outline' ? (colorScheme === "dark" ? '#9CA3AF' : '#000000') : 'white';[m
[32m++¬† ¬† const iconMargin = title ? 'mr-2' : '';[m
  [m
[31m--    return { baseStyles, textStyles, iconColor, iconMargin };[m
[31m--  };[m
[32m++¬† ¬† return { baseStyles, textStyles, iconColor, iconMargin };[m
[32m++¬† };[m
  [m
[31m--  const { baseStyles, textStyles, iconColor, iconMargin } = getButtonStyles();[m
[32m++¬† const { baseStyles, textStyles, iconColor, iconMargin } = getButtonStyles();[m
  [m
    return ([m
[31m--    <TouchableOpacity className={baseStyles} onPress={onPress}>[m
[32m++    <Pressable className={baseStyles} onPress={onPress}>[m
        {iconName && ([m
[31m--        <Icon[m
[31m--          name={iconName}[m
[31m--          size={18}[m
[31m--          color={iconColor}[m
[31m--          className={iconMargin}[m
[31m--        />[m
[32m++        <View style={{ marginRight: iconMargin === 'mr-2' ? 8 : 0 }}>[m
[32m++          <Icon[m
[32m++            name={iconName as any}[m
[32m++            size={18}[m
[32m++            color={iconColor}[m
[32m++          />[m
[32m++        </View>[m
        )}[m
        <Text className={textStyles}>{title}</Text>[m
[31m--    </TouchableOpacity>[m
[32m++    </Pressable>[m
    );[m
[31m--}[m
[32m++}[m
[1mdiff --cc mobile/components/items/SettingItem.tsx[m
[1mindex 67f6f85,67f6f85..a57a8ad[m
[1m--- a/mobile/components/items/SettingItem.tsx[m
[1m+++ b/mobile/components/items/SettingItem.tsx[m
[36m@@@ -1,28 -1,28 +1,56 @@@[m
[32m++// components/items/SettingItem.tsx[m
[32m++[m
[32m++import { useTheme } from "@/components/ThemeContext";[m
  import React from "react";[m
[31m--import { Text, TouchableOpacity } from "react-native";[m
[32m++import { Text, TouchableOpacity, View } from "react-native";[m
  import Icon from "react-native-vector-icons/Ionicons";[m
  [m
  interface SettingItemProps {[m
    title: string;[m
    onPress: () => void;[m
[31m--  color?: string; // Th√™m prop color t√πy ch·ªçn[m
[32m++  color?: string; // D√πng cho tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát (v√≠ d·ª•: "red" cho ƒêƒÉng xu·∫•t)[m
[32m++  rightComponent?: React.ReactNode;[m
  }[m
  [m
  export default function SettingItem({[m
    title,[m
    onPress,[m
[31m--  color = "white",[m
[32m++  color,[m
[32m++  rightComponent,[m
  }: SettingItemProps) {[m
[32m++  // L·∫•y theme hi·ªán t·∫°i[m
[32m++  const { theme } = useTheme(); [m
[32m++[m
[32m++  let textColor = "black";[m
[32m++  if (color) {[m
[32m++    textColor = color; // ∆Øu ti√™n prop 'color' n·∫øu c√≥ (v√≠ d·ª•: 'red')[m
[32m++  } else if (theme === "dark") {[m
[32m++    textColor = "white"; // N·∫øu Dark Mode, d√πng m√†u tr·∫Øng[m
[32m++  } [m
[32m++  // Logic t√≠nh to√°n m√†u cho Icon m≈©i t√™n (ƒë√£ ƒë√∫ng)[m
[32m++  let iconColor = textColor; // T·∫≠n d·ª•ng m√†u ch·ªØ ƒë√£ t√≠nh to√°n cho icon[m
[32m++[m
    return ([m
      <TouchableOpacity[m
[31m--      className="flex-row items-center justify-between py-4"[m
[32m++      className="flex-row items-center justify-between py-2"[m
        onPress={onPress}[m
        activeOpacity={0.7}[m
[32m++      disabled={!!rightComponent}[m
      >[m
[31m--      <Text className="text-base font-medium" style={{ color: color }}>[m
[32m++      <Text [m
[32m++        style={{ color: textColor }}[m
[32m++        className={"text-base font-medium"}[m
[32m++      >[m
          {title}[m
        </Text>[m
[31m--      <Icon name="chevron-forward" size={24} color={color} />[m
[32m++      <View>[m
[32m++        {rightComponent ? ([m
[32m++          rightComponent[m
[32m++        ) : ([m
[32m++          // √Åp d·ª•ng iconColor ƒë√£ t√≠nh to√°n[m
[32m++          <Icon name="chevron-forward" size={24} color={iconColor} />[m
[32m++        )}[m
[32m++      </View>[m
      </TouchableOpacity>[m
    );[m
[31m--}[m
[32m++}[m
[1mdiff --cc mobile/components/items/SongItem.tsx[m
[1mindex 3dd815e,3dd815e..f983f2a[m
[1m--- a/mobile/components/items/SongItem.tsx[m
[1m+++ b/mobile/components/items/SongItem.tsx[m
[36m@@@ -15,8 -15,8 +15,8 @@@[m [mexport default function SongItem({ titl[m
      <TouchableOpacity className="flex-row items-center py-2" onPress={onPress}>[m
        <Image source={{ uri: image }} className="w-12 h-12 rounded-md mr-3" />[m
        <View className="flex-1">[m
[31m--        <Text className="text-white font-semibold">{title}</Text>[m
[31m--        <Text className="text-gray-400 text-xs">{subtitle}</Text>[m
[32m++        <Text className="text-black dark:text-white font-semibold">{title}</Text>[m
[32m++        <Text className="text-gray-400 dark:text-gray-300 text-xs">{subtitle}</Text>[m
        </View>[m
        <TouchableOpacity onPress={onOptionsPress}>[m
          <Icon name="ellipsis-vertical" size={20} color="#888" />[m
[1mdiff --cc mobile/components/navigation/ProfileStackNavigator.tsx[m
[1mindex d94927f,d94927f..12924d0[m
[1m--- a/mobile/components/navigation/ProfileStackNavigator.tsx[m
[1m+++ b/mobile/components/navigation/ProfileStackNavigator.tsx[m
[36m@@@ -3,6 -3,6 +3,7 @@@[m [mimport React from "react"[m
  import EditProfileScreen from "../../app/(screens)/EditProfileScreen";[m
  import ProfileScreen from "../../app/(tabs)/ProfileScreen";[m
  [m
[32m++[m
  const Stack = createNativeStackNavigator();[m
  [m
  export default function ProfileStackNavigator() {[m
[1mdiff --cc mobile/config/ApiClient.tsx[m
[1mindex 98cc287,98cc287..46f8413[m
[1m--- a/mobile/config/ApiClient.tsx[m
[1m+++ b/mobile/config/ApiClient.tsx[m
[36m@@@ -1,2 -1,2 +1,2 @@@[m
  // thay ƒë·ªãa ch·ªâ IP b·∫±ng ƒë·ªãa ch·ªâ IP c·ªßa m√°y t√≠nh[m
[31m--export const HOST = 'http://10.107.151.251:3000/api/v1';[m
[32m++export const HOST = "http://192.168.1.24:3000/api/v1";[m
[1mdiff --cc mobile/config/axiosClient.tsx[m
[1mindex bda1524,bda1524..11250e9[m
[1m--- a/mobile/config/axiosClient.tsx[m
[1m+++ b/mobile/config/axiosClient.tsx[m
[36m@@@ -11,6 -11,6 +11,7 @@@[m [mconst axiosClient = axios.create([m
  axiosClient.interceptors.request.use([m
    function async(config) {[m
      const token = authStore.getState().token;[m
[32m++    console.log('üîë Request token:', token ? 'present' : 'null', 'URL:', config.url);[m
      if (!config.skipAuth && token) {[m
        config.headers.Authorization = `Bearer ${token}`;[m
      }[m
[1mdiff --cc mobile/constants/icons.tsx[m
[1mindex 1e09520,1e09520..9b281c9[m
[1m--- a/mobile/constants/icons.tsx[m
[1m+++ b/mobile/constants/icons.tsx[m
[36m@@@ -1,5 -1,5 +1,4 @@@[m
[31m--import { FontAwesome5, AntDesign, Ionicons, Feather } from '@expo/vector-icons';[m
[31m--import MaterialIcons from 'react-native-vector-icons/MaterialIcons';[m
[32m++import { FontAwesome5, AntDesign, Ionicons, Feather, MaterialIcons } from '@expo/vector-icons';[m
  import { JSX } from 'react';[m
  [m
  export const icons: Record<string, (props: any) => JSX.Element> =  {[m
[1mdiff --cc mobile/context/SettingsContext.tsx[m
[1mindex 479a127,479a127..cf930f4[m
[1m--- a/mobile/context/SettingsContext.tsx[m
[1m+++ b/mobile/context/SettingsContext.tsx[m
[36m@@@ -7,6 -7,6 +7,8 @@@[m [mtype SettingsContextType = [m
    setStreamingQuality: (quality: string) => void;[m
    downloadQuality: string;[m
    setDownloadQuality: (quality: string) => void;[m
[32m++  theme: 'system' | 'light' | 'dark';[m
[32m++  setTheme: (theme: 'system' | 'light' | 'dark') => void;[m
  };[m
  [m
  export const SettingsContext = createContext<SettingsContextType | undefined>(undefined);[m
[36m@@@ -15,6 -15,6 +17,7 @@@[m [mexport const SettingsProvider = ({ chil[m
    const [musicLanguages, setMusicLanguages] = useState<string[]>(['International', 'Tamil']);[m
    const [streamingQuality, setStreamingQuality] = useState<string>('HD');[m
    const [downloadQuality, setDownloadQuality] = useState<string>('HD');[m
[32m++  const [theme, setTheme] = useState<'system' | 'light' | 'dark'>('system');[m
  [m
    return ([m
      <SettingsContext.Provider[m
[36m@@@ -25,6 -25,6 +28,8 @@@[m
          setStreamingQuality,[m
          downloadQuality,[m
          setDownloadQuality,[m
[32m++        theme,[m
[32m++        setTheme,[m
        }}[m
      >[m
        {children}[m
[1mdiff --cc mobile/hooks/useCustomAlert.ts[m
[1mindex 736bdc3,736bdc3..d53ab17[m
[1m--- a/mobile/hooks/useCustomAlert.ts[m
[1m+++ b/mobile/hooks/useCustomAlert.ts[m
[36m@@@ -1,5 -1,5 +1,5 @@@[m
[31m--import { useAlert } from '../context/AlertContext';[m
[31m--import { AlertButton } from '../types/alert';[m
[32m++import { useAlert } from "../context/AlertContext";[m
[32m++import { AlertButton } from "../types/alert";[m
  [m
  export const useCustomAlert = () => {[m
    const { showAlert, hideAlert } = useAlert();[m
[36m@@@ -8,7 -8,7 +8,7 @@@[m
      title: string,[m
      message?: string,[m
      buttons?: AlertButton[],[m
[31m--    type?: 'info' | 'success' | 'warning' | 'error'[m
[32m++    type?: "info" | "success" | "warning" | "error"[m
    ) => {[m
      showAlert({[m
        title,[m
[36m@@@ -27,16 -27,16 +27,16 @@@[m
      showAlert({[m
        title,[m
        message,[m
[31m--      type: 'warning',[m
[32m++      type: "warning",[m
        buttons: [[m
          {[m
[31m--          text: 'H·ªßy',[m
[31m--          style: 'cancel',[m
[32m++          text: "H·ªßy",[m
[32m++          style: "cancel",[m
            onPress: onCancel,[m
          },[m
          {[m
[31m--          text: 'X√°c nh·∫≠n',[m
[31m--          style: 'destructive',[m
[32m++          text: "X√°c nh·∫≠n",[m
[32m++          style: "destructive",[m
            onPress: onConfirm,[m
          },[m
        ],[m
[36m@@@ -47,10 -47,10 +47,10 @@@[m
      showAlert({[m
        title,[m
        message,[m
[31m--      type: 'success',[m
[32m++      type: "success",[m
        buttons: [[m
          {[m
[31m--          text: 'OK',[m
[32m++          text: "OK",[m
            onPress,[m
          },[m
        ],[m
[36m@@@ -61,10 -61,10 +61,10 @@@[m
      showAlert({[m
        title,[m
        message,[m
[31m--      type: 'error',[m
[32m++      type: "error",[m
        buttons: [[m
          {[m
[31m--          text: 'ƒê√≥ng',[m
[32m++          text: "ƒê√≥ng",[m
            onPress,[m
          },[m
        ],[m
[36m@@@ -75,10 -75,10 +75,10 @@@[m
      showAlert({[m
        title,[m
        message,[m
[31m--      type: 'warning',[m
[32m++      type: "warning",[m
        buttons: [[m
          {[m
[31m--          text: 'Hi·ªÉu r·ªìi',[m
[32m++          text: "Hi·ªÉu r·ªìi",[m
            onPress,[m
          },[m
        ],[m
[36m@@@ -93,4 -93,4 +93,4 @@@[m
      warning,[m
      hideAlert,[m
    };[m
[31m--};[m
[32m++};[m
[1mdiff --cc mobile/hooks/useNavigate.ts[m
[1mindex 0d6d435,0d6d435..028efe0[m
[1m--- a/mobile/hooks/useNavigate.ts[m
[1m+++ b/mobile/hooks/useNavigate.ts[m
[36m@@@ -1,34 -1,34 +1,33 @@@[m
[31m--import AllSongsScreen from "@/app/(screens)/AllSongsScreen";[m
[31m--import QueueScreen from "@/app/(screens)/QueueScreen";[m
[31m--import SongScreen from "@/app/(screens)/SongScreen";[m
  import { useRouter } from "expo-router";[m
  [m
  const routeMap: Record<any, any> = {[m
[31m--  Auth: '(auth)',[m
[31m--  SignUp: '(auth)/SignUpScreen',[m
[31m--  Login: '(auth)/LoginScreen',[m
[31m--  VerifyEmail: '(auth)/VerifyEmailScreen',[m
[31m--[m
[31m--  Main: '(tabs)/HomeScreen',[m
[31m--  Profile: '(tabs)/ProfileScreen',[m
[31m--  Search: '(tabs)/SearchScreen',[m
[31m--  Library: '(tabs)/YourLibraryScreen',[m
[31m--[m
[31m--  EditProfile: '(screens)/EditProfileScreen',[m
[31m--  DownloadQuality: '(screens)/DownloadQualityScreen',[m
[31m--  StreamingQuality: '(screens)/StreamingQualityScreen',[m
[31m--  MusicLanguage: '(screens)/MusicLanguageScreen',[m
[31m--[m
[31m--  ArtistScreen: '(screens)/ArtistScreen',[m
[31m--  ArtistsFollowingScreen: '(screens)/ArtistsFollowingScreen',[m
[31m--  PlaylistsScreen: '(screens)/PlaylistsScreen',[m
[31m--  DownloadsScreen: '(screens)/DownloadsScreen',[m
[31m--  LikedSongsScreen: '(screens)/LikedSongsScreen',[m
[31m--  YourLibraryScreen: '(screens)/YourLibraryScreen',[m
[31m--  AllSongsScreen: '(screens)/AllSongsScreen',[m
[31m--  QueueScreen: '(screens)/QueueScreen',[m
[31m--  SongInfoScreen: '(screens)/SongInfoScreen',[m
[31m--  SongScreen: '(screens)/SongScreen',[m
[32m++  Auth: "(auth)",[m
[32m++  SignUp: "(auth)/SignUpScreen",[m
[32m++  Login: "(auth)/LoginScreen",[m
[32m++  VerifyEmail: "(auth)/VerifyEmailScreen",[m
[32m++  ForgotPassword: "(auth)/ForgotPasswordScreen",[m
[32m++  ResetPassword: "(auth)/ResetPasswordScreen",[m
[32m++[m
[32m++  Main: "(tabs)/HomeScreen",[m
[32m++  Profile: "(tabs)/ProfileScreen",[m
[32m++  Search: "(tabs)/SearchScreen",[m
[32m++  Library: "(tabs)/YourLibraryScreen",[m
[32m++[m
[32m++  EditProfile: "(screens)/EditProfileScreen",[m
[32m++  DownloadQuality: "(screens)/DownloadQualityScreen",[m
[32m++  StreamingQuality: "(screens)/StreamingQualityScreen",[m
[32m++  MusicLanguage: "(screens)/MusicLanguageScreen",[m
[32m++[m
[32m++  ArtistScreen: "(screens)/ArtistScreen",[m
[32m++  ArtistsFollowingScreen: "(screens)/ArtistsFollowingScreen",[m
[32m++  PlaylistsScreen: "(screens)/PlaylistsScreen",[m
[32m++  DownloadsScreen: "(screens)/DownloadsScreen",[m
[32m++  LikedSongsScreen: "(screens)/LikedSongsScreen",[m
[32m++  YourLibraryScreen: "(screens)/YourLibraryScreen",[m
[32m++  AllSongsScreen: "(screens)/AllSongsScreen",[m
[32m++  QueueScreen: "(screens)/QueueScreen",[m
[32m++  SongInfoScreen: "(screens)/SongInfoScreen",[m
[32m++  SongScreen: "(screens)/SongScreen",[m
  };[m
  [m
  export function useNavigate() {[m
[1mdiff --cc mobile/tailwind.config.js[m
[1mindex a5ba014,a5ba014..868025c[m
[1m--- a/mobile/tailwind.config.js[m
[1m+++ b/mobile/tailwind.config.js[m
[36m@@@ -1,11 -1,11 +1,11 @@@[m
  /** @type {import('tailwindcss').Config} */[m
  module.exports = {[m
[31m--  // NOTE: Update this to include the paths to all files that contain Nativewind classes.[m
[31m--  content: ["./app/**/*.{js,jsx,ts,tsx}", "./components/**/*.{js,jsx,ts,tsx}"],[m
[31m--  presets: [require("nativewind/preset")],[m
[31m--  darkMode: "media",[m
[31m--  theme: {[m
[31m--    extend: {},[m
[31m--  },[m
[31m--  plugins: [],[m
[32m++    // NOTE: Update this to include the paths to all files that contain Nativewind classes.[m
[32m++    content: ["./app/**/*.{js,jsx,ts,tsx}", "./components/**/*.{js,jsx,ts,tsx}"],[m
[32m++    presets: [require("nativewind/preset")],[m
[32m++    darkMode: "media",[m
[32m++    theme: {[m
[32m++        extend: {},[m
[32m++    },[m
[32m++    plugins: [],[m
  }[m
[1mdiff --cc server/src/controllers/commentController.js[m
[1mindex 2d0697c,2d0697c..8e10001[m
[1m--- a/server/src/controllers/commentController.js[m
[1m+++ b/server/src/controllers/commentController.js[m
[36m@@@ -1,74 -1,74 +1,98 @@@[m
[31m--const { Comment } = require('../models');[m
[32m++const { Post, User } = require('../models');[m
  [m
[31m--exports.getAllComment = async (req, res) => {[m
[31m--  try {[m
[31m--    const rows = await Comment.findAll();[m
[31m--    res.json(rows);[m
[31m--  } catch (err) {[m
[31m--    res.status(500).json({ error: err.message });[m
[31m--  }[m
[32m++exports.getAllComment = async(req, res) => {[m
[32m++    try {[m
[32m++        const rows = await Comment.findAll();[m
[32m++        res.json(rows);[m
[32m++    } catch (err) {[m
[32m++        res.status(500).json({ error: err.message });[m
[32m++    }[m
  };[m
  [m
[31m--exports.getCommentById = async (req, res) => {[m
[31m--  try {[m
[31m--    const row = await Comment.findByPk(req.params.id);[m
[31m--    if (!row) return res.status(404).json({ error: 'Comment not found' });[m
[31m--    res.json(row);[m
[31m--  } catch (err) {[m
[31m--    res.status(500).json({ error: err.message });[m
[31m--  }[m
[31m--};[m
[32m++// H√ÄM M·ªöI: L·∫•y t·∫•t c·∫£ b√¨nh lu·∫≠n cho m·ªôt Post c·ª• th·ªÉ[m
[32m++exports.getCommentsByPostId = async(req, res) => {¬†[m
[32m++    try {¬†¬†[m
[32m++        const { postId } = req.params;¬†¬†[m
[32m++        if (!postId) {[m
[32m++            return res.status(400).json({ error: 'Post ID is required' });[m
[32m++        }[m
  [m
[31m--exports.createComment = async (req, res) => {[m
[31m--  try {[m
[31m--    const payload = { ...req.body };[m
[32m++        ¬†¬†[m
[32m++        const rows = await Comment.findAll({[m
[32m++            where: { postId: postId },[m
[32m++            include: [{[m
[32m++                model: User,[m
[32m++                as: 'User', // PH·∫¢I KH·ªöP V·ªöI ALIAS TRONG ASSOCIATIONS C·ª¶A B·∫†N[m
[32m++                attributes: ['id', 'username', 'avatarUrl'] // Ch·ªâ l·∫•y c√°c tr∆∞·ªùng c·∫ßn thi·∫øt[m
[32m++            }],[m
[32m++            order: [[m
[32m++                ['commentedAt', 'ASC'][m
[32m++            ][m
[32m++        });[m
  [m
[31m--    console.log(req.body)[m
[32m++        ¬†¬†[m
[32m++        res.json(rows);¬†[m
[32m++    } catch (err) {¬†¬† res.status(500).json({ error: err.message });¬† }[m
[32m++};[m
  [m
[31m--    console.log(payload)[m
[31m--    if (!payload) {[m
[31m--      return res.status(400).json({ error: 'Payload not specified' });[m
[32m++exports.getCommentById = async(req, res) => {[m
[32m++    try {[m
[32m++        const row = await Comment.findByPk(req.params.id);[m
[32m++        if (!row) return res.status(404).json({ error: 'Comment not found' });[m
[32m++        res.json(row);[m
[32m++    } catch (err) {[m
[32m++        res.status(500).json({ error: err.message });[m
      }[m
[32m++};[m
  [m
[31m--    if (!payload.userId) {[m
[31m--      payload.userId = req.user.id; // G√°n userId t·ª´ token ƒë√£ x√°c th·ª±c[m
[31m--    }[m
[32m++exports.createComment = async(req, res) => {[m
[32m++    try {[m
[32m++        const payload = {...req.body };[m
  [m
[31m--    if (!payload.postId) {[m
[31m--      return res.status(400).json({ error: 'Post not identified' });[m
[31m--    }[m
[32m++        console.log(req.body)[m
  [m
[31m--    if (!payload.content && !payload.fileUrl) {[m
[31m--      return res.status(400).json({ error: 'Content and file not specified' });[m
[31m--    }[m
[32m++        console.log(payload)[m
[32m++        if (!payload) {[m
[32m++            return res.status(400).json({ error: 'Payload not specified' });[m
[32m++        }[m
  [m
[31m--    const row = await Comment.create(payload);[m
[31m--    res.status(201).json(row);[m
[32m++        if (!payload.userId) {[m
[32m++            payload.userId = req.user.id; // G√°n userId t·ª´ token ƒë√£ x√°c th·ª±c[m
[32m++        }[m
  [m
[31m--  } catch (err) {[m
[31m--    res.status(500).json({ error: err.message });[m
[31m--  }[m
[31m--};[m
[32m++        if (!payload.postId) {[m
[32m++            return res.status(400).json({ error: 'Post not identified' });[m
[32m++        }[m
  [m
[31m--exports.updateComment = async (req, res) => {[m
[31m--  try {[m
[31m--    const [updated] = await Comment.update(req.body, { where: { id: req.params.id } });[m
[31m--    if (!updated) return res.status(404).json({ error: 'Comment not found' });[m
[31m--    const row = await Comment.findByPk(req.params.id);[m
[31m--    res.json(row);[m
[31m--  } catch (err) {[m
[31m--    res.status(500).json({ error: err.message });[m
[31m--  }[m
[31m--};[m
[32m++        if (!payload.content && !payload.fileUrl) {[m
[32m++            return res.status(400).json({ error: 'Content and file not specified' });[m
[32m++        }[m
  [m
[31m--exports.deleteComment = async (req, res) => {[m
[31m--  try {[m
[31m--    const deleted = await Comment.destroy({ where: { id: req.params.id } });[m
[31m--    if (!deleted) return res.status(404).json({ error: 'Comment not found' });[m
[31m--    res.json({ message: 'Comment deleted' });[m
[31m--  } catch (err) {[m
[31m--    res.status(500).json({ error: err.message });[m
[31m--  }[m
[32m++        const row = await Comment.create(payload);[m
[32m++        res.status(201).json(row);[m
[32m++[m
[32m++    } catch (err) {[m
[32m++        res.status(500).json({ error: err.message });[m
[32m++    }[m
  };[m
  [m
[32m++exports.updateComment = async(req, res) => {[m
[32m++    try {[m
[32m++        const [updated] = await Comment.update(req.body, { where: { id: req.params.id } });[m
[32m++        if (!updated) return res.status(404).json({ error: 'Comment not found' });[m
[32m++        const row = await Comment.findByPk(req.params.id);[m
[32m++        res.json(row);[m
[32m++    } catch (err) {[m
[32m++        res.status(500).json({ error: err.message });[m
[32m++    }[m
[32m++};[m
  [m
[32m++exports.deleteComment = async(req, res) => {[m
[32m++    try {[m
[32m++        const deleted = await Comment.destroy({ where: { id: req.params.id } });[m
[32m++        if (!deleted) return res.status(404).json({ error: 'Comment not found' });[m
[32m++        res.json({ message: 'Comment deleted' });[m
[32m++    } catch (err) {[m
[32m++        res.status(500).json({ error: err.message });[m
[32m++    }[m
[32m++};[m
[1mdiff --cc server/src/controllers/postController.js[m
[1mindex 9f68fec,9f68fec..9e90cae[m
[1m--- a/server/src/controllers/postController.js[m
[1m+++ b/server/src/controllers/postController.js[m
[36m@@@ -1,89 -1,89 +1,134 @@@[m
[31m--const { Post } = require('../models');[m
[32m++// const { Post } = require('../models');[m
  [m
[31m--exports.getAllPost = async (req, res) => {[m
[31m--  try {[m
[31m--    const posts = await Post.findAll();[m
[31m--    res.json(posts);[m
[31m--  } catch (error) {[m
[31m--    res.json({ error: error.message });[m
[31m--  }[m
[32m++const { Post, User } = require('../models');[m
[32m++[m
[32m++// exports.getAllPost = async (req, res) => {[m
[32m++//   try {[m
[32m++//     const posts = await Post.findAll();[m
[32m++//     res.json(posts);[m
[32m++//   } catch (error) {[m
[32m++//     res.json({ error: error.message });[m
[32m++//   }[m
[32m++// };[m
[32m++[m
[32m++exports.getAllPost = async(req, res) => {¬†[m
[32m++    try {¬†¬†[m
[32m++        const posts = await Post.findAll({[m
[32m++            include: [{[m
[32m++                model: User,[m
[32m++                as: 'User',[m
[32m++                attributes: ['id', 'username', 'avatarUrl', 'fullName'][m
[32m++            }],[m
[32m++            order: [[m
[32m++                ['uploadedAt', 'DESC'][m
[32m++            ][m
[32m++        });¬†¬†[m
[32m++        res.json(posts);¬†[m
[32m++    } catch (error) {¬†¬† res.json({ error: error.message });¬† }[m
  };[m
  [m
[31m--exports.getPostById = async (req, res) => {[m
[31m--  try {[m
[31m--    const post = await Post.findByPk(req.params.id);[m
[31m--    if (!post) {[m
[31m--      return res.status(404).json({ error: 'Post not found' });[m
[32m++exports.getPostById = async(req, res) => {[m
[32m++    try {[m
[32m++        const post = await Post.findByPk(req.params.id);[m
[32m++        if (!post) {[m
[32m++            return res.status(404).json({ error: 'Post not found' });[m
[32m++        }[m
[32m++        res.json(post);[m
[32m++    } catch (error) {[m
[32m++        res.json({ error: error.message });[m
      }[m
[31m--    res.json(post);[m
[31m--  } catch (error) {[m
[31m--    res.json({ error: error.message });[m
[31m--  }[m
  };[m
  [m
[31m--exports.getPostsByMe = async (req, res) => {[m
[31m--  try {[m
[31m--    const posts = await Post.findAll({ where: { userId: req.user.id } });[m
[31m--    res.json(posts);[m
[31m--  } catch (error) {[m
[31m--    res.status(500).json({ error: error.message });[m
[31m--  }[m
[32m++exports.getPostsByMe = async(req, res) => {[m
[32m++    try {[m
[32m++        const posts = await Post.findAll({ where: { userId: req.user.id } });[m
[32m++        res.json(posts);[m
[32m++    } catch (error) {[m
[32m++        res.status(500).json({ error: error.message });[m
[32m++    }[m
  };[m
  [m
[31m--exports.getPostsByUserId = async (req, res) => {[m
[31m--  try {[m
[31m--    const { userId } = req.params;[m
[31m--    if (!userId) {[m
[31m--      return res.status(400).json({ error: 'User ID is required' });[m
[32m++exports.getPostsByUserId = async(req, res) => {[m
[32m++    try {[m
[32m++        const { userId } = req.params;[m
[32m++        if (!userId) {[m
[32m++            return res.status(400).json({ error: 'User ID is required' });[m
[32m++        }[m
[32m++        const posts = await Post.findAll({ where: { userId } });[m
[32m++        res.json(posts);[m
[32m++    } catch (error) {[m
[32m++        res.status(500).json({ error: error.message });[m
      }[m
[31m--    const posts = await Post.findAll({ where: { userId } });[m
[31m--    res.json(posts);[m
[31m--  } catch (error) {[m
[31m--    res.status(500).json({ error: error.message });[m
[31m--  }[m
  };[m
  [m
[31m--exports.createPost = async (req, res) => {[m
[31m--  try {[m
[31m--    const payload = { ...req.body };[m
[31m--    console.log('payload', payload);[m
[32m++exports.createPost = async(req, res) => {[m
[32m++    try {[m
[32m++        // 1. Ki·ªÉm tra v√† G√°n userId (Gi·ªØ nguy√™n)[m
[32m++        if (!req.user || !req.user.id) {[m
[32m++            // D√≤ng n√†y ch·ªâ ch·∫°y n·∫øu conditionalAuthForPosts b·ªã l·ªói[m
[32m++            return res.status(401).json({ error: 'User not authenticated' });[m
[32m++        }[m
[32m++        const userId = req.user.id;[m
[32m++[m
[32m++        // 2. Chu·∫©n b·ªã Payload v√† G√°n gi√° tr·ªã m·∫∑c ƒë·ªãnh[m
[32m++        const { content, fileUrl } = req.body;[m
[32m++[m
[32m++        // ƒê·∫£m b·∫£o c√°c tr∆∞·ªùng NOT NULL ƒë∆∞·ª£c ƒëi·ªÅn ƒë·∫ßy ƒë·ªß[m
[32m++        const post = await Post.create({[m
[32m++            userId: userId,[m
[32m++            content: content,[m
[32m++            fileUrl: fileUrl || '', // ƒê·∫£m b·∫£o tr∆∞·ªùng n√†y kh√¥ng NULL[m
  [m
[31m--    payload.userId = req.user.id; // G√°n userId t·ª´ token ƒë√£ x√°c th·ª±c[m
[32m++            // C√ÅC TR∆Ø·ªúNG C·∫¶N GI√Å TR·ªä M·∫∂C ƒê·ªäNH[m
[32m++            heartCount: 0, // PH·∫¢I G√ÅN GI√Å TR·ªä M·∫∂C ƒê·ªäNH[m
[32m++            shareCount: 0, // PH·∫¢I G√ÅN GI√Å TR·ªä M·∫∂C ƒê·ªäNH[m
[32m++            uploadedAt: new Date(), // PH·∫¢I G√ÅN GI√Å TR·ªä M·∫∂C ƒê·ªäNH[m
[32m++        });[m
  [m
[31m--    const post = await Post.create(payload);[m
[31m--    return res.json([m
[31m--      {[m
[31m--        message: 'Upload successful',[m
[31m--        data: post[m
[31m--      },[m
[31m--    );[m
[31m--  } catch (error) {[m
[31m--    res.status(400).json({ error: error.message });[m
[31m--  }[m
[32m++        // 3. L·∫•y l·∫°i Post k√®m th√¥ng tin User ƒë·ªÉ tr·∫£ v·ªÅ cho Frontend[m
[32m++        const postWithUser = await Post.findByPk(post.id, {[m
[32m++            include: [{[m
[32m++                model: User,[m
[32m++                as: 'User',[m
[32m++                attributes: ['id', 'username', 'avatarUrl', 'fullName'][m
[32m++            }][m
[32m++        });[m
[32m++[m
[32m++        // Tr·∫£ v·ªÅ ƒë·ªëi t∆∞·ª£ng Post ƒë√£ t·∫°o[m
[32m++        return res.status(201).json(postWithUser);[m
[32m++[m
[32m++    } catch (error) {[m
[32m++        console.error("L·ªói khi t·∫°o b√†i ƒëƒÉng (Controller):", error.message);[m
[32m++        // Tr·∫£ v·ªÅ 400 Bad Request n·∫øu l·ªói do thi·∫øu tr∆∞·ªùng DB[m
[32m++        res.status(400).json({[m
[32m++            error: "Kh√¥ng th·ªÉ t·∫°o b√†i ƒëƒÉng do thi·∫øu d·ªØ li·ªáu b·∫Øt bu·ªôc ho·∫∑c l·ªói DB.",[m
[32m++            details: error.message // HI·ªÇN TH·ªä L·ªñI SEQUELIZE ƒê·ªÇ DEBUG[m
[32m++        });[m
[32m++    }[m
  };[m
  [m
[31m--exports.updatePost = async (req, res) => {[m
[31m--  try {[m
[31m--    const [updated] = await Post.update(req.body, { where: { id: req.params.id } });[m
[31m--    if (!updated) {[m
[31m--      return res.status(404).json({ error: 'Post not found' });[m
[32m++exports.updatePost = async(req, res) => {[m
[32m++    try {[m
[32m++        const [updated] = await Post.update(req.body, { where: { id: req.params.id } });[m
[32m++        if (!updated) {[m
[32m++            return res.status(404).json({ error: 'Post not found' });[m
[32m++        }[m
[32m++        const post = await Post.findByPk(req.params.id);[m
[32m++        res.json(post);[m
[32m++    } catch (error) {[m
[32m++        res.status(400).json({ error: error.message });[m
      }[m
[31m--    const post = await Post.findByPk(req.params.id);[m
[31m--    res.json(post);[m
[31m--  } catch (error) {[m
[31m--    res.status(400).json({ error: error.message });[m
[31m--  }[m
  };[m
  [m
  // Delete a post by ID (only by the owner or admin)[m
[31m--exports.deletePost = async (req, res) => {[m
[31m--  try {[m
[31m--    const deleted = await Post.destroy({ where: { id: req.params.id } });[m
[31m--    if (!deleted) {[m
[31m--      return res.status(404).json({ error: 'Post not found' });[m
[32m++exports.deletePost = async(req, res) => {[m
[32m++    try {[m
[32m++        const deleted = await Post.destroy({ where: { id: req.params.id } });[m
[32m++        if (!deleted) {[m
[32m++            return res.status(404).json({ error: 'Post not found' });[m
[32m++        }[m
[32m++        res.json({ message: 'Post deleted successfully' });[m
[32m++    } catch (error) {[m
[32m++        res.status(500).json({ error: error.message });[m
      }[m
[31m--    res.json({ message: 'Post deleted successfully' });[m
[31m--  } catch (error) {[m
[31m--    res.status(500).json({ error: error.message });[m
[31m--  }[m
[31m--};[m
[32m++};[m
[1mdiff --cc server/src/middlewares/authentication.js[m
[1mindex 7bf7ad0,7bf7ad0..7d8d252[m
[1m--- a/server/src/middlewares/authentication.js[m
[1m+++ b/server/src/middlewares/authentication.js[m
[36m@@@ -1,61 -1,61 +1,84 @@@[m
[32m++// ./middlewares/authentication.js (B·∫¢N DEBUG M·ªöI NH·∫§T)[m
[32m++[m
  const jwt = require('jsonwebtoken');[m
  const { User } = require('../models');[m
[31m--const { json } = require('sequelize');[m
  require('dotenv').config();[m
  [m
[31m--exports.authenticateToken = async (req, res, next) => {[m
[31m--  try {[m
[31m--    // L·∫•y token t·ª´ cookie ho·∫∑c header[m
[31m--    const token = req.cookies['accessToken'] || req.headers['authorization']?.split(' ')[1];[m
[32m++exports.authenticateToken = async(req, res, next) => {[m
[32m++    console.log("--- B·∫ÆT ƒê·∫¶U AUTHENTICATE ---");[m
[32m++    console.log("Raw Headers:", req.headers); // LOG RAW HEADERS ƒë·ªÉ ki·ªÉm tra Authorization[m
  [m
[31m--    console.log("Token from cookie: ", req.cookies['accessToken']);[m
[31m--    console.log("Token from header 1: ", req.headers['Authorization']?.split(' ')[1]);[m
[31m--    console.log("Token from header 2: ", req.headers['authorization']?.split(' ')[1]);[m
[31m--    if (!token) {[m
[31m--      return res.status(401).json({ error: 'Access token required' });[m
[31m--    }[m
[32m++    try {[m
[32m++        let token;[m
  [m
[31m--    // Verify token[m
[31m--    const decoded = jwt.verify(token, process.env.ACCESS_TOKEN_SECRET);[m
[32m++        // 1. L·∫•y token t·ª´ Cookie (accessToken)[m
[32m++        token = req.cookies['accessToken'];[m
  [m
[31m--    // Check if user exists and token matches[m
[31m--    const user = await User.findByPk(decoded.id);[m
[31m--    if (!user) {[m
[31m--      return res.status(401).json({ error: 'User not found' });[m
[31m--    }[m
[32m++        // 2. N·∫øu kh√¥ng c√≥ trong cookie, l·∫•y t·ª´ Header (Ki·ªÉm tra Case-Insensitive)[m
[32m++        if (!token) {[m
[32m++            // Express th∆∞·ªùng chuy·ªÉn header v·ªÅ lowercase (authorization)[m
[32m++            let authHeader = req.headers['authorization'];[m
  [m
[31m--    // Check if token matches the one in database[m
[31m--    if (user.accessToken !== token) {[m
[31m--      return res.status(401).json({ error: 'Invalid token' });[m
[31m--    }[m
[32m++            // N·∫øu kh√¥ng c√≥ lowercase, th·ª≠ check v·ªõi uppercase (Authorization)[m
[32m++            if (!authHeader) {[m
[32m++                authHeader = req.headers['Authorization'];[m
[32m++            }[m
[32m++[m
[32m++            if (authHeader && authHeader.startsWith('Bearer ')) {[m
[32m++                token = authHeader.split(' ')[1];[m
[32m++            }[m
[32m++        }[m
[32m++[m
[32m++        console.log("Token ƒë∆∞·ª£c t√¨m th·∫•y:", token ? "C√ì" : "KH√îNG");[m
[32m++[m
[32m++        if (!token) {[m
[32m++            console.log("L·ªñI: Access token required (Token KH√îNG ƒë∆∞·ª£c t√¨m th·∫•y)");[m
[32m++            return res.status(401).json({ error: 'Access token required' });[m
[32m++        }[m
  [m
[31m--    // Add user info to request[m
[31m--    req.user = decoded;[m
[31m--    req.currentUser = user;[m
[31m--    next();[m
[31m--  } catch (err) {[m
[31m--    if (err.name === 'TokenExpiredError') return res.status(401).json({ error: 'Token expired' });[m
[31m--    if (err.name === 'JsonWebTokenError') return res.status(401).json({ error: 'Invalid token' });[m
[31m--    return res.status(500).json({ error: 'Internal server error' });[m
[31m--  }[m
[32m++        // Verify token[m
[32m++        const decoded = jwt.verify(token, process.env.ACCESS_TOKEN_SECRET);[m
[32m++[m
[32m++        // Check if user exists[m
[32m++        const user = await User.findByPk(decoded.id);[m
[32m++        if (!user) {[m
[32m++            console.log("L·ªñI: User not found (ID:", decoded.id, ")");[m
[32m++            return res.status(401).json({ error: 'User not found' });[m
[32m++        }[m
[32m++[m
[32m++        // Th√™m th√¥ng tin User v√†o request[m
[32m++        req.user = decoded;[m
[32m++        req.currentUser = user;[m
[32m++        console.log("X√°c th·ª±c th√†nh c√¥ng cho User ID:", decoded.id);[m
[32m++        next();[m
[32m++    } catch (err) {[m
[32m++        if (err.name === 'TokenExpiredError') {[m
[32m++            console.log("L·ªñI AUTH: Token expired");[m
[32m++            return res.status(401).json({ error: 'Token expired' });[m
[32m++        }[m
[32m++        if (err.name === 'JsonWebTokenError') {[m
[32m++            console.log("L·ªñI AUTH: Invalid token");[m
[32m++            return res.status(401).json({ error: 'Invalid token' });[m
[32m++        }[m
[32m++        console.error('L·ªñI AUTH KH√îNG X√ÅC ƒê·ªäNH:', err.message);[m
[32m++        return res.status(500).json({ error: 'Internal server error: ' + err.message });[m
[32m++    }[m
  };[m
  [m
  exports.authorizeRole = (req, res, next) => {[m
[31m--  try {[m
[31m--    const user = req.currentUser;[m
[31m--    console.log(user);[m
[31m--    if (!user) {[m
[31m--      return res.status(403).json({ error: 'Forbidden' });[m
[31m--    }[m
[32m++    try {[m
[32m++        const user = req.currentUser;[m
[32m++        if (!user) {[m
[32m++            return res.status(403).json({ error: 'Forbidden' });[m
[32m++        }[m
  [m
[31m--    // Check if user has the required role = admin[m
[31m--    if (user.roleId !== 1) {[m
[31m--      return res.status(403).json({ error: 'Unauthorized' });[m
[31m--    }[m
[32m++        if (user.roleId !== 1) {[m
[32m++            return res.status(403).json({ error: 'Unauthorized' });[m
[32m++        }[m
  [m
[31m--    next();[m
[31m--  } catch (error) {[m
[31m--    console.error('Authorization error:', error);[m
[31m--    res.status(500).json({ error: 'Internal server error' });[m
[31m--  }[m
[32m++        next();[m
[32m++    } catch (error) {[m
[32m++        console.error('Authorization error:', error);[m
[32m++        res.status(500).json({ error: 'Internal server error' });[m
[32m++    }[m
  }[m
[1mdiff --cc server/src/models/comment.js[m
[1mindex 30a443a,30a443a..4d84215[m
[1m--- a/server/src/models/comment.js[m
[1m+++ b/server/src/models/comment.js[m
[36m@@@ -4,50 -4,50 +4,48 @@@[m [mconst sequelize = require('../configs/d[m
  [m
  [m
  const Comment = sequelize.define([m
[31m--  'Comment',[m
[31m--  {[m
[31m--    id: {[m
[31m--      type: DataTypes.INTEGER,[m
[31m--      autoIncrement: true,[m
[31m--      allowNull: false,[m
[31m--      unique: true,[m
[31m--      primaryKey: true[m
[31m--    },[m
[31m--    userId: {[m
[31m--      type: DataTypes.INTEGER,[m
[31m--      allowNull: false,[m
[31m--      field: 'user_id'[m
[31m--    },[m
[31m--    postId: {[m
[31m--      type: DataTypes.INTEGER,[m
[31m--      allowNull: true,[m
[31m--      field: 'post_id'[m
[31m--    },[m
[31m--    content: {[m
[31m--      type: DataTypes.TEXT,[m
[31m--      allowNull: false[m
[31m--    },[m
[31m--    parentId: { // id comment[m
[31m--      type: DataTypes.INTEGER,[m
[31m--      allowNull: true,[m
[31m--      field: 'parent_id'[m
[31m--    },[m
[31m--    fileUrl: {[m
[31m--      type: DataTypes.STRING,[m
[31m--      allowNull: true,[m
[31m--      field: 'file_url'[m
[31m--    },[m
[31m--    commentedAt: {[m
[31m--      type: DataTypes.DATE,[m
[31m--      allowNull: false,[m
[31m--      field: 'commented_at',[m
[31m--      defaultValue: DataTypes.NOW[m
[32m++    'Comment', {[m
[32m++        id: {[m
[32m++            type: DataTypes.INTEGER,[m
[32m++            autoIncrement: true,[m
[32m++            allowNull: false,[m
[32m++            unique: true,[m
[32m++            primaryKey: true[m
[32m++        },[m
[32m++        userId: {[m
[32m++            type: DataTypes.INTEGER,[m
[32m++            allowNull: false,[m
[32m++            field: 'user_id'[m
[32m++        },[m
[32m++        postId: {[m
[32m++            type: DataTypes.INTEGER,[m
[32m++            allowNull: true,[m
[32m++            field: 'post_id'[m
[32m++        },[m
[32m++        content: {[m
[32m++            type: DataTypes.TEXT,[m
[32m++            allowNull: false[m
[32m++        },[m
[32m++        parentId: { // id comment[m
[32m++            type: DataTypes.INTEGER,[m
[32m++            allowNull: true,[m
[32m++            field: 'parent_id'[m
[32m++        },[m
[32m++        fileUrl: {[m
[32m++            type: DataTypes.STRING,[m
[32m++            allowNull: true,[m
[32m++            field: 'file_url'[m
[32m++        },[m
[32m++        commentedAt: {[m
[32m++            type: DataTypes.DATE,[m
[32m++            allowNull: false,[m
[32m++            field: 'commented_at',[m
[32m++            defaultValue: DataTypes.NOW[m
[32m++        }[m
[32m++    }, {[m
[32m++        tableName: 'comments',[m
[32m++        timestamps: true[m
      }[m
[31m--  },[m
[31m--  {[m
[31m--    tableName: 'comments',[m
[31m--    timestamps: true[m
[31m--  }[m
  )[m
  [m
[31m--module.exports = Comment[m
[32m++module.exports = Comment[m
[1mdiff --cc server/src/models/index.js[m
[1mindex fb5a178,fb5a178..f8dedfc[m
[1m--- a/server/src/models/index.js[m
[1m+++ b/server/src/models/index.js[m
[36m@@@ -25,16 -25,16 +25,16 @@@[m [mconst AlbumSong = require('./album_song[m
  // ================= Associations ================= //[m
  // // Album ‚Üî Song (N-N) th√¥ng qua AlbumSong[m
  Album.belongsToMany(Song, {[m
[31m--  through: AlbumSong,[m
[31m--  foreignKey: 'albumId',[m
[31m--  otherKey: 'songId',[m
[31m--  as: 'songs'[m
[32m++    through: AlbumSong,[m
[32m++    foreignKey: 'albumId',[m
[32m++    otherKey: 'songId',[m
[32m++    as: 'songs'[m
  })[m
  Song.belongsToMany(Album, {[m
[31m--  through: AlbumSong,[m
[31m--  foreignKey: 'songId',[m
[31m--  otherKey: 'albumId',[m
[31m--  as: 'albums'[m
[32m++    through: AlbumSong,[m
[32m++    foreignKey: 'songId',[m
[32m++    otherKey: 'albumId',[m
[32m++    as: 'albums'[m
  })[m
  [m
  // User - role[m
[36m@@@ -63,11 -63,11 +63,17 @@@[m [mListeningHistory.belongsTo(User, { fore[m
  [m
  // User - Post[m
  User.hasMany(Post, { foreignKey: 'userId' });[m
[31m--Post.belongsTo(User, { foreignKey: 'userId' });[m
[32m++Post.belongsTo(User, {[m
[32m++    foreignKey: 'userId',[m
[32m++    as: 'User'[m
[32m++});[m
  [m
  // User - Comment[m
  User.hasMany(Comment, { foreignKey: 'userId' });[m
[31m--Comment.belongsTo(User, { foreignKey: 'userId' });[m
[32m++Comment.belongsTo(User, {[m
[32m++    foreignKey: 'userId',[m
[32m++    as: 'User'[m
[32m++});[m
  [m
  // User - Download[m
  User.hasMany(DownloadSong, { foreignKey: 'userId' });[m
[36m@@@ -94,14 -94,14 +100,14 @@@[m [mFavoriteSong.belongsTo(User, { foreignK[m
  [m
  // Song - Playlist[m
  Song.belongsToMany(Playlist, {[m
[31m--  through: PlaylistSong,[m
[31m--  foreignKey: 'songId',[m
[31m--  otherKey: 'playlistId'[m
[32m++    through: PlaylistSong,[m
[32m++    foreignKey: 'songId',[m
[32m++    otherKey: 'playlistId'[m
  });[m
  Playlist.belongsToMany(Song, {[m
[31m--  through: PlaylistSong,[m
[31m--  foreignKey: 'playlistId',[m
[31m--  otherKey: 'songId'[m
[32m++    through: PlaylistSong,[m
[32m++    foreignKey: 'playlistId',[m
[32m++    otherKey: 'songId'[m
  });[m
  [m
  // Song - Album[m
[36m@@@ -114,26 -114,26 +120,26 @@@[m [mRecommendation.belongsTo(Song, { foreig[m
  [m
  // Song - Artist[m
  Song.belongsToMany(Artist, {[m
[31m--  through: 'songs_artists',[m
[31m--  foreignKey: 'songId',[m
[31m--  otherKey: 'artistId'[m
[32m++    through: 'songs_artists',[m
[32m++    foreignKey: 'songId',[m
[32m++    otherKey: 'artistId'[m
  });[m
  Artist.belongsToMany(Song, {[m
[31m--  through: 'songs_artists',[m
[31m--  foreignKey: 'artistId',[m
[31m--  otherKey: 'songId'[m
[32m++    through: 'songs_artists',[m
[32m++    foreignKey: 'artistId',[m
[32m++    otherKey: 'songId'[m
  });[m
  [m
  // Song - Genres[m
  Song.belongsToMany(Genre, {[m
[31m--  through: 'songs_genres',[m
[31m--  foreignKey: 'songId',[m
[31m--  otherKey: 'genreId'[m
[32m++    through: 'songs_genres',[m
[32m++    foreignKey: 'songId',[m
[32m++    otherKey: 'genreId'[m
  });[m
  Genre.belongsToMany(Song, {[m
[31m--  through: 'songs_genres',[m
[31m--  foreignKey: 'genreId',[m
[31m--  otherKey: 'songId'[m
[32m++    through: 'songs_genres',[m
[32m++    foreignKey: 'genreId',[m
[32m++    otherKey: 'songId'[m
  });[m
  [m
  // Song - Favorite Song[m
[36m@@@ -166,25 -166,25 +172,25 @@@[m [mArtist.hasMany(Album, { foreignKey: 'ar[m
  [m
  // ================= Export ================= //[m
  module.exports = {[m
[31m--  sequelize,[m
[31m--  Song,[m
[31m--  Playlist,[m
[31m--  PlaylistSong,[m
[31m--  Artist,[m
[31m--  Album,[m
[31m--  User,[m
[31m--  Comment,[m
[31m--  FavoriteSong,[m
[31m--  Follow,[m
[31m--  Genre,[m
[31m--  ListeningHistory,[m
[31m--  Notification,[m
[31m--  Recommendation,[m
[31m--  Role,[m
[31m--  SearchHistory,[m
[31m--  Post,[m
[31m--  StatDailyPlays,[m
[31m--  SyncStatus,[m
[31m--  DownloadSong,[m
[31m--  AlbumSong[m
[32m++    sequelize,[m
[32m++    Song,[m
[32m++    Playlist,[m
[32m++    PlaylistSong,[m
[32m++    Artist,[m
[32m++    Album,[m
[32m++    User,[m
[32m++    Comment,[m
[32m++    FavoriteSong,[m
[32m++    Follow,[m
[32m++    Genre,[m
[32m++    ListeningHistory,[m
[32m++    Notification,[m
[32m++    Recommendation,[m
[32m++    Role,[m
[32m++    SearchHistory,[m
[32m++    Post,[m
[32m++    StatDailyPlays,[m
[32m++    SyncStatus,[m
[32m++    DownloadSong,[m
[32m++    AlbumSong[m
  }[m
[1mdiff --cc server/src/models/post.js[m
[1mindex 9941314,9941314..918430d[m
[1m--- a/server/src/models/post.js[m
[1m+++ b/server/src/models/post.js[m
[36m@@@ -2,50 -2,50 +2,48 @@@[m [mconst { DataTypes } = require('sequeliz[m
  const sequelize = require('../configs/database');[m
  [m
  const Post = sequelize.define([m
[31m--  'Post',[m
[31m--  {[m
[31m--    id: {[m
[31m--      type: DataTypes.INTEGER,[m
[31m--      allowNull: false,[m
[31m--      primaryKey: true,[m
[31m--      autoIncrement: true[m
[31m--    },[m
[31m--    userId: {[m
[31m--      type: DataTypes.INTEGER,[m
[31m--      allowNull: false,[m
[31m--      field: 'user_id'[m
[31m--    },[m
[31m--    content: {[m
[31m--      type: DataTypes.TEXT,[m
[31m--    },[m
[31m--    fileUrl: {[m
[31m--      type: DataTypes.STRING,[m
[31m--      allowNull: false,[m
[31m--      field: 'file_url'[m
[31m--    },[m
[31m--    heartCount: {[m
[31m--      type: DataTypes.INTEGER,[m
[31m--      allowNull: false,[m
[31m--      defaultValue: 0,[m
[31m--      field: 'heart_count'[m
[31m--    },[m
[31m--    shareCount: {[m
[31m--      type: DataTypes.INTEGER,[m
[31m--      allowNull: false,[m
[31m--      defaultValue: 0,[m
[31m--      field: 'share_count'[m
[31m--    },[m
[31m--    uploadedAt: {[m
[31m--      type: DataTypes.DATE,[m
[31m--      allowNull: false,[m
[31m--      defaultValue: DataTypes.NOW,[m
[31m--      field: 'uploaded_at'[m
[32m++    'Post', {[m
[32m++        id: {[m
[32m++            type: DataTypes.INTEGER,[m
[32m++            allowNull: false,[m
[32m++            primaryKey: true,[m
[32m++            autoIncrement: true[m
[32m++        },[m
[32m++        userId: {[m
[32m++            type: DataTypes.INTEGER,[m
[32m++            allowNull: false,[m
[32m++            field: 'user_id'[m
[32m++        },[m
[32m++        content: {[m
[32m++            type: DataTypes.TEXT,[m
[32m++        },[m
[32m++        fileUrl: {[m
[32m++            type: DataTypes.STRING,[m
[32m++            allowNull: false,[m
[32m++            field: 'file_url'[m
[32m++        },[m
[32m++        heartCount: {[m
[32m++            type: DataTypes.INTEGER,[m
[32m++            allowNull: false,[m
[32m++            defaultValue: 0,[m
[32m++            field: 'heart_count'[m
[32m++        },[m
[32m++        shareCount: {[m
[32m++            type: DataTypes.INTEGER,[m
[32m++            allowNull: false,[m
[32m++            defaultValue: 0,[m
[32m++            field: 'share_count'[m
[32m++        },[m
[32m++        uploadedAt: {[m
[32m++            type: DataTypes.DATE,[m
[32m++            allowNull: false,[m
[32m++            defaultValue: DataTypes.NOW,[m
[32m++            field: 'uploaded_at'[m
[32m++        }[m
[32m++    }, {[m
[32m++        tableName: 'posts',[m
[32m++        timestamps: true[m
      }[m
[31m--  },[m
[31m--  {[m
[31m--    tableName: 'posts',[m
[31m--    timestamps: true[m
[31m--  }[m
  );[m
  [m
  module.exports = Post;[m
[1mdiff --cc server/src/routes/commentsRoute.js[m
[1mindex ee8dad6,ee8dad6..e88abca[m
[1m--- a/server/src/routes/commentsRoute.js[m
[1m+++ b/server/src/routes/commentsRoute.js[m
[36m@@@ -2,12 -2,12 +2,12 @@@[m [mconst express = require('express'[m
  const router = express.Router()[m
  const controller = require('../controllers/commentController')[m
  [m
[32m++router.get('/byPost/:postId', controller.getCommentsByPostId)[m
[32m++[m
  router.get('/', controller.getAllComment)[m
  router.get('/:id', controller.getCommentById)[m
  router.post('/', controller.createComment)[m
  router.put('/update/:id', controller.updateComment)[m
  router.delete('/remove/:id', controller.deleteComment)[m
  [m
[31m--module.exports = router[m
[31m--[m
[31m--[m
[32m++module.exports = router[m
[1mdiff --cc server/src/server.js[m
[1mindex 5142bbb,5142bbb..986da15[m
[1m--- a/server/src/server.js[m
[1m+++ b/server/src/server.js[m
[36m@@@ -19,8 -19,8 +19,8 @@@[m [mapp.set('trust proxy', true[m
  [m
  // Middleware[m
  app.use(cors({[m
[31m--  origin: ['http://localhost:3000'], // frontend[m
[31m--  credentials: true[m
[32m++    origin: ['http://localhost:3000'], // frontend[m
[32m++    credentials: true[m
  }))[m
  [m
  app.use(express.json({ limit: '50mb' }))[m
[36m@@@ -33,58 -33,58 +33,58 @@@[m [mapp.use('/static', express.static(path.[m
  app.use(`${API_PREFIX}/uploads/avatars`, express.static(path.join(__dirname, 'uploads', 'avatars')));[m
  [m
  const setupRoutes = () => {[m
[31m--  // PUBLIC ROUTES[m
[31m--  const publicRoutes = [[m
[31m--    'auth',      // Login/register[m
[31m--    'roles',      // Admin routes[m
[31m--    'users'     // Qu·∫£n l√Ω profile user[m
[31m--  ][m
[31m--[m
[31m--  // PROTECTED ROUTES - B·∫Øt bu·ªôc ph·∫£i ƒëƒÉng nh·∫≠p[m
[31m--  const protectedRoutes = [[m
[31m--    'favorites',     // Y√™u th√≠ch[m
[31m--    'follows',       // Theo d√µi[m
[31m--    'history',       // L·ªãch s·ª≠ nghe nh·∫°c[m
[31m--    'notifications', // Th√¥ng b√°o[m
[31m--    'playlists',     // Playlist c√° nh√¢n[m
[31m--    'posts',         // ƒêƒÉng b√†i[m
[31m--    'comments',       // Comment (c·∫ßn ƒëƒÉng nh·∫≠p m·ªõi comment ƒë∆∞·ª£c)[m
[31m--    'genres',    // Xem th·ªÉ lo·∫°i nh·∫°c[m
[31m--    'artists',   // Xem th√¥ng tin ngh·ªá sƒ©[m
[31m--    'albums',    // Xem album[m
[31m--    'search',     // T√¨m ki·∫øm c√¥ng khai[m
[31m--    'songs',        // Xem b√†i h√°t (public), upload b√†i h√°t (private)[m
[31m--    'recommend',    // G·ª£i √Ω (c√≥ th·ªÉ c√° nh√¢n h√≥a n·∫øu ƒëƒÉng nh·∫≠p)[m
[31m--[m
[31m--    'albumSongs'[m
[31m--  ][m
[31m--[m
[31m--  // Setup public routes[m
[31m--  publicRoutes.forEach(route => {[m
[31m--    app.use(`${API_PREFIX}/${route}`, require(`./routes/${route}Route`))[m
[31m--  })[m
[31m--[m
[31m--  // Setup protected routes v·ªõi authentication b·∫Øt bu·ªôc[m
[31m--  protectedRoutes.forEach(route => {[m
[31m--    app.use(`${API_PREFIX}/${route}`, authenticateToken, require(`./routes/${route}Route`))[m
[31m--  })[m
[32m++    // PUBLIC ROUTES[m
[32m++    const publicRoutes = [[m
[32m++        'auth', // Login/register[m
[32m++        'roles', // Admin routes[m
[32m++        'users' // Qu·∫£n l√Ω profile user[m
[32m++    ][m
[32m++[m
[32m++    // PROTECTED ROUTES - B·∫Øt bu·ªôc ph·∫£i ƒëƒÉng nh·∫≠p[m
[32m++    const protectedRoutes = [[m
[32m++        'favorites', // Y√™u th√≠ch[m
[32m++        'follows', // Theo d√µi[m
[32m++        'history', // L·ªãch s·ª≠ nghe nh·∫°c[m
[32m++        'notifications', // Th√¥ng b√°o[m
[32m++        'playlists', // Playlist c√° nh√¢n[m
[32m++        'posts', // ƒêƒÉng b√†i[m
[32m++        'comments', // Comment (c·∫ßn ƒëƒÉng nh·∫≠p m·ªõi comment ƒë∆∞·ª£c)[m
[32m++        'genres', // Xem th·ªÉ lo·∫°i nh·∫°c[m
[32m++        'artists', // Xem th√¥ng tin ngh·ªá sƒ©[m
[32m++        'albums', // Xem album[m
[32m++        'search', // T√¨m ki·∫øm c√¥ng khai[m
[32m++        'songs', // Xem b√†i h√°t (public), upload b√†i h√°t (private)[m
[32m++        'recommend', // G·ª£i √Ω (c√≥ th·ªÉ c√° nh√¢n h√≥a n·∫øu ƒëƒÉng nh·∫≠p)[m
[32m++[m
[32m++        'albumSongs'[m
[32m++    ][m
[32m++[m
[32m++    // Setup public routes[m
[32m++    publicRoutes.forEach(route => {[m
[32m++        app.use(`${API_PREFIX}/${route}`, require(`./routes/${route}Route`))[m
[32m++    })[m
[32m++[m
[32m++    // Setup protected routes v·ªõi authentication b·∫Øt bu·ªôc[m
[32m++    protectedRoutes.forEach(route => {[m
[32m++        app.use(`${API_PREFIX}/${route}`, authenticateToken, require(`./routes/${route}Route`))[m
[32m++    })[m
  }[m
  [m
  setupRoutes();[m
  [m
  // Start server[m
  async function startServer() {[m
[31m--  try {[m
[31m--    // await sequelize.sync()[m
[31m--    // console.log('‚úÖ Database synchronized successfully')[m
[32m++    try {[m
[32m++        // await sequelize.sync()[m
[32m++        // console.log('‚úÖ Database synchronized successfully')[m
  [m
[31m--    server.listen(process.env.PORT || 3000, () => {[m
[31m--      console.log(`üé∂ Music Server is running at http://localhost:${process.env.PORT || 8000}`)[m
[31m--    })[m
[32m++        server.listen(process.env.PORT || 3000, () => {[m
[32m++            console.log(`üé∂ Music Server is running at http://localhost:${process.env.PORT || 8000}`)[m
[32m++        })[m
  [m
[31m--  } catch (error) {[m
[31m--    console.error('‚ùå Error starting server:', error)[m
[31m--  }[m
[32m++    } catch (error) {[m
[32m++        console.error('‚ùå Error starting server:', error)[m
[32m++    }[m
  }[m
  [m
[31m--startServer()[m
[32m++startServer()[m
